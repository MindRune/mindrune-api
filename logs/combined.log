{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 13:10:06"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 13:10:37"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 13:14:59"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 13:14:59"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 13:16:36"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 13:28:50"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 13:28:50"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 13:33:05"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 13:33:05"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 13:48:38"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 13:48:38"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 14:01:38"}
{"level":"error","message":"404 - Not Found - /osrs/scoreboard/oauth2%7Cdiscord%7C177946696251211776 - GET - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:01:40"}
{"level":"error","message":"404 - Not Found - /osrs/scoreboard/oauth2%7Cdiscord%7C177946696251211776 - GET - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:02:30"}
{"level":"error","message":"404 - Not Found - /osrs/scoreboard/oauth2%7Cdiscord%7C177946696251211776 - GET - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:03:05"}
{"level":"error","message":"404 - Not Found - /osrs/scoreboard/oauth2%7Cdiscord%7C177946696251211776 - GET - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:03:05"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:03:05"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /user/registrationKey - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:03:08"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:10:46"}
{"level":"error","message":"404 - Not Found - /osrs/scoreboard/oauth2%7Cdiscord%7C177946696251211776 - GET - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:10:46"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:10:46"}
{"level":"error","message":"404 - Not Found - /osrs/scoreboard/oauth2%7Cdiscord%7C177946696251211776 - GET - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:10:54"}
{"level":"error","message":"404 - Not Found - /osrs/scoreboard/oauth2%7Cdiscord%7C177946696251211776 - GET - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:10:54"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:10:55"}
{"level":"error","message":"404 - Not Found - /osrs/scoreboard/oauth2%7Cdiscord%7C177946696251211776 - GET - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:11:03"}
{"level":"error","message":"404 - Not Found - /osrs/scoreboard/oauth2%7Cdiscord%7C177946696251211776 - GET - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:11:03"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:11:03"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:12:12"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:12:12"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:12:47"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:12:47"}
{"level":"error","message":"404 - Not Found - /osrs/scoreboard/oauth2%7Cdiscord%7C177946696251211776 - GET - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:12:53"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:12:53"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:12:53"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 14:15:03"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 14:15:03"}
{"level":"error","message":"404 - Not Found - /osrs/scoreboard/oauth2%7Cdiscord%7C177946696251211776 - GET - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:15:09"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 14:15:09"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:15:09"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:15:09"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 14:15:27"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 14:15:28"}
{"level":"error","message":"404 - Not Found - /osrs/scoreboard/oauth2%7Cdiscord%7C177946696251211776 - GET - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:15:32"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 14:15:32"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:15:32"}
{"level":"error","message":"500 - Unknown authentication strategy \"jwt\" - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:15:32"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 14:21:40"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 14:21:40"}
{"level":"error","message":"404 - Not Found - /osrs/scoreboard/oauth2%7Cdiscord%7C177946696251211776 - GET - ::1","service":"mindrune-api","timestamp":"2025-03-25 14:21:47"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 14:21:47"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 14:21:48"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 14:30:38"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 14:30:39"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 14:30:50"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 14:30:55"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 14:31:11"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 14:31:12"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 14:32:46"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 14:32:46"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 14:32:57"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 14:49:12"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 14:49:12"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 14:49:28"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 15:08:20"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 15:12:01"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 15:12:02"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 15:12:17"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 15:12:20"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 15:14:06"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 15:14:06"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 15:14:25"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 15:14:28"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:22:36"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:22:36"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 15:22:36"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:22:36"}
{"level":"info","message":"Spam protection check completed in 4ms","service":"mindrune-api","timestamp":"2025-03-25 15:22:36"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:22:36"}
{"level":"info","message":"Data size: 7404 bytes","service":"mindrune-api","timestamp":"2025-03-25 15:22:36"}
{"level":"info","message":"Event count: 38","service":"mindrune-api","timestamp":"2025-03-25 15:22:36"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:22:36"}
{"level":"info","message":"Processing 38 events","service":"mindrune-api","timestamp":"2025-03-25 15:22:36"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 15:22:36"}
{"level":"info","message":"Player node updated in 156ms","service":"mindrune-api","timestamp":"2025-03-25 15:22:37"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 15:22:37"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 15:22:37"}
{"level":"error","message":"Error in Neo4j operations after 399ms: Cannot merge the following node because of null property value for 'name': (:Item {name: null})","service":"mindrune-api","timestamp":"2025-03-25 15:22:37"}
{"level":"info","message":"Neo4j session closed after 400ms","service":"mindrune-api","timestamp":"2025-03-25 15:22:37"}
{"level":"error","message":"Error processing create request after 406ms: Cannot merge the following node because of null property value for 'name': (:Item {name: null})","service":"mindrune-api","timestamp":"2025-03-25 15:22:37"}
{"level":"error","message":"500 - Cannot merge the following node because of null property value for 'name': (:Item {name: null}) - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 15:22:37"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:23:36"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:23:36"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 15:23:36"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:23:36"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 15:23:36"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:23:36"}
{"level":"info","message":"Data size: 718 bytes","service":"mindrune-api","timestamp":"2025-03-25 15:23:36"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-25 15:23:36"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:23:36"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-25 15:23:36"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 15:23:36"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-25 15:23:36"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-25 15:23:36"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 15:23:36"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 198ms","service":"mindrune-api","timestamp":"2025-03-25 15:23:37"}
{"level":"info","message":"All events processed in 199ms","service":"mindrune-api","timestamp":"2025-03-25 15:23:37"}
{"level":"info","message":"Total Neo4j operation time: 292ms","service":"mindrune-api","timestamp":"2025-03-25 15:23:37"}
{"level":"info","message":"Neo4j session closed after 292ms","service":"mindrune-api","timestamp":"2025-03-25 15:23:37"}
{"level":"info","message":"Neo4j insertion completed in 292ms","service":"mindrune-api","timestamp":"2025-03-25 15:23:37"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 15:23:37"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-25 15:23:37"}
{"level":"info","message":"Total request processing time: 305ms","service":"mindrune-api","timestamp":"2025-03-25 15:23:37"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:24:36"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:24:36"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 15:24:36"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:24:36"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 15:24:36"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:24:36"}
{"level":"info","message":"Data size: 919 bytes","service":"mindrune-api","timestamp":"2025-03-25 15:24:36"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-25 15:24:36"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:24:36"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-25 15:24:36"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 15:24:36"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-25 15:24:36"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-25 15:24:36"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 15:24:36"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 91ms","service":"mindrune-api","timestamp":"2025-03-25 15:24:37"}
{"level":"info","message":"All events processed in 91ms","service":"mindrune-api","timestamp":"2025-03-25 15:24:37"}
{"level":"info","message":"Total Neo4j operation time: 184ms","service":"mindrune-api","timestamp":"2025-03-25 15:24:37"}
{"level":"info","message":"Neo4j session closed after 184ms","service":"mindrune-api","timestamp":"2025-03-25 15:24:37"}
{"level":"info","message":"Neo4j insertion completed in 184ms","service":"mindrune-api","timestamp":"2025-03-25 15:24:37"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 15:24:37"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-25 15:24:37"}
{"level":"info","message":"Total request processing time: 197ms","service":"mindrune-api","timestamp":"2025-03-25 15:24:37"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:26:46"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:26:46"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 15:26:46"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:26:46"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-25 15:26:46"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:26:46"}
{"level":"info","message":"Data size: 8711 bytes","service":"mindrune-api","timestamp":"2025-03-25 15:26:46"}
{"level":"info","message":"Event count: 45","service":"mindrune-api","timestamp":"2025-03-25 15:26:46"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:26:46"}
{"level":"info","message":"Processing 45 events","service":"mindrune-api","timestamp":"2025-03-25 15:26:46"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 15:26:46"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-25 15:26:46"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 15:26:46"}
{"level":"info","message":"Processing batch of 7 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 15:26:46"}
{"level":"error","message":"Error in Neo4j operations after 247ms: Cannot merge the following node because of null property value for 'name': (:Item {name: null})","service":"mindrune-api","timestamp":"2025-03-25 15:26:47"}
{"level":"info","message":"Neo4j session closed after 248ms","service":"mindrune-api","timestamp":"2025-03-25 15:26:47"}
{"level":"error","message":"Error processing create request after 250ms: Cannot merge the following node because of null property value for 'name': (:Item {name: null})","service":"mindrune-api","timestamp":"2025-03-25 15:26:47"}
{"level":"error","message":"500 - Cannot merge the following node because of null property value for 'name': (:Item {name: null}) - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 15:26:47"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:27:46"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:27:46"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 15:27:46"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:27:46"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-25 15:27:46"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:27:46"}
{"level":"info","message":"Data size: 1297 bytes","service":"mindrune-api","timestamp":"2025-03-25 15:27:46"}
{"level":"info","message":"Event count: 6","service":"mindrune-api","timestamp":"2025-03-25 15:27:46"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:27:46"}
{"level":"info","message":"Processing 6 events","service":"mindrune-api","timestamp":"2025-03-25 15:27:46"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 15:27:46"}
{"level":"info","message":"Player node updated in 134ms","service":"mindrune-api","timestamp":"2025-03-25 15:27:46"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-25 15:27:46"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 15:27:46"}
{"level":"error","message":"Error in Neo4j operations after 256ms: Invalid input '|': expected an expression, ',' or ']' (line 4, column 41 (offset: 167))\n\"      WHERE e.uuid IN [event.event_uuid | event IN $events WHERE event.hasLocation = true]\"\n                                         ^","service":"mindrune-api","timestamp":"2025-03-25 15:27:47"}
{"level":"info","message":"Neo4j session closed after 256ms","service":"mindrune-api","timestamp":"2025-03-25 15:27:47"}
{"level":"error","message":"Error processing create request after 258ms: Invalid input '|': expected an expression, ',' or ']' (line 4, column 41 (offset: 167))\n\"      WHERE e.uuid IN [event.event_uuid | event IN $events WHERE event.hasLocation = true]\"\n                                         ^","service":"mindrune-api","timestamp":"2025-03-25 15:27:47"}
{"level":"error","message":"500 - Invalid input '|': expected an expression, ',' or ']' (line 4, column 41 (offset: 167))\n\"      WHERE e.uuid IN [event.event_uuid | event IN $events WHERE event.hasLocation = true]\"\n                                         ^ - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 15:27:47"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 15:40:56"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 15:40:56"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 15:41:46"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:41:46"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:41:46"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 15:41:46"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:41:46"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-25 15:41:46"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:41:46"}
{"level":"info","message":"Data size: 8121 bytes","service":"mindrune-api","timestamp":"2025-03-25 15:41:46"}
{"level":"info","message":"Event count: 42","service":"mindrune-api","timestamp":"2025-03-25 15:41:46"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:41:46"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 15:41:46"}
{"level":"info","message":"Processing 42 events","service":"mindrune-api","timestamp":"2025-03-25 15:41:46"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 15:41:46"}
{"level":"info","message":"Player node updated in 639ms","service":"mindrune-api","timestamp":"2025-03-25 15:41:47"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 15:41:47"}
{"level":"info","message":"Processing batch of 9 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 15:41:47"}
{"level":"error","message":"Error in Neo4j operations after 1164ms: Invalid input '|': expected an expression, ',' or ']' (line 4, column 41 (offset: 167))\n\"      WHERE e.uuid IN [event.event_uuid | event IN $events WHERE event.hasLocation = true]\"\n                                         ^","service":"mindrune-api","timestamp":"2025-03-25 15:41:48"}
{"level":"info","message":"Neo4j session closed after 1165ms","service":"mindrune-api","timestamp":"2025-03-25 15:41:48"}
{"level":"error","message":"Error processing create request after 1170ms: Invalid input '|': expected an expression, ',' or ']' (line 4, column 41 (offset: 167))\n\"      WHERE e.uuid IN [event.event_uuid | event IN $events WHERE event.hasLocation = true]\"\n                                         ^","service":"mindrune-api","timestamp":"2025-03-25 15:41:48"}
{"level":"error","message":"500 - Invalid input '|': expected an expression, ',' or ']' (line 4, column 41 (offset: 167))\n\"      WHERE e.uuid IN [event.event_uuid | event IN $events WHERE event.hasLocation = true]\"\n                                         ^ - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 15:41:48"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:42:46"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:42:46"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 15:42:46"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:42:46"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 15:42:46"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:42:46"}
{"level":"info","message":"Data size: 902 bytes","service":"mindrune-api","timestamp":"2025-03-25 15:42:46"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-25 15:42:46"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:42:46"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-25 15:42:46"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 15:42:46"}
{"level":"info","message":"Player node updated in 171ms","service":"mindrune-api","timestamp":"2025-03-25 15:42:47"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-25 15:42:47"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 15:42:47"}
{"level":"error","message":"Error in Neo4j operations after 675ms: Invalid input '|': expected an expression, ',' or ']' (line 4, column 41 (offset: 167))\n\"      WHERE e.uuid IN [event.event_uuid | event IN $events WHERE event.hasLocation = true]\"\n                                         ^","service":"mindrune-api","timestamp":"2025-03-25 15:42:47"}
{"level":"info","message":"Neo4j session closed after 676ms","service":"mindrune-api","timestamp":"2025-03-25 15:42:47"}
{"level":"error","message":"Error processing create request after 679ms: Invalid input '|': expected an expression, ',' or ']' (line 4, column 41 (offset: 167))\n\"      WHERE e.uuid IN [event.event_uuid | event IN $events WHERE event.hasLocation = true]\"\n                                         ^","service":"mindrune-api","timestamp":"2025-03-25 15:42:47"}
{"level":"error","message":"500 - Invalid input '|': expected an expression, ',' or ']' (line 4, column 41 (offset: 167))\n\"      WHERE e.uuid IN [event.event_uuid | event IN $events WHERE event.hasLocation = true]\"\n                                         ^ - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 15:42:47"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 15:43:13"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 15:43:13"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 15:43:46"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:43:46"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:43:46"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 15:43:46"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:43:46"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-25 15:43:46"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:43:46"}
{"level":"info","message":"Data size: 8394 bytes","service":"mindrune-api","timestamp":"2025-03-25 15:43:46"}
{"level":"info","message":"Event count: 43","service":"mindrune-api","timestamp":"2025-03-25 15:43:46"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:43:46"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 15:43:46"}
{"level":"info","message":"Processing 43 events","service":"mindrune-api","timestamp":"2025-03-25 15:43:46"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 15:43:46"}
{"level":"info","message":"Player node updated in 347ms","service":"mindrune-api","timestamp":"2025-03-25 15:43:47"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 15:43:47"}
{"level":"info","message":"Processing batch of 13 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 15:43:47"}
{"level":"info","message":"Completed batch of 13 HIT_SPLAT events in 203ms","service":"mindrune-api","timestamp":"2025-03-25 15:43:47"}
{"level":"info","message":"Processing batch of 7 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 15:43:47"}
{"level":"error","message":"Error in Neo4j operations after 705ms: Invalid input '|': expected an expression, ',' or ']' (line 4, column 41 (offset: 167))\n\"      WHERE e.uuid IN [event.event_uuid | event IN $events WHERE event.hasLocation = true]\"\n                                         ^","service":"mindrune-api","timestamp":"2025-03-25 15:43:47"}
{"level":"info","message":"Neo4j session closed after 706ms","service":"mindrune-api","timestamp":"2025-03-25 15:43:47"}
{"level":"error","message":"Error processing create request after 711ms: Invalid input '|': expected an expression, ',' or ']' (line 4, column 41 (offset: 167))\n\"      WHERE e.uuid IN [event.event_uuid | event IN $events WHERE event.hasLocation = true]\"\n                                         ^","service":"mindrune-api","timestamp":"2025-03-25 15:43:47"}
{"level":"error","message":"500 - Invalid input '|': expected an expression, ',' or ']' (line 4, column 41 (offset: 167))\n\"      WHERE e.uuid IN [event.event_uuid | event IN $events WHERE event.hasLocation = true]\"\n                                         ^ - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 15:43:47"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:44:46"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:44:46"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 15:44:46"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:44:46"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-25 15:44:46"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:44:46"}
{"level":"info","message":"Data size: 718 bytes","service":"mindrune-api","timestamp":"2025-03-25 15:44:46"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-25 15:44:46"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:44:46"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-25 15:44:46"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 15:44:46"}
{"level":"info","message":"Player node updated in 222ms","service":"mindrune-api","timestamp":"2025-03-25 15:44:47"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-25 15:44:47"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 15:44:47"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 339ms","service":"mindrune-api","timestamp":"2025-03-25 15:44:47"}
{"level":"info","message":"All events processed in 339ms","service":"mindrune-api","timestamp":"2025-03-25 15:44:47"}
{"level":"info","message":"Total Neo4j operation time: 562ms","service":"mindrune-api","timestamp":"2025-03-25 15:44:47"}
{"level":"info","message":"Neo4j session closed after 563ms","service":"mindrune-api","timestamp":"2025-03-25 15:44:47"}
{"level":"info","message":"Neo4j insertion completed in 563ms","service":"mindrune-api","timestamp":"2025-03-25 15:44:47"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 15:44:47"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-25 15:44:47"}
{"level":"info","message":"Total request processing time: 579ms","service":"mindrune-api","timestamp":"2025-03-25 15:44:47"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:45:46"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:45:46"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 15:45:46"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:45:46"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 15:45:46"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:45:46"}
{"level":"info","message":"Data size: 316 bytes","service":"mindrune-api","timestamp":"2025-03-25 15:45:46"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-25 15:45:46"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:45:46"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-25 15:45:46"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 15:45:46"}
{"level":"info","message":"Player node updated in 166ms","service":"mindrune-api","timestamp":"2025-03-25 15:45:47"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-25 15:45:47"}
{"level":"info","message":"Processing batch of 1 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 15:45:47"}
{"level":"info","message":"Completed batch of 1 HIT_SPLAT events in 247ms","service":"mindrune-api","timestamp":"2025-03-25 15:45:47"}
{"level":"info","message":"All events processed in 247ms","service":"mindrune-api","timestamp":"2025-03-25 15:45:47"}
{"level":"info","message":"Total Neo4j operation time: 416ms","service":"mindrune-api","timestamp":"2025-03-25 15:45:47"}
{"level":"info","message":"Neo4j session closed after 416ms","service":"mindrune-api","timestamp":"2025-03-25 15:45:47"}
{"level":"info","message":"Neo4j insertion completed in 416ms","service":"mindrune-api","timestamp":"2025-03-25 15:45:47"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 15:45:47"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-25 15:45:47"}
{"level":"info","message":"Total request processing time: 432ms","service":"mindrune-api","timestamp":"2025-03-25 15:45:47"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 15:49:39"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 15:49:39"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 15:50:46"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:50:46"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:50:46"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 15:50:46"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:50:46"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-25 15:50:46"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:50:46"}
{"level":"info","message":"Data size: 6288 bytes","service":"mindrune-api","timestamp":"2025-03-25 15:50:46"}
{"level":"info","message":"Event count: 33","service":"mindrune-api","timestamp":"2025-03-25 15:50:46"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 15:50:46"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 15:50:46"}
{"level":"info","message":"Processing 33 events","service":"mindrune-api","timestamp":"2025-03-25 15:50:46"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 15:50:46"}
{"level":"info","message":"Player node updated in 350ms","service":"mindrune-api","timestamp":"2025-03-25 15:50:47"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 15:50:47"}
{"level":"info","message":"Processing batch of 12 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 15:50:47"}
{"level":"info","message":"Completed batch of 12 MENU_CLICK events in 487ms","service":"mindrune-api","timestamp":"2025-03-25 15:50:47"}
{"level":"info","message":"Processing batch of 13 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 15:50:47"}
{"level":"info","message":"Completed batch of 13 XP_GAIN events in 151ms","service":"mindrune-api","timestamp":"2025-03-25 15:50:47"}
{"level":"info","message":"Processing batch of 5 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 15:50:47"}
{"level":"info","message":"Completed batch of 5 HIT_SPLAT events in 250ms","service":"mindrune-api","timestamp":"2025-03-25 15:50:48"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 15:50:48"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 230ms","service":"mindrune-api","timestamp":"2025-03-25 15:50:48"}
{"level":"info","message":"All events processed in 1120ms","service":"mindrune-api","timestamp":"2025-03-25 15:50:48"}
{"level":"info","message":"Total Neo4j operation time: 1474ms","service":"mindrune-api","timestamp":"2025-03-25 15:50:48"}
{"level":"info","message":"Neo4j session closed after 1474ms","service":"mindrune-api","timestamp":"2025-03-25 15:50:48"}
{"level":"info","message":"Neo4j insertion completed in 1475ms","service":"mindrune-api","timestamp":"2025-03-25 15:50:48"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 15:50:48"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-25 15:50:48"}
{"level":"info","message":"Total request processing time: 1491ms","service":"mindrune-api","timestamp":"2025-03-25 15:50:48"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 16:31:50"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 16:31:50"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 16:32:54"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 16:32:54"}
{"level":"error","message":"404 - Not Found - /image/mind-rune.webp - GET - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 16:34:30"}
{"level":"error","message":"404 - Not Found - /favicon.ico - GET - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 16:34:30"}
{"level":"error","message":"404 - Not Found - /image/mind-rune - GET - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 16:49:49"}
{"level":"error","message":"404 - Not Found - /favicon.ico - GET - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 16:49:49"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 16:50:50"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 16:50:51"}
{"level":"error","message":"404 - Not Found - /image/mind-rune - GET - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 16:50:54"}
{"level":"error","message":"404 - Not Found - /favicon.ico - GET - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 16:50:55"}
{"level":"error","message":"404 - Not Found - /image/mind-rune.webp - GET - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 16:54:30"}
{"level":"error","message":"404 - Not Found - /favicon.ico - GET - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 16:54:30"}
{"level":"error","message":"500 - Image not found - /img/mind-rune.webp - GET - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 16:55:35"}
{"level":"error","message":"404 - Not Found - /favicon.ico - GET - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 16:55:35"}
{"level":"error","message":"404 - Not Found - /favicon.ico - GET - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-25 16:55:54"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 16:57:00"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 16:57:06"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 17:39:52"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 17:39:53"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 17:41:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:41:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:41:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 17:41:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:41:12"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-25 17:41:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:41:12"}
{"level":"info","message":"Data size: 14124 bytes","service":"mindrune-api","timestamp":"2025-03-25 17:41:12"}
{"level":"info","message":"Event count: 74","service":"mindrune-api","timestamp":"2025-03-25 17:41:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:41:12"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 17:41:12"}
{"level":"info","message":"Processing 74 events","service":"mindrune-api","timestamp":"2025-03-25 17:41:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 17:41:12"}
{"level":"info","message":"Player node updated in 400ms","service":"mindrune-api","timestamp":"2025-03-25 17:41:13"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 17:41:13"}
{"level":"info","message":"Processing batch of 25 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 17:41:13"}
{"level":"info","message":"Completed batch of 25 MENU_CLICK events in 445ms","service":"mindrune-api","timestamp":"2025-03-25 17:41:13"}
{"level":"info","message":"Processing batch of 33 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 17:41:13"}
{"level":"info","message":"Completed batch of 33 XP_GAIN events in 136ms","service":"mindrune-api","timestamp":"2025-03-25 17:41:13"}
{"level":"info","message":"Processing batch of 14 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 17:41:13"}
{"level":"info","message":"Completed batch of 14 HIT_SPLAT events in 252ms","service":"mindrune-api","timestamp":"2025-03-25 17:41:13"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 17:41:13"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 216ms","service":"mindrune-api","timestamp":"2025-03-25 17:41:14"}
{"level":"info","message":"All events processed in 1050ms","service":"mindrune-api","timestamp":"2025-03-25 17:41:14"}
{"level":"info","message":"Total Neo4j operation time: 1453ms","service":"mindrune-api","timestamp":"2025-03-25 17:41:14"}
{"level":"info","message":"Neo4j session closed after 1453ms","service":"mindrune-api","timestamp":"2025-03-25 17:41:14"}
{"level":"info","message":"Neo4j insertion completed in 1454ms","service":"mindrune-api","timestamp":"2025-03-25 17:41:14"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 17:41:14"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-25 17:41:14"}
{"level":"info","message":"Total request processing time: 1470ms","service":"mindrune-api","timestamp":"2025-03-25 17:41:14"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:42:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:42:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 17:42:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:42:12"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-25 17:42:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:42:12"}
{"level":"info","message":"Data size: 7454 bytes","service":"mindrune-api","timestamp":"2025-03-25 17:42:12"}
{"level":"info","message":"Event count: 39","service":"mindrune-api","timestamp":"2025-03-25 17:42:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:42:12"}
{"level":"info","message":"Processing 39 events","service":"mindrune-api","timestamp":"2025-03-25 17:42:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 17:42:12"}
{"level":"info","message":"Player node updated in 103ms","service":"mindrune-api","timestamp":"2025-03-25 17:42:12"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 17:42:12"}
{"level":"info","message":"Processing batch of 14 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 17:42:12"}
{"level":"info","message":"Completed batch of 14 MENU_CLICK events in 458ms","service":"mindrune-api","timestamp":"2025-03-25 17:42:13"}
{"level":"info","message":"Processing batch of 7 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 17:42:13"}
{"level":"info","message":"Completed batch of 7 HIT_SPLAT events in 214ms","service":"mindrune-api","timestamp":"2025-03-25 17:42:13"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 17:42:13"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 225ms","service":"mindrune-api","timestamp":"2025-03-25 17:42:13"}
{"level":"info","message":"Processing batch of 17 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 17:42:13"}
{"level":"info","message":"Completed batch of 17 XP_GAIN events in 124ms","service":"mindrune-api","timestamp":"2025-03-25 17:42:13"}
{"level":"info","message":"All events processed in 1022ms","service":"mindrune-api","timestamp":"2025-03-25 17:42:13"}
{"level":"info","message":"Total Neo4j operation time: 1127ms","service":"mindrune-api","timestamp":"2025-03-25 17:42:13"}
{"level":"info","message":"Neo4j session closed after 1127ms","service":"mindrune-api","timestamp":"2025-03-25 17:42:13"}
{"level":"info","message":"Neo4j insertion completed in 1128ms","service":"mindrune-api","timestamp":"2025-03-25 17:42:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 17:42:13"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-25 17:42:13"}
{"level":"info","message":"Total request processing time: 1142ms","service":"mindrune-api","timestamp":"2025-03-25 17:42:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Spam protection check completed in 0ms","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Data size: 10954 bytes","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Event count: 56","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Processing 56 events","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Player node updated in 104ms","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 163ms","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 17:43:12"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 394ms","service":"mindrune-api","timestamp":"2025-03-25 17:43:13"}
{"level":"info","message":"Processing batch of 18 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 17:43:13"}
{"level":"info","message":"Completed batch of 18 HIT_SPLAT events in 96ms","service":"mindrune-api","timestamp":"2025-03-25 17:43:13"}
{"level":"info","message":"Processing batch of 32 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 17:43:13"}
{"level":"info","message":"Completed batch of 32 XP_GAIN events in 128ms","service":"mindrune-api","timestamp":"2025-03-25 17:43:13"}
{"level":"info","message":"All events processed in 783ms","service":"mindrune-api","timestamp":"2025-03-25 17:43:13"}
{"level":"info","message":"Total Neo4j operation time: 887ms","service":"mindrune-api","timestamp":"2025-03-25 17:43:13"}
{"level":"info","message":"Neo4j session closed after 887ms","service":"mindrune-api","timestamp":"2025-03-25 17:43:13"}
{"level":"info","message":"Neo4j insertion completed in 887ms","service":"mindrune-api","timestamp":"2025-03-25 17:43:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 17:43:13"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-25 17:43:13"}
{"level":"info","message":"Total request processing time: 901ms","service":"mindrune-api","timestamp":"2025-03-25 17:43:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Data size: 715 bytes","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 220ms","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"All events processed in 221ms","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Total Neo4j operation time: 314ms","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Neo4j session closed after 314ms","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Neo4j insertion completed in 314ms","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Total request processing time: 328ms","service":"mindrune-api","timestamp":"2025-03-25 17:44:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Spam protection check completed in 0ms","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Data size: 916 bytes","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 92ms","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"All events processed in 93ms","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Total Neo4j operation time: 185ms","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Neo4j session closed after 185ms","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Neo4j insertion completed in 186ms","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Total request processing time: 198ms","service":"mindrune-api","timestamp":"2025-03-25 17:45:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Data size: 718 bytes","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 90ms","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"All events processed in 91ms","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Total Neo4j operation time: 183ms","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Neo4j session closed after 183ms","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Neo4j insertion completed in 183ms","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Total request processing time: 197ms","service":"mindrune-api","timestamp":"2025-03-25 17:46:12"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 17:48:31"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 17:48:31"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 17:49:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:49:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:49:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 17:49:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:49:12"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-25 17:49:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:49:12"}
{"level":"info","message":"Data size: 9251 bytes","service":"mindrune-api","timestamp":"2025-03-25 17:49:12"}
{"level":"info","message":"Event count: 48","service":"mindrune-api","timestamp":"2025-03-25 17:49:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:49:12"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 17:49:12"}
{"level":"info","message":"Processing 48 events","service":"mindrune-api","timestamp":"2025-03-25 17:49:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 17:49:12"}
{"level":"info","message":"Player node updated in 361ms","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"Processing batch of 14 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"Completed batch of 14 MENU_CLICK events in 163ms","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"Processing batch of 22 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"Completed batch of 22 XP_GAIN events in 125ms","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"Processing batch of 9 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"Completed batch of 9 HIT_SPLAT events in 93ms","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 162ms","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"All events processed in 544ms","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"Total Neo4j operation time: 908ms","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"Neo4j session closed after 908ms","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"Neo4j insertion completed in 909ms","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"Total request processing time: 926ms","service":"mindrune-api","timestamp":"2025-03-25 17:49:13"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 17:52:05"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 17:52:05"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 17:52:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:52:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:52:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 17:52:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:52:12"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 17:52:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:52:12"}
{"level":"info","message":"Data size: 1648 bytes","service":"mindrune-api","timestamp":"2025-03-25 17:52:12"}
{"level":"info","message":"Event count: 8","service":"mindrune-api","timestamp":"2025-03-25 17:52:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:52:12"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 17:52:12"}
{"level":"info","message":"Processing 8 events","service":"mindrune-api","timestamp":"2025-03-25 17:52:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 17:52:12"}
{"level":"info","message":"Player node updated in 359ms","service":"mindrune-api","timestamp":"2025-03-25 17:52:13"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-25 17:52:13"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 17:52:13"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 127ms","service":"mindrune-api","timestamp":"2025-03-25 17:52:13"}
{"level":"info","message":"Processing batch of 4 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 17:52:13"}
{"level":"info","message":"Completed batch of 4 XP_GAIN events in 209ms","service":"mindrune-api","timestamp":"2025-03-25 17:52:13"}
{"level":"info","message":"Processing batch of 2 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 17:52:13"}
{"level":"info","message":"Completed batch of 2 HIT_SPLAT events in 93ms","service":"mindrune-api","timestamp":"2025-03-25 17:52:13"}
{"level":"info","message":"All events processed in 430ms","service":"mindrune-api","timestamp":"2025-03-25 17:52:13"}
{"level":"info","message":"Total Neo4j operation time: 792ms","service":"mindrune-api","timestamp":"2025-03-25 17:52:13"}
{"level":"info","message":"Neo4j session closed after 792ms","service":"mindrune-api","timestamp":"2025-03-25 17:52:13"}
{"level":"info","message":"Neo4j insertion completed in 793ms","service":"mindrune-api","timestamp":"2025-03-25 17:52:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 17:52:13"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-25 17:52:13"}
{"level":"info","message":"Total request processing time: 808ms","service":"mindrune-api","timestamp":"2025-03-25 17:52:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Spam protection check completed in 4ms","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Data size: 10337 bytes","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Event count: 53","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Processing 53 events","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Processing batch of 15 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Completed batch of 15 HIT_SPLAT events in 218ms","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Processing batch of 32 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 17:53:12"}
{"level":"info","message":"Completed batch of 32 XP_GAIN events in 98ms","service":"mindrune-api","timestamp":"2025-03-25 17:53:13"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 17:53:13"}
{"level":"info","message":"Completed batch of 5 MENU_CLICK events in 339ms","service":"mindrune-api","timestamp":"2025-03-25 17:53:13"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 17:53:13"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 163ms","service":"mindrune-api","timestamp":"2025-03-25 17:53:13"}
{"level":"info","message":"All events processed in 819ms","service":"mindrune-api","timestamp":"2025-03-25 17:53:13"}
{"level":"info","message":"Total Neo4j operation time: 921ms","service":"mindrune-api","timestamp":"2025-03-25 17:53:13"}
{"level":"info","message":"Neo4j session closed after 922ms","service":"mindrune-api","timestamp":"2025-03-25 17:53:13"}
{"level":"info","message":"Neo4j insertion completed in 923ms","service":"mindrune-api","timestamp":"2025-03-25 17:53:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 17:53:13"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-25 17:53:13"}
{"level":"info","message":"Total request processing time: 939ms","service":"mindrune-api","timestamp":"2025-03-25 17:53:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Data size: 4143 bytes","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Event count: 21","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Processing 21 events","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Processing batch of 7 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Completed batch of 7 HIT_SPLAT events in 92ms","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Processing batch of 9 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Completed batch of 9 XP_GAIN events in 94ms","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 17:54:12"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 296ms","service":"mindrune-api","timestamp":"2025-03-25 17:54:13"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 17:54:13"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 163ms","service":"mindrune-api","timestamp":"2025-03-25 17:54:13"}
{"level":"info","message":"All events processed in 648ms","service":"mindrune-api","timestamp":"2025-03-25 17:54:13"}
{"level":"info","message":"Total Neo4j operation time: 749ms","service":"mindrune-api","timestamp":"2025-03-25 17:54:13"}
{"level":"info","message":"Neo4j session closed after 749ms","service":"mindrune-api","timestamp":"2025-03-25 17:54:13"}
{"level":"info","message":"Neo4j insertion completed in 750ms","service":"mindrune-api","timestamp":"2025-03-25 17:54:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 17:54:13"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-25 17:54:13"}
{"level":"info","message":"Total request processing time: 763ms","service":"mindrune-api","timestamp":"2025-03-25 17:54:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Data size: 919 bytes","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 90ms","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"All events processed in 90ms","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Total Neo4j operation time: 182ms","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Neo4j session closed after 182ms","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Neo4j insertion completed in 183ms","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Total request processing time: 196ms","service":"mindrune-api","timestamp":"2025-03-25 17:55:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Data size: 718 bytes","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 91ms","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"All events processed in 91ms","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Total Neo4j operation time: 183ms","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Neo4j session closed after 183ms","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Neo4j insertion completed in 183ms","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"SQL insertion completed in 8ms","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Total request processing time: 194ms","service":"mindrune-api","timestamp":"2025-03-25 17:56:12"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 17:56:39"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 17:56:39"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 17:57:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:57:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:57:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 17:57:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:57:12"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-25 17:57:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:57:12"}
{"level":"info","message":"Data size: 10203 bytes","service":"mindrune-api","timestamp":"2025-03-25 17:57:12"}
{"level":"info","message":"Event count: 53","service":"mindrune-api","timestamp":"2025-03-25 17:57:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:57:12"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 17:57:12"}
{"level":"info","message":"Processing 53 events","service":"mindrune-api","timestamp":"2025-03-25 17:57:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 17:57:12"}
{"level":"info","message":"Player node updated in 365ms","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"Processing batch of 10 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"Completed batch of 10 HIT_SPLAT events in 230ms","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"Processing batch of 16 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"Completed batch of 16 MENU_CLICK events in 352ms","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"Processing batch of 25 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"Completed batch of 25 XP_GAIN events in 98ms","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 162ms","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"All events processed in 845ms","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"Total Neo4j operation time: 1213ms","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"Neo4j session closed after 1213ms","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"Neo4j insertion completed in 1216ms","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"Total request processing time: 1232ms","service":"mindrune-api","timestamp":"2025-03-25 17:57:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Data size: 919 bytes","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 222ms","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"All events processed in 222ms","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Total Neo4j operation time: 324ms","service":"mindrune-api","timestamp":"2025-03-25 17:58:12"}
{"level":"info","message":"Neo4j session closed after 325ms","service":"mindrune-api","timestamp":"2025-03-25 17:58:13"}
{"level":"info","message":"Neo4j insertion completed in 326ms","service":"mindrune-api","timestamp":"2025-03-25 17:58:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 17:58:13"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-25 17:58:13"}
{"level":"info","message":"Total request processing time: 339ms","service":"mindrune-api","timestamp":"2025-03-25 17:58:13"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 17:59:11"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 17:59:11"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 17:59:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:59:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:59:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 17:59:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:59:12"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-25 17:59:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:59:12"}
{"level":"info","message":"Data size: 715 bytes","service":"mindrune-api","timestamp":"2025-03-25 17:59:12"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-25 17:59:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 17:59:12"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 17:59:12"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-25 17:59:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 17:59:12"}
{"level":"info","message":"Player node updated in 351ms","service":"mindrune-api","timestamp":"2025-03-25 17:59:13"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-25 17:59:13"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 17:59:13"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 94ms","service":"mindrune-api","timestamp":"2025-03-25 17:59:13"}
{"level":"info","message":"All events processed in 95ms","service":"mindrune-api","timestamp":"2025-03-25 17:59:13"}
{"level":"info","message":"Total Neo4j operation time: 449ms","service":"mindrune-api","timestamp":"2025-03-25 17:59:13"}
{"level":"info","message":"Neo4j session closed after 449ms","service":"mindrune-api","timestamp":"2025-03-25 17:59:13"}
{"level":"info","message":"Neo4j insertion completed in 450ms","service":"mindrune-api","timestamp":"2025-03-25 17:59:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 17:59:13"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-25 17:59:13"}
{"level":"info","message":"Total request processing time: 464ms","service":"mindrune-api","timestamp":"2025-03-25 17:59:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:00:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:00:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 18:00:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:00:12"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 18:00:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:00:12"}
{"level":"info","message":"Data size: 8107 bytes","service":"mindrune-api","timestamp":"2025-03-25 18:00:12"}
{"level":"info","message":"Event count: 42","service":"mindrune-api","timestamp":"2025-03-25 18:00:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:00:12"}
{"level":"info","message":"Processing 42 events","service":"mindrune-api","timestamp":"2025-03-25 18:00:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 18:00:12"}
{"level":"info","message":"Player node updated in 108ms","service":"mindrune-api","timestamp":"2025-03-25 18:00:12"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 18:00:12"}
{"level":"info","message":"Processing batch of 9 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 18:00:12"}
{"level":"info","message":"Completed batch of 9 HIT_SPLAT events in 229ms","service":"mindrune-api","timestamp":"2025-03-25 18:00:13"}
{"level":"info","message":"Processing batch of 14 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 18:00:13"}
{"level":"info","message":"Completed batch of 14 MENU_CLICK events in 134ms","service":"mindrune-api","timestamp":"2025-03-25 18:00:13"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 18:00:13"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 95ms","service":"mindrune-api","timestamp":"2025-03-25 18:00:13"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 18:00:13"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 214ms","service":"mindrune-api","timestamp":"2025-03-25 18:00:13"}
{"level":"info","message":"All events processed in 674ms","service":"mindrune-api","timestamp":"2025-03-25 18:00:13"}
{"level":"info","message":"Total Neo4j operation time: 784ms","service":"mindrune-api","timestamp":"2025-03-25 18:00:13"}
{"level":"info","message":"Neo4j session closed after 784ms","service":"mindrune-api","timestamp":"2025-03-25 18:00:13"}
{"level":"info","message":"Neo4j insertion completed in 785ms","service":"mindrune-api","timestamp":"2025-03-25 18:00:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 18:00:13"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-25 18:00:13"}
{"level":"info","message":"Total request processing time: 799ms","service":"mindrune-api","timestamp":"2025-03-25 18:00:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Data size: 517 bytes","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Processing batch of 2 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Completed batch of 2 HIT_SPLAT events in 208ms","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"All events processed in 209ms","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Total Neo4j operation time: 310ms","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Neo4j session closed after 310ms","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Neo4j insertion completed in 311ms","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Total request processing time: 325ms","service":"mindrune-api","timestamp":"2025-03-25 18:01:12"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 18:05:33"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 18:05:33"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 18:06:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:06:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:06:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 18:06:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:06:12"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-25 18:06:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:06:12"}
{"level":"info","message":"Data size: 6611 bytes","service":"mindrune-api","timestamp":"2025-03-25 18:06:12"}
{"level":"info","message":"Event count: 34","service":"mindrune-api","timestamp":"2025-03-25 18:06:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:06:12"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 18:06:12"}
{"level":"info","message":"Processing 34 events","service":"mindrune-api","timestamp":"2025-03-25 18:06:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 18:06:12"}
{"level":"info","message":"Player node updated in 361ms","service":"mindrune-api","timestamp":"2025-03-25 18:06:13"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-25 18:06:13"}
{"level":"info","message":"Processing batch of 6 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 18:06:13"}
{"level":"info","message":"Completed batch of 6 MENU_CLICK events in 382ms","service":"mindrune-api","timestamp":"2025-03-25 18:06:13"}
{"level":"info","message":"Processing batch of 20 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 18:06:13"}
{"level":"info","message":"Completed batch of 20 XP_GAIN events in 95ms","service":"mindrune-api","timestamp":"2025-03-25 18:06:13"}
{"level":"info","message":"Processing batch of 8 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 18:06:13"}
{"level":"info","message":"Completed batch of 8 HIT_SPLAT events in 95ms","service":"mindrune-api","timestamp":"2025-03-25 18:06:13"}
{"level":"info","message":"All events processed in 573ms","service":"mindrune-api","timestamp":"2025-03-25 18:06:13"}
{"level":"info","message":"Total Neo4j operation time: 939ms","service":"mindrune-api","timestamp":"2025-03-25 18:06:13"}
{"level":"info","message":"Neo4j session closed after 939ms","service":"mindrune-api","timestamp":"2025-03-25 18:06:13"}
{"level":"info","message":"Neo4j insertion completed in 940ms","service":"mindrune-api","timestamp":"2025-03-25 18:06:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 18:06:13"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-25 18:06:13"}
{"level":"info","message":"Total request processing time: 954ms","service":"mindrune-api","timestamp":"2025-03-25 18:06:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:07:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:07:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 18:07:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:07:12"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 18:07:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:07:12"}
{"level":"info","message":"Data size: 1616 bytes","service":"mindrune-api","timestamp":"2025-03-25 18:07:12"}
{"level":"info","message":"Event count: 8","service":"mindrune-api","timestamp":"2025-03-25 18:07:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:07:12"}
{"level":"info","message":"Processing 8 events","service":"mindrune-api","timestamp":"2025-03-25 18:07:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 18:07:12"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-25 18:07:12"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 18:07:12"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 18:07:12"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 347ms","service":"mindrune-api","timestamp":"2025-03-25 18:07:13"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 18:07:13"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 129ms","service":"mindrune-api","timestamp":"2025-03-25 18:07:13"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 18:07:13"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 161ms","service":"mindrune-api","timestamp":"2025-03-25 18:07:13"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 18:07:13"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 90ms","service":"mindrune-api","timestamp":"2025-03-25 18:07:13"}
{"level":"info","message":"All events processed in 728ms","service":"mindrune-api","timestamp":"2025-03-25 18:07:13"}
{"level":"info","message":"Total Neo4j operation time: 829ms","service":"mindrune-api","timestamp":"2025-03-25 18:07:13"}
{"level":"info","message":"Neo4j session closed after 830ms","service":"mindrune-api","timestamp":"2025-03-25 18:07:13"}
{"level":"info","message":"Neo4j insertion completed in 831ms","service":"mindrune-api","timestamp":"2025-03-25 18:07:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 18:07:13"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-25 18:07:13"}
{"level":"info","message":"Total request processing time: 842ms","service":"mindrune-api","timestamp":"2025-03-25 18:07:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Data size: 919 bytes","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 91ms","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"All events processed in 91ms","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Total Neo4j operation time: 183ms","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Neo4j session closed after 183ms","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Neo4j insertion completed in 184ms","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Total request processing time: 198ms","service":"mindrune-api","timestamp":"2025-03-25 18:08:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Data size: 712 bytes","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 92ms","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"All events processed in 93ms","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Total Neo4j operation time: 184ms","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Neo4j session closed after 184ms","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Neo4j insertion completed in 186ms","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Total request processing time: 199ms","service":"mindrune-api","timestamp":"2025-03-25 18:09:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Data size: 517 bytes","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Processing batch of 2 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Completed batch of 2 HIT_SPLAT events in 90ms","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"All events processed in 90ms","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Total Neo4j operation time: 187ms","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Neo4j session closed after 187ms","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Neo4j insertion completed in 187ms","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Total request processing time: 200ms","service":"mindrune-api","timestamp":"2025-03-25 18:10:12"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 18:12:01"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 18:12:02"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 18:13:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:13:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:13:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 18:13:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:13:12"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 18:13:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:13:12"}
{"level":"info","message":"Data size: 9968 bytes","service":"mindrune-api","timestamp":"2025-03-25 18:13:12"}
{"level":"info","message":"Event count: 51","service":"mindrune-api","timestamp":"2025-03-25 18:13:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:13:12"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 18:13:12"}
{"level":"info","message":"Processing 51 events","service":"mindrune-api","timestamp":"2025-03-25 18:13:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 18:13:12"}
{"level":"info","message":"Player node updated in 364ms","service":"mindrune-api","timestamp":"2025-03-25 18:13:13"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 18:13:13"}
{"level":"info","message":"Processing batch of 7 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 18:13:13"}
{"level":"info","message":"Completed batch of 7 MENU_CLICK events in 388ms","service":"mindrune-api","timestamp":"2025-03-25 18:13:13"}
{"level":"info","message":"Processing batch of 29 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 18:13:13"}
{"level":"info","message":"Completed batch of 29 XP_GAIN events in 97ms","service":"mindrune-api","timestamp":"2025-03-25 18:13:13"}
{"level":"info","message":"Processing batch of 14 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 18:13:13"}
{"level":"info","message":"Completed batch of 14 HIT_SPLAT events in 208ms","service":"mindrune-api","timestamp":"2025-03-25 18:13:13"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 18:13:13"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 225ms","service":"mindrune-api","timestamp":"2025-03-25 18:13:14"}
{"level":"info","message":"All events processed in 921ms","service":"mindrune-api","timestamp":"2025-03-25 18:13:14"}
{"level":"info","message":"Total Neo4j operation time: 1289ms","service":"mindrune-api","timestamp":"2025-03-25 18:13:14"}
{"level":"info","message":"Neo4j session closed after 1289ms","service":"mindrune-api","timestamp":"2025-03-25 18:13:14"}
{"level":"info","message":"Neo4j insertion completed in 1290ms","service":"mindrune-api","timestamp":"2025-03-25 18:13:14"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 18:13:14"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-25 18:13:14"}
{"level":"info","message":"Total request processing time: 1305ms","service":"mindrune-api","timestamp":"2025-03-25 18:13:14"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:15:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:15:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 18:15:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:15:12"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-25 18:15:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:15:12"}
{"level":"info","message":"Data size: 8059 bytes","service":"mindrune-api","timestamp":"2025-03-25 18:15:12"}
{"level":"info","message":"Event count: 42","service":"mindrune-api","timestamp":"2025-03-25 18:15:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:15:12"}
{"level":"info","message":"Processing 42 events","service":"mindrune-api","timestamp":"2025-03-25 18:15:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 18:15:12"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-25 18:15:12"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 18:15:12"}
{"level":"info","message":"Processing batch of 12 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 18:15:12"}
{"level":"info","message":"Completed batch of 12 MENU_CLICK events in 322ms","service":"mindrune-api","timestamp":"2025-03-25 18:15:13"}
{"level":"info","message":"Processing batch of 5 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 18:15:13"}
{"level":"info","message":"Completed batch of 5 INVENTORY_CHANGE events in 164ms","service":"mindrune-api","timestamp":"2025-03-25 18:15:13"}
{"level":"info","message":"Processing batch of 18 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 18:15:13"}
{"level":"info","message":"Completed batch of 18 XP_GAIN events in 97ms","service":"mindrune-api","timestamp":"2025-03-25 18:15:13"}
{"level":"info","message":"Processing batch of 7 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 18:15:13"}
{"level":"info","message":"Completed batch of 7 HIT_SPLAT events in 94ms","service":"mindrune-api","timestamp":"2025-03-25 18:15:13"}
{"level":"info","message":"All events processed in 679ms","service":"mindrune-api","timestamp":"2025-03-25 18:15:13"}
{"level":"info","message":"Total Neo4j operation time: 773ms","service":"mindrune-api","timestamp":"2025-03-25 18:15:13"}
{"level":"info","message":"Neo4j session closed after 773ms","service":"mindrune-api","timestamp":"2025-03-25 18:15:13"}
{"level":"info","message":"Neo4j insertion completed in 773ms","service":"mindrune-api","timestamp":"2025-03-25 18:15:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 18:15:13"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-25 18:15:13"}
{"level":"info","message":"Total request processing time: 785ms","service":"mindrune-api","timestamp":"2025-03-25 18:15:13"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 18:15:50"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 18:15:50"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 18:43:10"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 18:43:10"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 18:44:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:44:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:44:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 18:44:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:44:12"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-25 18:44:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:44:12"}
{"level":"info","message":"Data size: 8357 bytes","service":"mindrune-api","timestamp":"2025-03-25 18:44:12"}
{"level":"info","message":"Event count: 43","service":"mindrune-api","timestamp":"2025-03-25 18:44:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:44:12"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 18:44:12"}
{"level":"info","message":"Processing 43 events","service":"mindrune-api","timestamp":"2025-03-25 18:44:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 18:44:12"}
{"level":"info","message":"Player node updated in 353ms","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"Processing batch of 6 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"Completed batch of 6 MENU_CLICK events in 159ms","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"Processing batch of 24 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"Completed batch of 24 XP_GAIN events in 130ms","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"Processing batch of 11 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"Completed batch of 11 HIT_SPLAT events in 94ms","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 163ms","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"All events processed in 548ms","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"Total Neo4j operation time: 903ms","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"Neo4j session closed after 903ms","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"Neo4j insertion completed in 905ms","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"Total request processing time: 920ms","service":"mindrune-api","timestamp":"2025-03-25 18:44:13"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 18:48:48"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 18:48:48"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 18:49:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:49:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:49:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 18:49:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:49:12"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 18:49:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:49:12"}
{"level":"info","message":"Data size: 8993 bytes","service":"mindrune-api","timestamp":"2025-03-25 18:49:12"}
{"level":"info","message":"Event count: 46","service":"mindrune-api","timestamp":"2025-03-25 18:49:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:49:12"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 18:49:12"}
{"level":"info","message":"Processing 46 events","service":"mindrune-api","timestamp":"2025-03-25 18:49:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 18:49:12"}
{"level":"info","message":"Player node updated in 352ms","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"Completed batch of 5 MENU_CLICK events in 134ms","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"Processing batch of 28 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"Completed batch of 28 XP_GAIN events in 97ms","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"Processing batch of 12 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"Completed batch of 12 HIT_SPLAT events in 95ms","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 163ms","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"All events processed in 490ms","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"Total Neo4j operation time: 846ms","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"Neo4j session closed after 846ms","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"Neo4j insertion completed in 847ms","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"Total request processing time: 864ms","service":"mindrune-api","timestamp":"2025-03-25 18:49:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Data size: 3844 bytes","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Event count: 19","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Processing 19 events","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Processing batch of 9 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Completed batch of 9 HIT_SPLAT events in 93ms","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Processing batch of 8 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Completed batch of 8 XP_GAIN events in 95ms","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 18:50:12"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 365ms","service":"mindrune-api","timestamp":"2025-03-25 18:50:13"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 18:50:13"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 160ms","service":"mindrune-api","timestamp":"2025-03-25 18:50:13"}
{"level":"info","message":"All events processed in 715ms","service":"mindrune-api","timestamp":"2025-03-25 18:50:13"}
{"level":"info","message":"Total Neo4j operation time: 817ms","service":"mindrune-api","timestamp":"2025-03-25 18:50:13"}
{"level":"info","message":"Neo4j session closed after 817ms","service":"mindrune-api","timestamp":"2025-03-25 18:50:13"}
{"level":"info","message":"Neo4j insertion completed in 818ms","service":"mindrune-api","timestamp":"2025-03-25 18:50:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 18:50:13"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-25 18:50:13"}
{"level":"info","message":"Total request processing time: 832ms","service":"mindrune-api","timestamp":"2025-03-25 18:50:13"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 18:51:01"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 18:51:01"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 18:51:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:51:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:51:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 18:51:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:51:12"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-25 18:51:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:51:12"}
{"level":"info","message":"Data size: 1878 bytes","service":"mindrune-api","timestamp":"2025-03-25 18:51:12"}
{"level":"info","message":"Event count: 9","service":"mindrune-api","timestamp":"2025-03-25 18:51:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:51:12"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 18:51:12"}
{"level":"info","message":"Processing 9 events","service":"mindrune-api","timestamp":"2025-03-25 18:51:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 18:51:12"}
{"level":"info","message":"Player node updated in 363ms","service":"mindrune-api","timestamp":"2025-03-25 18:51:13"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-25 18:51:13"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 18:51:13"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 214ms","service":"mindrune-api","timestamp":"2025-03-25 18:51:13"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 18:51:13"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 364ms","service":"mindrune-api","timestamp":"2025-03-25 18:51:13"}
{"level":"info","message":"Processing batch of 4 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 18:51:13"}
{"level":"info","message":"Completed batch of 4 XP_GAIN events in 198ms","service":"mindrune-api","timestamp":"2025-03-25 18:51:13"}
{"level":"info","message":"All events processed in 777ms","service":"mindrune-api","timestamp":"2025-03-25 18:51:13"}
{"level":"info","message":"Total Neo4j operation time: 1143ms","service":"mindrune-api","timestamp":"2025-03-25 18:51:13"}
{"level":"info","message":"Neo4j session closed after 1143ms","service":"mindrune-api","timestamp":"2025-03-25 18:51:13"}
{"level":"info","message":"Neo4j insertion completed in 1145ms","service":"mindrune-api","timestamp":"2025-03-25 18:51:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 18:51:13"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-25 18:51:13"}
{"level":"info","message":"Total request processing time: 1159ms","service":"mindrune-api","timestamp":"2025-03-25 18:51:13"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-25 18:51:31"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-25 18:51:32"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-25 18:52:12"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:52:12"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:52:12"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-25 18:52:12"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:52:12"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-25 18:52:12"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:52:12"}
{"level":"info","message":"Data size: 11916 bytes","service":"mindrune-api","timestamp":"2025-03-25 18:52:12"}
{"level":"info","message":"Event count: 61","service":"mindrune-api","timestamp":"2025-03-25 18:52:12"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-25 18:52:12"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-25 18:52:12"}
{"level":"info","message":"Processing 61 events","service":"mindrune-api","timestamp":"2025-03-25 18:52:12"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-25 18:52:12"}
{"level":"info","message":"Player node updated in 350ms","service":"mindrune-api","timestamp":"2025-03-25 18:52:13"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-25 18:52:13"}
{"level":"info","message":"Processing batch of 20 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-25 18:52:13"}
{"level":"info","message":"Completed batch of 20 HIT_SPLAT events in 256ms","service":"mindrune-api","timestamp":"2025-03-25 18:52:13"}
{"level":"info","message":"Processing batch of 32 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-25 18:52:13"}
{"level":"info","message":"Completed batch of 32 XP_GAIN events in 115ms","service":"mindrune-api","timestamp":"2025-03-25 18:52:13"}
{"level":"info","message":"Processing batch of 6 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-25 18:52:13"}
{"level":"info","message":"Completed batch of 6 MENU_CLICK events in 417ms","service":"mindrune-api","timestamp":"2025-03-25 18:52:13"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-25 18:52:13"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 177ms","service":"mindrune-api","timestamp":"2025-03-25 18:52:14"}
{"level":"info","message":"All events processed in 967ms","service":"mindrune-api","timestamp":"2025-03-25 18:52:14"}
{"level":"info","message":"Total Neo4j operation time: 1320ms","service":"mindrune-api","timestamp":"2025-03-25 18:52:14"}
{"level":"info","message":"Neo4j session closed after 1320ms","service":"mindrune-api","timestamp":"2025-03-25 18:52:14"}
{"level":"info","message":"Neo4j insertion completed in 1321ms","service":"mindrune-api","timestamp":"2025-03-25 18:52:14"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-25 18:52:14"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-25 18:52:14"}
{"level":"info","message":"Total request processing time: 1335ms","service":"mindrune-api","timestamp":"2025-03-25 18:52:14"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 09:12:10"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 09:12:11"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 09:13:31"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:13:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:13:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 09:13:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:13:31"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 09:13:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:13:31"}
{"level":"info","message":"Data size: 215 bytes","service":"mindrune-api","timestamp":"2025-03-26 09:13:31"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-26 09:13:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:13:31"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 09:13:31"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-26 09:13:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 09:13:31"}
{"level":"info","message":"Player node updated in 340ms","service":"mindrune-api","timestamp":"2025-03-26 09:13:32"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 09:13:32"}
{"level":"info","message":"Processing batch of 1 WORLD_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 09:13:32"}
{"level":"info","message":"Completed batch of 1 WORLD_CHANGE events in 170ms","service":"mindrune-api","timestamp":"2025-03-26 09:13:32"}
{"level":"info","message":"All events processed in 170ms","service":"mindrune-api","timestamp":"2025-03-26 09:13:32"}
{"level":"info","message":"Total Neo4j operation time: 514ms","service":"mindrune-api","timestamp":"2025-03-26 09:13:32"}
{"level":"info","message":"Neo4j session closed after 514ms","service":"mindrune-api","timestamp":"2025-03-26 09:13:32"}
{"level":"info","message":"Neo4j insertion completed in 515ms","service":"mindrune-api","timestamp":"2025-03-26 09:13:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 09:13:32"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 09:13:32"}
{"level":"info","message":"Total request processing time: 530ms","service":"mindrune-api","timestamp":"2025-03-26 09:13:32"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:14:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:14:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 09:14:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:14:31"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 09:14:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:14:31"}
{"level":"info","message":"Data size: 7789 bytes","service":"mindrune-api","timestamp":"2025-03-26 09:14:31"}
{"level":"info","message":"Event count: 40","service":"mindrune-api","timestamp":"2025-03-26 09:14:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:14:31"}
{"level":"info","message":"Processing 40 events","service":"mindrune-api","timestamp":"2025-03-26 09:14:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 09:14:31"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-26 09:14:31"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 09:14:31"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 09:14:31"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 389ms","service":"mindrune-api","timestamp":"2025-03-26 09:14:32"}
{"level":"info","message":"Processing batch of 24 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 09:14:32"}
{"level":"info","message":"Completed batch of 24 XP_GAIN events in 96ms","service":"mindrune-api","timestamp":"2025-03-26 09:14:32"}
{"level":"info","message":"Processing batch of 11 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 09:14:32"}
{"level":"info","message":"Completed batch of 11 HIT_SPLAT events in 225ms","service":"mindrune-api","timestamp":"2025-03-26 09:14:32"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 09:14:32"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 222ms","service":"mindrune-api","timestamp":"2025-03-26 09:14:32"}
{"level":"info","message":"All events processed in 934ms","service":"mindrune-api","timestamp":"2025-03-26 09:14:32"}
{"level":"info","message":"Total Neo4j operation time: 1029ms","service":"mindrune-api","timestamp":"2025-03-26 09:14:32"}
{"level":"info","message":"Neo4j session closed after 1030ms","service":"mindrune-api","timestamp":"2025-03-26 09:14:32"}
{"level":"info","message":"Neo4j insertion completed in 1030ms","service":"mindrune-api","timestamp":"2025-03-26 09:14:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 09:14:32"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-26 09:14:32"}
{"level":"info","message":"Total request processing time: 1042ms","service":"mindrune-api","timestamp":"2025-03-26 09:14:32"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 09:20:58"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 09:20:59"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 09:21:31"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:21:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:21:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 09:21:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:21:31"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 09:21:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:21:31"}
{"level":"info","message":"Data size: 5942 bytes","service":"mindrune-api","timestamp":"2025-03-26 09:21:31"}
{"level":"info","message":"Event count: 30","service":"mindrune-api","timestamp":"2025-03-26 09:21:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:21:31"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 09:21:31"}
{"level":"info","message":"Processing 30 events","service":"mindrune-api","timestamp":"2025-03-26 09:21:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 09:21:31"}
{"level":"info","message":"Player node updated in 348ms","service":"mindrune-api","timestamp":"2025-03-26 09:21:32"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 09:21:32"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 09:21:32"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 126ms","service":"mindrune-api","timestamp":"2025-03-26 09:21:32"}
{"level":"info","message":"Processing batch of 11 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 09:21:32"}
{"level":"info","message":"Completed batch of 11 HIT_SPLAT events in 520ms","service":"mindrune-api","timestamp":"2025-03-26 09:21:32"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 09:21:32"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 125ms","service":"mindrune-api","timestamp":"2025-03-26 09:21:32"}
{"level":"info","message":"All events processed in 772ms","service":"mindrune-api","timestamp":"2025-03-26 09:21:32"}
{"level":"info","message":"Total Neo4j operation time: 1125ms","service":"mindrune-api","timestamp":"2025-03-26 09:21:32"}
{"level":"info","message":"Neo4j session closed after 1125ms","service":"mindrune-api","timestamp":"2025-03-26 09:21:32"}
{"level":"info","message":"Neo4j insertion completed in 1126ms","service":"mindrune-api","timestamp":"2025-03-26 09:21:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 09:21:32"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 09:21:32"}
{"level":"info","message":"Total request processing time: 1142ms","service":"mindrune-api","timestamp":"2025-03-26 09:21:32"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:22:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:22:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 09:22:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:22:31"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 09:22:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:22:31"}
{"level":"info","message":"Data size: 2454 bytes","service":"mindrune-api","timestamp":"2025-03-26 09:22:31"}
{"level":"info","message":"Event count: 12","service":"mindrune-api","timestamp":"2025-03-26 09:22:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:22:31"}
{"level":"info","message":"Processing 12 events","service":"mindrune-api","timestamp":"2025-03-26 09:22:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 09:22:31"}
{"level":"info","message":"Player node updated in 99ms","service":"mindrune-api","timestamp":"2025-03-26 09:22:31"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 09:22:31"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 09:22:31"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 441ms","service":"mindrune-api","timestamp":"2025-03-26 09:22:32"}
{"level":"info","message":"Processing batch of 8 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 09:22:32"}
{"level":"info","message":"Completed batch of 8 XP_GAIN events in 142ms","service":"mindrune-api","timestamp":"2025-03-26 09:22:32"}
{"level":"info","message":"All events processed in 584ms","service":"mindrune-api","timestamp":"2025-03-26 09:22:32"}
{"level":"info","message":"Total Neo4j operation time: 685ms","service":"mindrune-api","timestamp":"2025-03-26 09:22:32"}
{"level":"info","message":"Neo4j session closed after 686ms","service":"mindrune-api","timestamp":"2025-03-26 09:22:32"}
{"level":"info","message":"Neo4j insertion completed in 687ms","service":"mindrune-api","timestamp":"2025-03-26 09:22:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 09:22:32"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 09:22:32"}
{"level":"info","message":"Total request processing time: 698ms","service":"mindrune-api","timestamp":"2025-03-26 09:22:32"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 09:24:39"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 09:24:39"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 09:25:31"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:25:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:25:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 09:25:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:25:31"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 09:25:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:25:31"}
{"level":"info","message":"Data size: 8229 bytes","service":"mindrune-api","timestamp":"2025-03-26 09:25:31"}
{"level":"info","message":"Event count: 42","service":"mindrune-api","timestamp":"2025-03-26 09:25:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:25:31"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 09:25:31"}
{"level":"info","message":"Processing 42 events","service":"mindrune-api","timestamp":"2025-03-26 09:25:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 09:25:31"}
{"level":"info","message":"Player node updated in 363ms","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"Completed batch of 5 MENU_CLICK events in 156ms","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"Processing batch of 24 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"Completed batch of 24 XP_GAIN events in 95ms","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"Processing batch of 13 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"Processing 13 HIT_SPLAT events: 7 incoming, 6 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"Completed batch of 13 HIT_SPLAT events in 405ms","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"All events processed in 659ms","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"Total Neo4j operation time: 1025ms","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"Neo4j session closed after 1025ms","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"Neo4j insertion completed in 1026ms","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"Total request processing time: 1043ms","service":"mindrune-api","timestamp":"2025-03-26 09:25:32"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:26:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:26:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 09:26:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:26:31"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 09:26:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:26:31"}
{"level":"info","message":"Data size: 718 bytes","service":"mindrune-api","timestamp":"2025-03-26 09:26:31"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 09:26:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:26:31"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 09:26:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 09:26:31"}
{"level":"info","message":"Player node updated in 102ms","service":"mindrune-api","timestamp":"2025-03-26 09:26:31"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 09:26:31"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 09:26:31"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 09:26:31"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 174ms","service":"mindrune-api","timestamp":"2025-03-26 09:26:32"}
{"level":"info","message":"All events processed in 175ms","service":"mindrune-api","timestamp":"2025-03-26 09:26:32"}
{"level":"info","message":"Total Neo4j operation time: 277ms","service":"mindrune-api","timestamp":"2025-03-26 09:26:32"}
{"level":"info","message":"Neo4j session closed after 277ms","service":"mindrune-api","timestamp":"2025-03-26 09:26:32"}
{"level":"info","message":"Neo4j insertion completed in 278ms","service":"mindrune-api","timestamp":"2025-03-26 09:26:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 09:26:32"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 09:26:32"}
{"level":"info","message":"Total request processing time: 290ms","service":"mindrune-api","timestamp":"2025-03-26 09:26:32"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:27:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:27:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 09:27:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:27:31"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 09:27:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:27:31"}
{"level":"info","message":"Data size: 718 bytes","service":"mindrune-api","timestamp":"2025-03-26 09:27:31"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 09:27:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:27:31"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 09:27:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 09:27:31"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-26 09:27:31"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 09:27:31"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 09:27:31"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 09:27:31"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 171ms","service":"mindrune-api","timestamp":"2025-03-26 09:27:32"}
{"level":"info","message":"All events processed in 171ms","service":"mindrune-api","timestamp":"2025-03-26 09:27:32"}
{"level":"info","message":"Total Neo4j operation time: 267ms","service":"mindrune-api","timestamp":"2025-03-26 09:27:32"}
{"level":"info","message":"Neo4j session closed after 267ms","service":"mindrune-api","timestamp":"2025-03-26 09:27:32"}
{"level":"info","message":"Neo4j insertion completed in 267ms","service":"mindrune-api","timestamp":"2025-03-26 09:27:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 09:27:32"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 09:27:32"}
{"level":"info","message":"Total request processing time: 280ms","service":"mindrune-api","timestamp":"2025-03-26 09:27:32"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:28:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:28:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 09:28:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:28:31"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 09:28:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:28:31"}
{"level":"info","message":"Data size: 916 bytes","service":"mindrune-api","timestamp":"2025-03-26 09:28:31"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-26 09:28:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 09:28:31"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-26 09:28:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 09:28:31"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-26 09:28:31"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 09:28:31"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 09:28:31"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 4 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 09:28:31"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 163ms","service":"mindrune-api","timestamp":"2025-03-26 09:28:32"}
{"level":"info","message":"All events processed in 163ms","service":"mindrune-api","timestamp":"2025-03-26 09:28:32"}
{"level":"info","message":"Total Neo4j operation time: 257ms","service":"mindrune-api","timestamp":"2025-03-26 09:28:32"}
{"level":"info","message":"Neo4j session closed after 257ms","service":"mindrune-api","timestamp":"2025-03-26 09:28:32"}
{"level":"info","message":"Neo4j insertion completed in 258ms","service":"mindrune-api","timestamp":"2025-03-26 09:28:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 09:28:32"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 09:28:32"}
{"level":"info","message":"Total request processing time: 270ms","service":"mindrune-api","timestamp":"2025-03-26 09:28:32"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 12:23:12"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 12:23:12"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 12:23:31"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:23:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:23:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 12:23:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:23:31"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 12:23:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:23:31"}
{"level":"info","message":"Data size: 281 bytes","service":"mindrune-api","timestamp":"2025-03-26 12:23:31"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-26 12:23:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:23:31"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 12:23:31"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-26 12:23:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 12:23:31"}
{"level":"info","message":"Player node updated in 365ms","service":"mindrune-api","timestamp":"2025-03-26 12:23:32"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 12:23:32"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 12:23:32"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 463ms","service":"mindrune-api","timestamp":"2025-03-26 12:23:32"}
{"level":"info","message":"All events processed in 464ms","service":"mindrune-api","timestamp":"2025-03-26 12:23:32"}
{"level":"info","message":"Total Neo4j operation time: 832ms","service":"mindrune-api","timestamp":"2025-03-26 12:23:32"}
{"level":"info","message":"Neo4j session closed after 832ms","service":"mindrune-api","timestamp":"2025-03-26 12:23:32"}
{"level":"info","message":"Neo4j insertion completed in 834ms","service":"mindrune-api","timestamp":"2025-03-26 12:23:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 12:23:32"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 12:23:32"}
{"level":"info","message":"Total request processing time: 852ms","service":"mindrune-api","timestamp":"2025-03-26 12:23:32"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:24:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:24:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 12:24:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:24:31"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 12:24:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:24:31"}
{"level":"info","message":"Data size: 9380 bytes","service":"mindrune-api","timestamp":"2025-03-26 12:24:31"}
{"level":"info","message":"Event count: 49","service":"mindrune-api","timestamp":"2025-03-26 12:24:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:24:31"}
{"level":"info","message":"Processing 49 events","service":"mindrune-api","timestamp":"2025-03-26 12:24:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 12:24:31"}
{"level":"info","message":"Player node updated in 104ms","service":"mindrune-api","timestamp":"2025-03-26 12:24:32"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 12:24:32"}
{"level":"info","message":"Processing batch of 13 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 12:24:32"}
{"level":"info","message":"Completed batch of 13 MENU_CLICK events in 527ms","service":"mindrune-api","timestamp":"2025-03-26 12:24:32"}
{"level":"info","message":"Processing batch of 21 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 12:24:32"}
{"level":"info","message":"Completed batch of 21 XP_GAIN events in 144ms","service":"mindrune-api","timestamp":"2025-03-26 12:24:32"}
{"level":"info","message":"Processing batch of 11 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 12:24:32"}
{"level":"info","message":"Processing 11 HIT_SPLAT events: 5 incoming, 6 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 12:24:32"}
{"level":"info","message":"Completed batch of 11 HIT_SPLAT events in 420ms","service":"mindrune-api","timestamp":"2025-03-26 12:24:33"}
{"level":"info","message":"Processing batch of 4 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 12:24:33"}
{"level":"info","message":"Completed batch of 4 INVENTORY_CHANGE events in 215ms","service":"mindrune-api","timestamp":"2025-03-26 12:24:33"}
{"level":"info","message":"All events processed in 1306ms","service":"mindrune-api","timestamp":"2025-03-26 12:24:33"}
{"level":"info","message":"Total Neo4j operation time: 1411ms","service":"mindrune-api","timestamp":"2025-03-26 12:24:33"}
{"level":"info","message":"Neo4j session closed after 1412ms","service":"mindrune-api","timestamp":"2025-03-26 12:24:33"}
{"level":"info","message":"Neo4j insertion completed in 1412ms","service":"mindrune-api","timestamp":"2025-03-26 12:24:33"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 12:24:33"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 12:24:33"}
{"level":"info","message":"Total request processing time: 1427ms","service":"mindrune-api","timestamp":"2025-03-26 12:24:33"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 12:27:50"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 12:27:50"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 12:28:31"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:28:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:28:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 12:28:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:28:31"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 12:28:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:28:31"}
{"level":"info","message":"Data size: 5679 bytes","service":"mindrune-api","timestamp":"2025-03-26 12:28:31"}
{"level":"info","message":"Event count: 31","service":"mindrune-api","timestamp":"2025-03-26 12:28:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:28:31"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 12:28:31"}
{"level":"info","message":"Processing 31 events","service":"mindrune-api","timestamp":"2025-03-26 12:28:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 12:28:31"}
{"level":"info","message":"Player node updated in 356ms","service":"mindrune-api","timestamp":"2025-03-26 12:28:32"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 12:28:32"}
{"level":"info","message":"Processing batch of 22 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 12:28:32"}
{"level":"info","message":"Completed batch of 22 MENU_CLICK events in 488ms","service":"mindrune-api","timestamp":"2025-03-26 12:28:32"}
{"level":"info","message":"Processing batch of 5 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 12:28:32"}
{"level":"info","message":"Completed batch of 5 XP_GAIN events in 200ms","service":"mindrune-api","timestamp":"2025-03-26 12:28:32"}
{"level":"info","message":"Processing batch of 4 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 12:28:32"}
{"level":"info","message":"Completed batch of 4 INVENTORY_CHANGE events in 164ms","service":"mindrune-api","timestamp":"2025-03-26 12:28:33"}
{"level":"info","message":"All events processed in 854ms","service":"mindrune-api","timestamp":"2025-03-26 12:28:33"}
{"level":"info","message":"Total Neo4j operation time: 1213ms","service":"mindrune-api","timestamp":"2025-03-26 12:28:33"}
{"level":"info","message":"Neo4j session closed after 1213ms","service":"mindrune-api","timestamp":"2025-03-26 12:28:33"}
{"level":"info","message":"Neo4j insertion completed in 1214ms","service":"mindrune-api","timestamp":"2025-03-26 12:28:33"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 12:28:33"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-26 12:28:33"}
{"level":"info","message":"Total request processing time: 1231ms","service":"mindrune-api","timestamp":"2025-03-26 12:28:33"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 12:31:54"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 12:31:55"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 12:33:26"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 12:33:27"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 12:34:31"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:34:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:34:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 12:34:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:34:31"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 12:34:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:34:31"}
{"level":"info","message":"Data size: 8322 bytes","service":"mindrune-api","timestamp":"2025-03-26 12:34:31"}
{"level":"info","message":"Event count: 43","service":"mindrune-api","timestamp":"2025-03-26 12:34:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:34:31"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 12:34:31"}
{"level":"info","message":"Processing 43 events","service":"mindrune-api","timestamp":"2025-03-26 12:34:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 12:34:31"}
{"level":"info","message":"Player node updated in 355ms","service":"mindrune-api","timestamp":"2025-03-26 12:34:32"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 12:34:32"}
{"level":"info","message":"Processing batch of 6 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 12:34:32"}
{"level":"info","message":"Completed batch of 6 MENU_CLICK events in 471ms","service":"mindrune-api","timestamp":"2025-03-26 12:34:32"}
{"level":"info","message":"Processing batch of 24 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 12:34:32"}
{"level":"info","message":"Completed batch of 24 XP_GAIN events in 98ms","service":"mindrune-api","timestamp":"2025-03-26 12:34:32"}
{"level":"info","message":"Processing batch of 11 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 12:34:32"}
{"level":"info","message":"Processing 11 HIT_SPLAT events: 5 incoming, 6 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 12:34:32"}
{"level":"info","message":"Completed batch of 11 HIT_SPLAT events in 329ms","service":"mindrune-api","timestamp":"2025-03-26 12:34:33"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 12:34:33"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 168ms","service":"mindrune-api","timestamp":"2025-03-26 12:34:33"}
{"level":"info","message":"All events processed in 1068ms","service":"mindrune-api","timestamp":"2025-03-26 12:34:33"}
{"level":"info","message":"Total Neo4j operation time: 1428ms","service":"mindrune-api","timestamp":"2025-03-26 12:34:33"}
{"level":"info","message":"Neo4j session closed after 1428ms","service":"mindrune-api","timestamp":"2025-03-26 12:34:33"}
{"level":"info","message":"Neo4j insertion completed in 1429ms","service":"mindrune-api","timestamp":"2025-03-26 12:34:33"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 12:34:33"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 12:34:33"}
{"level":"info","message":"Total request processing time: 1443ms","service":"mindrune-api","timestamp":"2025-03-26 12:34:33"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:35:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:35:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 12:35:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:35:31"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 12:35:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:35:31"}
{"level":"info","message":"Data size: 2658 bytes","service":"mindrune-api","timestamp":"2025-03-26 12:35:31"}
{"level":"info","message":"Event count: 14","service":"mindrune-api","timestamp":"2025-03-26 12:35:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:35:31"}
{"level":"info","message":"Processing 14 events","service":"mindrune-api","timestamp":"2025-03-26 12:35:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 12:35:31"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-26 12:35:31"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 12:35:31"}
{"level":"info","message":"Processing batch of 9 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 12:35:31"}
{"level":"info","message":"Completed batch of 9 MENU_CLICK events in 126ms","service":"mindrune-api","timestamp":"2025-03-26 12:35:32"}
{"level":"info","message":"Processing batch of 2 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 12:35:32"}
{"level":"info","message":"Completed batch of 2 XP_GAIN events in 161ms","service":"mindrune-api","timestamp":"2025-03-26 12:35:32"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 12:35:32"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 163ms","service":"mindrune-api","timestamp":"2025-03-26 12:35:32"}
{"level":"info","message":"All events processed in 450ms","service":"mindrune-api","timestamp":"2025-03-26 12:35:32"}
{"level":"info","message":"Total Neo4j operation time: 544ms","service":"mindrune-api","timestamp":"2025-03-26 12:35:32"}
{"level":"info","message":"Neo4j session closed after 544ms","service":"mindrune-api","timestamp":"2025-03-26 12:35:32"}
{"level":"info","message":"Neo4j insertion completed in 545ms","service":"mindrune-api","timestamp":"2025-03-26 12:35:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 12:35:32"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 12:35:32"}
{"level":"info","message":"Total request processing time: 557ms","service":"mindrune-api","timestamp":"2025-03-26 12:35:32"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 12:40:22"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 12:40:22"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 12:40:31"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:40:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:40:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 12:40:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:40:31"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 12:40:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:40:31"}
{"level":"info","message":"Data size: 478 bytes","service":"mindrune-api","timestamp":"2025-03-26 12:40:31"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-26 12:40:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:40:31"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 12:40:31"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-26 12:40:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 12:40:31"}
{"level":"info","message":"Player node updated in 354ms","service":"mindrune-api","timestamp":"2025-03-26 12:40:32"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 12:40:32"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 12:40:32"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 124ms","service":"mindrune-api","timestamp":"2025-03-26 12:40:32"}
{"level":"info","message":"All events processed in 125ms","service":"mindrune-api","timestamp":"2025-03-26 12:40:32"}
{"level":"info","message":"Total Neo4j operation time: 482ms","service":"mindrune-api","timestamp":"2025-03-26 12:40:32"}
{"level":"info","message":"Neo4j session closed after 482ms","service":"mindrune-api","timestamp":"2025-03-26 12:40:32"}
{"level":"info","message":"Neo4j insertion completed in 484ms","service":"mindrune-api","timestamp":"2025-03-26 12:40:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 12:40:32"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 12:40:32"}
{"level":"info","message":"Total request processing time: 499ms","service":"mindrune-api","timestamp":"2025-03-26 12:40:32"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:41:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:41:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 12:41:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:41:31"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 12:41:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:41:31"}
{"level":"info","message":"Data size: 1207 bytes","service":"mindrune-api","timestamp":"2025-03-26 12:41:31"}
{"level":"info","message":"Event count: 6","service":"mindrune-api","timestamp":"2025-03-26 12:41:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:41:31"}
{"level":"info","message":"Processing 6 events","service":"mindrune-api","timestamp":"2025-03-26 12:41:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 12:41:31"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-26 12:41:32"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 12:41:32"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 12:41:32"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 449ms","service":"mindrune-api","timestamp":"2025-03-26 12:41:32"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 12:41:32"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 212ms","service":"mindrune-api","timestamp":"2025-03-26 12:41:32"}
{"level":"info","message":"All events processed in 662ms","service":"mindrune-api","timestamp":"2025-03-26 12:41:32"}
{"level":"info","message":"Total Neo4j operation time: 764ms","service":"mindrune-api","timestamp":"2025-03-26 12:41:32"}
{"level":"info","message":"Neo4j session closed after 764ms","service":"mindrune-api","timestamp":"2025-03-26 12:41:32"}
{"level":"info","message":"Neo4j insertion completed in 764ms","service":"mindrune-api","timestamp":"2025-03-26 12:41:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 12:41:32"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 12:41:32"}
{"level":"info","message":"Total request processing time: 778ms","service":"mindrune-api","timestamp":"2025-03-26 12:41:32"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 12:42:11"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 12:42:12"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 12:42:31"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:42:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:42:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 12:42:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:42:31"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 12:42:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:42:31"}
{"level":"info","message":"Data size: 1564 bytes","service":"mindrune-api","timestamp":"2025-03-26 12:42:31"}
{"level":"info","message":"Event count: 8","service":"mindrune-api","timestamp":"2025-03-26 12:42:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:42:31"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 12:42:31"}
{"level":"info","message":"Processing 8 events","service":"mindrune-api","timestamp":"2025-03-26 12:42:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 12:42:31"}
{"level":"info","message":"Player node updated in 363ms","service":"mindrune-api","timestamp":"2025-03-26 12:42:32"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 12:42:32"}
{"level":"info","message":"Processing batch of 6 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 12:42:32"}
{"level":"info","message":"Completed batch of 6 MENU_CLICK events in 468ms","service":"mindrune-api","timestamp":"2025-03-26 12:42:32"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 12:42:32"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 162ms","service":"mindrune-api","timestamp":"2025-03-26 12:42:32"}
{"level":"info","message":"All events processed in 632ms","service":"mindrune-api","timestamp":"2025-03-26 12:42:32"}
{"level":"info","message":"Total Neo4j operation time: 999ms","service":"mindrune-api","timestamp":"2025-03-26 12:42:32"}
{"level":"info","message":"Neo4j session closed after 999ms","service":"mindrune-api","timestamp":"2025-03-26 12:42:32"}
{"level":"info","message":"Neo4j insertion completed in 1001ms","service":"mindrune-api","timestamp":"2025-03-26 12:42:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 12:42:32"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 12:42:32"}
{"level":"info","message":"Total request processing time: 1017ms","service":"mindrune-api","timestamp":"2025-03-26 12:42:32"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 12:56:26"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 12:56:26"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 12:58:31"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:58:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:58:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 12:58:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:58:31"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 12:58:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:58:31"}
{"level":"info","message":"Data size: 2998 bytes","service":"mindrune-api","timestamp":"2025-03-26 12:58:31"}
{"level":"info","message":"Event count: 16","service":"mindrune-api","timestamp":"2025-03-26 12:58:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 12:58:31"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 12:58:31"}
{"level":"info","message":"Processing 16 events","service":"mindrune-api","timestamp":"2025-03-26 12:58:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 12:58:31"}
{"level":"info","message":"Player node updated in 346ms","service":"mindrune-api","timestamp":"2025-03-26 12:58:32"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 12:58:32"}
{"level":"info","message":"Processing batch of 12 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 12:58:32"}
{"level":"info","message":"Completed batch of 12 MENU_CLICK events in 470ms","service":"mindrune-api","timestamp":"2025-03-26 12:58:32"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 12:58:32"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 164ms","service":"mindrune-api","timestamp":"2025-03-26 12:58:32"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 12:58:32"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 131ms","service":"mindrune-api","timestamp":"2025-03-26 12:58:33"}
{"level":"info","message":"All events processed in 767ms","service":"mindrune-api","timestamp":"2025-03-26 12:58:33"}
{"level":"info","message":"Total Neo4j operation time: 1117ms","service":"mindrune-api","timestamp":"2025-03-26 12:58:33"}
{"level":"info","message":"Neo4j session closed after 1117ms","service":"mindrune-api","timestamp":"2025-03-26 12:58:33"}
{"level":"info","message":"Neo4j insertion completed in 1118ms","service":"mindrune-api","timestamp":"2025-03-26 12:58:33"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 12:58:33"}
{"level":"info","message":"SQL insertion completed in 24ms","service":"mindrune-api","timestamp":"2025-03-26 12:58:33"}
{"level":"info","message":"Total request processing time: 1146ms","service":"mindrune-api","timestamp":"2025-03-26 12:58:33"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 13:05:45"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 13:05:45"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 13:06:31"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:06:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:06:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 13:06:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:06:31"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 13:06:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:06:31"}
{"level":"info","message":"Data size: 9897 bytes","service":"mindrune-api","timestamp":"2025-03-26 13:06:31"}
{"level":"info","message":"Event count: 51","service":"mindrune-api","timestamp":"2025-03-26 13:06:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:06:31"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 13:06:31"}
{"level":"info","message":"Processing 51 events","service":"mindrune-api","timestamp":"2025-03-26 13:06:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 13:06:31"}
{"level":"info","message":"Player node updated in 351ms","service":"mindrune-api","timestamp":"2025-03-26 13:06:32"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 13:06:32"}
{"level":"info","message":"Processing batch of 6 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 13:06:32"}
{"level":"info","message":"Completed batch of 6 MENU_CLICK events in 444ms","service":"mindrune-api","timestamp":"2025-03-26 13:06:32"}
{"level":"info","message":"Processing batch of 29 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 13:06:32"}
{"level":"info","message":"Completed batch of 29 XP_GAIN events in 124ms","service":"mindrune-api","timestamp":"2025-03-26 13:06:32"}
{"level":"info","message":"Processing batch of 14 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 13:06:32"}
{"level":"info","message":"Processing 14 HIT_SPLAT events: 7 incoming, 7 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 13:06:32"}
{"level":"info","message":"Completed batch of 14 HIT_SPLAT events in 328ms","service":"mindrune-api","timestamp":"2025-03-26 13:06:33"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 13:06:33"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 212ms","service":"mindrune-api","timestamp":"2025-03-26 13:06:33"}
{"level":"info","message":"All events processed in 1111ms","service":"mindrune-api","timestamp":"2025-03-26 13:06:33"}
{"level":"info","message":"Total Neo4j operation time: 1465ms","service":"mindrune-api","timestamp":"2025-03-26 13:06:33"}
{"level":"info","message":"Neo4j session closed after 1465ms","service":"mindrune-api","timestamp":"2025-03-26 13:06:33"}
{"level":"info","message":"Neo4j insertion completed in 1467ms","service":"mindrune-api","timestamp":"2025-03-26 13:06:33"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 13:06:33"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-26 13:06:33"}
{"level":"info","message":"Total request processing time: 1485ms","service":"mindrune-api","timestamp":"2025-03-26 13:06:33"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:07:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:07:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 13:07:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:07:31"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 13:07:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:07:31"}
{"level":"info","message":"Data size: 9603 bytes","service":"mindrune-api","timestamp":"2025-03-26 13:07:31"}
{"level":"info","message":"Event count: 49","service":"mindrune-api","timestamp":"2025-03-26 13:07:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:07:31"}
{"level":"info","message":"Processing 49 events","service":"mindrune-api","timestamp":"2025-03-26 13:07:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 13:07:31"}
{"level":"info","message":"Player node updated in 102ms","service":"mindrune-api","timestamp":"2025-03-26 13:07:32"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 13:07:32"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 13:07:32"}
{"level":"info","message":"Completed batch of 5 MENU_CLICK events in 450ms","service":"mindrune-api","timestamp":"2025-03-26 13:07:32"}
{"level":"info","message":"Processing batch of 25 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 13:07:32"}
{"level":"info","message":"Completed batch of 25 XP_GAIN events in 126ms","service":"mindrune-api","timestamp":"2025-03-26 13:07:32"}
{"level":"info","message":"Processing batch of 16 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 13:07:32"}
{"level":"info","message":"Processing 16 HIT_SPLAT events: 9 incoming, 7 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 13:07:32"}
{"level":"info","message":"Completed batch of 16 HIT_SPLAT events in 384ms","service":"mindrune-api","timestamp":"2025-03-26 13:07:32"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 13:07:32"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 161ms","service":"mindrune-api","timestamp":"2025-03-26 13:07:33"}
{"level":"info","message":"All events processed in 1122ms","service":"mindrune-api","timestamp":"2025-03-26 13:07:33"}
{"level":"info","message":"Total Neo4j operation time: 1225ms","service":"mindrune-api","timestamp":"2025-03-26 13:07:33"}
{"level":"info","message":"Neo4j session closed after 1226ms","service":"mindrune-api","timestamp":"2025-03-26 13:07:33"}
{"level":"info","message":"Neo4j insertion completed in 1227ms","service":"mindrune-api","timestamp":"2025-03-26 13:07:33"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 13:07:33"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-26 13:07:33"}
{"level":"info","message":"Total request processing time: 1243ms","service":"mindrune-api","timestamp":"2025-03-26 13:07:33"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:08:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:08:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 13:08:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:08:31"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 13:08:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:08:31"}
{"level":"info","message":"Data size: 718 bytes","service":"mindrune-api","timestamp":"2025-03-26 13:08:31"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 13:08:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:08:31"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 13:08:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 13:08:31"}
{"level":"info","message":"Player node updated in 90ms","service":"mindrune-api","timestamp":"2025-03-26 13:08:32"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 13:08:32"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 13:08:32"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 13:08:32"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 162ms","service":"mindrune-api","timestamp":"2025-03-26 13:08:32"}
{"level":"info","message":"All events processed in 163ms","service":"mindrune-api","timestamp":"2025-03-26 13:08:32"}
{"level":"info","message":"Total Neo4j operation time: 254ms","service":"mindrune-api","timestamp":"2025-03-26 13:08:32"}
{"level":"info","message":"Neo4j session closed after 255ms","service":"mindrune-api","timestamp":"2025-03-26 13:08:32"}
{"level":"info","message":"Neo4j insertion completed in 255ms","service":"mindrune-api","timestamp":"2025-03-26 13:08:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 13:08:32"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-26 13:08:32"}
{"level":"info","message":"Total request processing time: 270ms","service":"mindrune-api","timestamp":"2025-03-26 13:08:32"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:09:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:09:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 13:09:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:09:31"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 13:09:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:09:31"}
{"level":"info","message":"Data size: 919 bytes","service":"mindrune-api","timestamp":"2025-03-26 13:09:31"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-26 13:09:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:09:31"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-26 13:09:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 13:09:31"}
{"level":"info","message":"Player node updated in 90ms","service":"mindrune-api","timestamp":"2025-03-26 13:09:32"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 13:09:32"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 13:09:32"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 4 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 13:09:32"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 160ms","service":"mindrune-api","timestamp":"2025-03-26 13:09:32"}
{"level":"info","message":"All events processed in 161ms","service":"mindrune-api","timestamp":"2025-03-26 13:09:32"}
{"level":"info","message":"Total Neo4j operation time: 252ms","service":"mindrune-api","timestamp":"2025-03-26 13:09:32"}
{"level":"info","message":"Neo4j session closed after 252ms","service":"mindrune-api","timestamp":"2025-03-26 13:09:32"}
{"level":"info","message":"Neo4j insertion completed in 253ms","service":"mindrune-api","timestamp":"2025-03-26 13:09:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 13:09:32"}
{"level":"info","message":"SQL insertion completed in 21ms","service":"mindrune-api","timestamp":"2025-03-26 13:09:32"}
{"level":"info","message":"Total request processing time: 277ms","service":"mindrune-api","timestamp":"2025-03-26 13:09:32"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:10:31"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:10:31"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 13:10:31"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:10:31"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 13:10:31"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:10:31"}
{"level":"info","message":"Data size: 316 bytes","service":"mindrune-api","timestamp":"2025-03-26 13:10:31"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-26 13:10:31"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:10:31"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-26 13:10:31"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 13:10:31"}
{"level":"info","message":"Player node updated in 90ms","service":"mindrune-api","timestamp":"2025-03-26 13:10:32"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 13:10:32"}
{"level":"info","message":"Processing batch of 1 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 13:10:32"}
{"level":"info","message":"Processing 1 HIT_SPLAT events: 1 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 13:10:32"}
{"level":"info","message":"Completed batch of 1 HIT_SPLAT events in 140ms","service":"mindrune-api","timestamp":"2025-03-26 13:10:32"}
{"level":"info","message":"All events processed in 141ms","service":"mindrune-api","timestamp":"2025-03-26 13:10:32"}
{"level":"info","message":"Total Neo4j operation time: 233ms","service":"mindrune-api","timestamp":"2025-03-26 13:10:32"}
{"level":"info","message":"Neo4j session closed after 234ms","service":"mindrune-api","timestamp":"2025-03-26 13:10:32"}
{"level":"info","message":"Neo4j insertion completed in 234ms","service":"mindrune-api","timestamp":"2025-03-26 13:10:32"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 13:10:32"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-26 13:10:32"}
{"level":"info","message":"Total request processing time: 250ms","service":"mindrune-api","timestamp":"2025-03-26 13:10:32"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 13:24:52"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 13:24:53"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Data size: 4958 bytes","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Event count: 25","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Processing 25 events","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Player node updated in 361ms","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 471ms","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 136ms","service":"mindrune-api","timestamp":"2025-03-26 13:25:16"}
{"level":"info","message":"Processing batch of 6 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 13:25:17"}
{"level":"info","message":"Processing 6 HIT_SPLAT events: 3 incoming, 3 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 13:25:17"}
{"level":"info","message":"Completed batch of 6 HIT_SPLAT events in 381ms","service":"mindrune-api","timestamp":"2025-03-26 13:25:17"}
{"level":"info","message":"All events processed in 990ms","service":"mindrune-api","timestamp":"2025-03-26 13:25:17"}
{"level":"info","message":"Total Neo4j operation time: 1354ms","service":"mindrune-api","timestamp":"2025-03-26 13:25:17"}
{"level":"info","message":"Neo4j session closed after 1354ms","service":"mindrune-api","timestamp":"2025-03-26 13:25:17"}
{"level":"info","message":"Neo4j insertion completed in 1356ms","service":"mindrune-api","timestamp":"2025-03-26 13:25:17"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 13:25:17"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 13:25:17"}
{"level":"info","message":"Total request processing time: 1368ms","service":"mindrune-api","timestamp":"2025-03-26 13:25:17"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:26:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:26:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 13:26:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:26:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 13:26:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:26:15"}
{"level":"info","message":"Data size: 3734 bytes","service":"mindrune-api","timestamp":"2025-03-26 13:26:15"}
{"level":"info","message":"Event count: 19","service":"mindrune-api","timestamp":"2025-03-26 13:26:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:26:15"}
{"level":"info","message":"Processing 19 events","service":"mindrune-api","timestamp":"2025-03-26 13:26:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 13:26:15"}
{"level":"info","message":"Player node updated in 98ms","service":"mindrune-api","timestamp":"2025-03-26 13:26:16"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 13:26:16"}
{"level":"info","message":"Processing batch of 6 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 13:26:16"}
{"level":"info","message":"Processing 6 HIT_SPLAT events: 4 incoming, 2 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 13:26:16"}
{"level":"error","message":"Error in Neo4j operations after 100ms: npcName.trim is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:26:16"}
{"level":"info","message":"Neo4j session closed after 100ms","service":"mindrune-api","timestamp":"2025-03-26 13:26:16"}
{"level":"error","message":"Error processing create request after 104ms: npcName.trim is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:26:16"}
{"level":"error","message":"500 - npcName.trim is not a function - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-26 13:26:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:27:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:27:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 13:27:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:27:15"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 13:27:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:27:15"}
{"level":"info","message":"Data size: 727 bytes","service":"mindrune-api","timestamp":"2025-03-26 13:27:15"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 13:27:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:27:15"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 13:27:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 13:27:15"}
{"level":"info","message":"Player node updated in 89ms","service":"mindrune-api","timestamp":"2025-03-26 13:27:16"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 13:27:16"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 13:27:16"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 13:27:16"}
{"level":"error","message":"Error in Neo4j operations after 91ms: npcName.trim is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:27:16"}
{"level":"info","message":"Neo4j session closed after 91ms","service":"mindrune-api","timestamp":"2025-03-26 13:27:16"}
{"level":"error","message":"Error processing create request after 93ms: npcName.trim is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:27:16"}
{"level":"error","message":"500 - npcName.trim is not a function - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-26 13:27:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:28:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:28:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 13:28:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:28:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 13:28:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:28:15"}
{"level":"info","message":"Data size: 931 bytes","service":"mindrune-api","timestamp":"2025-03-26 13:28:15"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-26 13:28:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:28:15"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-26 13:28:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 13:28:15"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-26 13:28:16"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 13:28:16"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 13:28:16"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 4 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 13:28:16"}
{"level":"error","message":"Error in Neo4j operations after 102ms: npcName.trim is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:28:16"}
{"level":"info","message":"Neo4j session closed after 103ms","service":"mindrune-api","timestamp":"2025-03-26 13:28:16"}
{"level":"error","message":"Error processing create request after 106ms: npcName.trim is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:28:16"}
{"level":"error","message":"500 - npcName.trim is not a function - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-26 13:28:16"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 13:28:43"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 13:28:43"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 13:28:56"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 13:28:56"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Data size: 7827 bytes","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Event count: 39","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Processing 39 events","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Player node updated in 376ms","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Processing batch of 13 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Processing 13 HIT_SPLAT events: 7 incoming, 6 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"error","message":"Error in Neo4j operations after 380ms: cleanedName.indexOf is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Neo4j session closed after 380ms","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"error","message":"Error processing create request after 386ms: cleanedName.indexOf is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"error","message":"500 - cleanedName.indexOf is not a function - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-26 13:29:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:30:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:30:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 13:30:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:30:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 13:30:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"info","message":"Data size: 14225 bytes","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"info","message":"Event count: 72","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"info","message":"Processing 72 events","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"info","message":"Processing batch of 6 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"info","message":"Completed batch of 6 MENU_CLICK events in 157ms","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"info","message":"Processing batch of 41 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"info","message":"Completed batch of 41 XP_GAIN events in 97ms","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"info","message":"Processing batch of 22 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"info","message":"Processing 22 HIT_SPLAT events: 11 incoming, 11 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"error","message":"Error in Neo4j operations after 358ms: cleanedName.indexOf is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"info","message":"Neo4j session closed after 358ms","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"error","message":"Error processing create request after 361ms: cleanedName.indexOf is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"error","message":"500 - cleanedName.indexOf is not a function - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-26 13:30:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:31:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:31:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 13:31:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:31:15"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 13:31:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:31:15"}
{"level":"info","message":"Data size: 727 bytes","service":"mindrune-api","timestamp":"2025-03-26 13:31:15"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 13:31:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:31:16"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 13:31:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 13:31:16"}
{"level":"info","message":"Player node updated in 99ms","service":"mindrune-api","timestamp":"2025-03-26 13:31:16"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 13:31:16"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 13:31:16"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 13:31:16"}
{"level":"error","message":"Error in Neo4j operations after 101ms: cleanedName.indexOf is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:31:16"}
{"level":"info","message":"Neo4j session closed after 101ms","service":"mindrune-api","timestamp":"2025-03-26 13:31:16"}
{"level":"error","message":"Error processing create request after 104ms: cleanedName.indexOf is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:31:16"}
{"level":"error","message":"500 - cleanedName.indexOf is not a function - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-26 13:31:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:32:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:32:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 13:32:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:32:15"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 13:32:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:32:15"}
{"level":"info","message":"Data size: 727 bytes","service":"mindrune-api","timestamp":"2025-03-26 13:32:15"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 13:32:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:32:15"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 13:32:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 13:32:16"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-26 13:32:16"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 13:32:16"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 13:32:16"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 13:32:16"}
{"level":"error","message":"Error in Neo4j operations after 93ms: cleanedName.indexOf is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:32:16"}
{"level":"info","message":"Neo4j session closed after 94ms","service":"mindrune-api","timestamp":"2025-03-26 13:32:16"}
{"level":"error","message":"Error processing create request after 96ms: cleanedName.indexOf is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:32:16"}
{"level":"error","message":"500 - cleanedName.indexOf is not a function - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-26 13:32:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:33:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:33:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 13:33:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:33:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 13:33:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:33:15"}
{"level":"info","message":"Data size: 928 bytes","service":"mindrune-api","timestamp":"2025-03-26 13:33:15"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-26 13:33:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 13:33:15"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-26 13:33:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 13:33:15"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-26 13:33:16"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 13:33:16"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 13:33:16"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 4 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 13:33:16"}
{"level":"error","message":"Error in Neo4j operations after 93ms: cleanedName.indexOf is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:33:16"}
{"level":"info","message":"Neo4j session closed after 93ms","service":"mindrune-api","timestamp":"2025-03-26 13:33:16"}
{"level":"error","message":"Error processing create request after 96ms: cleanedName.indexOf is not a function","service":"mindrune-api","timestamp":"2025-03-26 13:33:16"}
{"level":"error","message":"500 - cleanedName.indexOf is not a function - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-26 13:33:16"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 13:35:07"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 13:35:07"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 14:01:44"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 14:01:44"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 14:14:57"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 14:14:57"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Data size: 984 bytes","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Event count: 5","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Processing 5 events","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Player node updated in 378ms","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 14:15:16"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 769ms","service":"mindrune-api","timestamp":"2025-03-26 14:15:17"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 14:15:17"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 222ms","service":"mindrune-api","timestamp":"2025-03-26 14:15:17"}
{"level":"info","message":"All events processed in 991ms","service":"mindrune-api","timestamp":"2025-03-26 14:15:17"}
{"level":"info","message":"Total Neo4j operation time: 1374ms","service":"mindrune-api","timestamp":"2025-03-26 14:15:17"}
{"level":"info","message":"Neo4j session closed after 1374ms","service":"mindrune-api","timestamp":"2025-03-26 14:15:17"}
{"level":"info","message":"Neo4j insertion completed in 1375ms","service":"mindrune-api","timestamp":"2025-03-26 14:15:17"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 14:15:17"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-26 14:15:17"}
{"level":"info","message":"Total request processing time: 1393ms","service":"mindrune-api","timestamp":"2025-03-26 14:15:17"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 14:19:39"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 14:19:39"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Data size: 818 bytes","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Player node updated in 351ms","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 14:20:16"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 839ms","service":"mindrune-api","timestamp":"2025-03-26 14:20:17"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 14:20:17"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 160ms","service":"mindrune-api","timestamp":"2025-03-26 14:20:17"}
{"level":"info","message":"All events processed in 1000ms","service":"mindrune-api","timestamp":"2025-03-26 14:20:17"}
{"level":"info","message":"Total Neo4j operation time: 1355ms","service":"mindrune-api","timestamp":"2025-03-26 14:20:17"}
{"level":"info","message":"Neo4j session closed after 1355ms","service":"mindrune-api","timestamp":"2025-03-26 14:20:17"}
{"level":"info","message":"Neo4j insertion completed in 1357ms","service":"mindrune-api","timestamp":"2025-03-26 14:20:17"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 14:20:17"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-26 14:20:17"}
{"level":"info","message":"Total request processing time: 1373ms","service":"mindrune-api","timestamp":"2025-03-26 14:20:17"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 14:22:57"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 14:22:57"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 14:23:03"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 14:23:04"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 14:23:10"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 14:23:10"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Data size: 286 bytes","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Player node updated in 104ms","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 802ms","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"All events processed in 802ms","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Total Neo4j operation time: 908ms","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Neo4j session closed after 909ms","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Neo4j insertion completed in 910ms","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Total request processing time: 928ms","service":"mindrune-api","timestamp":"2025-03-26 14:23:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Data size: 1033 bytes","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Event count: 5","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Processing 5 events","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Player node updated in 90ms","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 580ms","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 160ms","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 119ms","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"All events processed in 860ms","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Total Neo4j operation time: 952ms","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Neo4j session closed after 952ms","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Neo4j insertion completed in 952ms","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Total request processing time: 968ms","service":"mindrune-api","timestamp":"2025-03-26 14:24:16"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 14:26:39"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 14:26:39"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Data size: 2687 bytes","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Event count: 14","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Processing 14 events","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Player node updated in 357ms","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Processing batch of 9 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 14:27:16"}
{"level":"info","message":"Completed batch of 9 MENU_CLICK events in 776ms","service":"mindrune-api","timestamp":"2025-03-26 14:27:17"}
{"level":"info","message":"Processing batch of 4 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 14:27:17"}
{"level":"info","message":"Completed batch of 4 INVENTORY_CHANGE events in 477ms","service":"mindrune-api","timestamp":"2025-03-26 14:27:17"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 14:27:17"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 92ms","service":"mindrune-api","timestamp":"2025-03-26 14:27:17"}
{"level":"info","message":"All events processed in 1345ms","service":"mindrune-api","timestamp":"2025-03-26 14:27:17"}
{"level":"info","message":"Total Neo4j operation time: 1705ms","service":"mindrune-api","timestamp":"2025-03-26 14:27:17"}
{"level":"info","message":"Neo4j session closed after 1706ms","service":"mindrune-api","timestamp":"2025-03-26 14:27:17"}
{"level":"info","message":"Neo4j insertion completed in 1707ms","service":"mindrune-api","timestamp":"2025-03-26 14:27:17"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 14:27:17"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-26 14:27:17"}
{"level":"info","message":"Total request processing time: 1726ms","service":"mindrune-api","timestamp":"2025-03-26 14:27:17"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Data size: 6033 bytes","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Event count: 30","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Processing 30 events","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 757ms","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Processing batch of 20 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 14:30:16"}
{"level":"info","message":"Completed batch of 20 XP_GAIN events in 124ms","service":"mindrune-api","timestamp":"2025-03-26 14:30:17"}
{"level":"info","message":"Processing batch of 9 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 14:30:17"}
{"level":"info","message":"Processing 9 HIT_SPLAT events: 4 incoming, 5 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 14:30:17"}
{"level":"info","message":"Completed batch of 9 HIT_SPLAT events in 378ms","service":"mindrune-api","timestamp":"2025-03-26 14:30:17"}
{"level":"info","message":"All events processed in 1261ms","service":"mindrune-api","timestamp":"2025-03-26 14:30:17"}
{"level":"info","message":"Total Neo4j operation time: 1362ms","service":"mindrune-api","timestamp":"2025-03-26 14:30:17"}
{"level":"info","message":"Neo4j session closed after 1363ms","service":"mindrune-api","timestamp":"2025-03-26 14:30:17"}
{"level":"info","message":"Neo4j insertion completed in 1364ms","service":"mindrune-api","timestamp":"2025-03-26 14:30:17"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 14:30:17"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 14:30:17"}
{"level":"info","message":"Total request processing time: 1381ms","service":"mindrune-api","timestamp":"2025-03-26 14:30:17"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 14:39:12"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 14:39:13"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Data size: 281 bytes","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Player node updated in 358ms","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 14:41:16"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 718ms","service":"mindrune-api","timestamp":"2025-03-26 14:41:17"}
{"level":"info","message":"All events processed in 718ms","service":"mindrune-api","timestamp":"2025-03-26 14:41:17"}
{"level":"info","message":"Total Neo4j operation time: 1079ms","service":"mindrune-api","timestamp":"2025-03-26 14:41:17"}
{"level":"info","message":"Neo4j session closed after 1079ms","service":"mindrune-api","timestamp":"2025-03-26 14:41:17"}
{"level":"info","message":"Neo4j insertion completed in 1080ms","service":"mindrune-api","timestamp":"2025-03-26 14:41:17"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 14:41:17"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-26 14:41:17"}
{"level":"info","message":"Total request processing time: 1094ms","service":"mindrune-api","timestamp":"2025-03-26 14:41:17"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Data size: 286 bytes","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 786ms","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"All events processed in 787ms","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Total Neo4j operation time: 888ms","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Neo4j session closed after 888ms","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Neo4j insertion completed in 889ms","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Total request processing time: 902ms","service":"mindrune-api","timestamp":"2025-03-26 14:42:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Data size: 457 bytes","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 515ms","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"All events processed in 515ms","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Total Neo4j operation time: 607ms","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Neo4j session closed after 608ms","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Neo4j insertion completed in 609ms","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Total request processing time: 620ms","service":"mindrune-api","timestamp":"2025-03-26 14:43:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Data size: 452 bytes","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Player node updated in 133ms","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 668ms","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"All events processed in 668ms","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Total Neo4j operation time: 804ms","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Neo4j session closed after 804ms","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Neo4j insertion completed in 804ms","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Total request processing time: 818ms","service":"mindrune-api","timestamp":"2025-03-26 14:50:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Data size: 629 bytes","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 541ms","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"All events processed in 541ms","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Total Neo4j operation time: 634ms","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Neo4j session closed after 635ms","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Neo4j insertion completed in 635ms","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Total request processing time: 649ms","service":"mindrune-api","timestamp":"2025-03-26 14:52:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Data size: 286 bytes","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 465ms","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"All events processed in 465ms","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Total Neo4j operation time: 565ms","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Neo4j session closed after 566ms","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Neo4j insertion completed in 567ms","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Total request processing time: 580ms","service":"mindrune-api","timestamp":"2025-03-26 14:53:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Data size: 451 bytes","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Player node updated in 90ms","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 744ms","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"All events processed in 745ms","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Total Neo4j operation time: 836ms","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Neo4j session closed after 836ms","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Neo4j insertion completed in 837ms","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Total request processing time: 847ms","service":"mindrune-api","timestamp":"2025-03-26 14:54:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:55:36"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:55:36"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 14:55:36"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:55:36"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 14:55:36"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:55:36"}
{"level":"info","message":"Data size: 3079 bytes","service":"mindrune-api","timestamp":"2025-03-26 14:55:36"}
{"level":"info","message":"Event count: 12","service":"mindrune-api","timestamp":"2025-03-26 14:55:36"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:55:36"}
{"level":"info","message":"Processing 12 events","service":"mindrune-api","timestamp":"2025-03-26 14:55:36"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 14:55:36"}
{"level":"info","message":"Player node updated in 129ms","service":"mindrune-api","timestamp":"2025-03-26 14:55:36"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 14:55:36"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 14:55:36"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 750ms","service":"mindrune-api","timestamp":"2025-03-26 14:55:37"}
{"level":"info","message":"Processing batch of 10 INVENTORY_ITEM_MOVED events","service":"mindrune-api","timestamp":"2025-03-26 14:55:37"}
{"level":"info","message":"Processing unknown event types: INVENTORY_ITEM_MOVED","service":"mindrune-api","timestamp":"2025-03-26 14:55:37"}
{"level":"info","message":"Completed batch of 10 INVENTORY_ITEM_MOVED events in 130ms","service":"mindrune-api","timestamp":"2025-03-26 14:55:37"}
{"level":"info","message":"All events processed in 881ms","service":"mindrune-api","timestamp":"2025-03-26 14:55:37"}
{"level":"info","message":"Total Neo4j operation time: 1012ms","service":"mindrune-api","timestamp":"2025-03-26 14:55:37"}
{"level":"info","message":"Neo4j session closed after 1013ms","service":"mindrune-api","timestamp":"2025-03-26 14:55:37"}
{"level":"info","message":"Neo4j insertion completed in 1013ms","service":"mindrune-api","timestamp":"2025-03-26 14:55:37"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 14:55:37"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 14:55:37"}
{"level":"info","message":"Total request processing time: 1026ms","service":"mindrune-api","timestamp":"2025-03-26 14:55:37"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:56:36"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:56:36"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 14:56:36"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:56:36"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 14:56:36"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:56:36"}
{"level":"info","message":"Data size: 907 bytes","service":"mindrune-api","timestamp":"2025-03-26 14:56:36"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 14:56:36"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 14:56:36"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 14:56:36"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 14:56:36"}
{"level":"info","message":"Player node updated in 90ms","service":"mindrune-api","timestamp":"2025-03-26 14:56:36"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 14:56:36"}
{"level":"info","message":"Processing batch of 3 INVENTORY_ITEM_MOVED events","service":"mindrune-api","timestamp":"2025-03-26 14:56:36"}
{"level":"info","message":"Processing unknown event types: INVENTORY_ITEM_MOVED","service":"mindrune-api","timestamp":"2025-03-26 14:56:36"}
{"level":"info","message":"Completed batch of 3 INVENTORY_ITEM_MOVED events in 182ms","service":"mindrune-api","timestamp":"2025-03-26 14:56:37"}
{"level":"info","message":"All events processed in 182ms","service":"mindrune-api","timestamp":"2025-03-26 14:56:37"}
{"level":"info","message":"Total Neo4j operation time: 274ms","service":"mindrune-api","timestamp":"2025-03-26 14:56:37"}
{"level":"info","message":"Neo4j session closed after 274ms","service":"mindrune-api","timestamp":"2025-03-26 14:56:37"}
{"level":"info","message":"Neo4j insertion completed in 274ms","service":"mindrune-api","timestamp":"2025-03-26 14:56:37"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 14:56:37"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 14:56:37"}
{"level":"info","message":"Total request processing time: 288ms","service":"mindrune-api","timestamp":"2025-03-26 14:56:37"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 15:02:50"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 15:02:50"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 15:03:36"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:03:36"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:03:36"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:03:36"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:03:36"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 15:03:36"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:03:36"}
{"level":"info","message":"Data size: 1770 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:03:36"}
{"level":"info","message":"Event count: 7","service":"mindrune-api","timestamp":"2025-03-26 15:03:36"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:03:36"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 15:03:36"}
{"level":"info","message":"Processing 7 events","service":"mindrune-api","timestamp":"2025-03-26 15:03:36"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:03:36"}
{"level":"info","message":"Player node updated in 344ms","service":"mindrune-api","timestamp":"2025-03-26 15:03:37"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 15:03:37"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 15:03:37"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 483ms","service":"mindrune-api","timestamp":"2025-03-26 15:03:37"}
{"level":"info","message":"Processing batch of 5 INVENTORY_ITEM_MOVED events","service":"mindrune-api","timestamp":"2025-03-26 15:03:37"}
{"level":"info","message":"Processing unknown event types: INVENTORY_ITEM_MOVED","service":"mindrune-api","timestamp":"2025-03-26 15:03:37"}
{"level":"info","message":"Completed batch of 5 INVENTORY_ITEM_MOVED events in 184ms","service":"mindrune-api","timestamp":"2025-03-26 15:03:37"}
{"level":"info","message":"All events processed in 668ms","service":"mindrune-api","timestamp":"2025-03-26 15:03:37"}
{"level":"info","message":"Total Neo4j operation time: 1016ms","service":"mindrune-api","timestamp":"2025-03-26 15:03:37"}
{"level":"info","message":"Neo4j session closed after 1016ms","service":"mindrune-api","timestamp":"2025-03-26 15:03:37"}
{"level":"info","message":"Neo4j insertion completed in 1017ms","service":"mindrune-api","timestamp":"2025-03-26 15:03:37"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 15:03:37"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 15:03:37"}
{"level":"info","message":"Total request processing time: 1032ms","service":"mindrune-api","timestamp":"2025-03-26 15:03:37"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 15:07:17"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 15:07:17"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 15:07:36"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:07:36"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:07:36"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:07:36"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:07:36"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 15:07:36"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:07:36"}
{"level":"info","message":"Data size: 1067 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:07:36"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-26 15:07:36"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:07:36"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 15:07:36"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-26 15:07:36"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:07:36"}
{"level":"info","message":"Player node updated in 397ms","service":"mindrune-api","timestamp":"2025-03-26 15:07:37"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 15:07:37"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 15:07:37"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 542ms","service":"mindrune-api","timestamp":"2025-03-26 15:07:37"}
{"level":"info","message":"Processing batch of 3 INVENTORY_ITEM_MOVED events","service":"mindrune-api","timestamp":"2025-03-26 15:07:37"}
{"level":"info","message":"Processing unknown event types: INVENTORY_ITEM_MOVED","service":"mindrune-api","timestamp":"2025-03-26 15:07:37"}
{"level":"info","message":"Completed batch of 3 INVENTORY_ITEM_MOVED events in 161ms","service":"mindrune-api","timestamp":"2025-03-26 15:07:37"}
{"level":"info","message":"All events processed in 705ms","service":"mindrune-api","timestamp":"2025-03-26 15:07:37"}
{"level":"info","message":"Total Neo4j operation time: 1104ms","service":"mindrune-api","timestamp":"2025-03-26 15:07:37"}
{"level":"info","message":"Neo4j session closed after 1104ms","service":"mindrune-api","timestamp":"2025-03-26 15:07:37"}
{"level":"info","message":"Neo4j insertion completed in 1105ms","service":"mindrune-api","timestamp":"2025-03-26 15:07:37"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 15:07:37"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 15:07:37"}
{"level":"info","message":"Total request processing time: 1121ms","service":"mindrune-api","timestamp":"2025-03-26 15:07:37"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:08:36"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:08:36"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:08:36"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:08:36"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 15:08:36"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:08:36"}
{"level":"info","message":"Data size: 639 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:08:36"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-26 15:08:36"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:08:36"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-26 15:08:36"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:08:36"}
{"level":"info","message":"Player node updated in 99ms","service":"mindrune-api","timestamp":"2025-03-26 15:08:36"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 15:08:36"}
{"level":"info","message":"Processing batch of 2 INVENTORY_ITEM_MOVED events","service":"mindrune-api","timestamp":"2025-03-26 15:08:36"}
{"level":"info","message":"Processing unknown event types: INVENTORY_ITEM_MOVED","service":"mindrune-api","timestamp":"2025-03-26 15:08:36"}
{"level":"info","message":"Completed batch of 2 INVENTORY_ITEM_MOVED events in 161ms","service":"mindrune-api","timestamp":"2025-03-26 15:08:37"}
{"level":"info","message":"All events processed in 161ms","service":"mindrune-api","timestamp":"2025-03-26 15:08:37"}
{"level":"info","message":"Total Neo4j operation time: 262ms","service":"mindrune-api","timestamp":"2025-03-26 15:08:37"}
{"level":"info","message":"Neo4j session closed after 262ms","service":"mindrune-api","timestamp":"2025-03-26 15:08:37"}
{"level":"info","message":"Neo4j insertion completed in 263ms","service":"mindrune-api","timestamp":"2025-03-26 15:08:37"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 15:08:37"}
{"level":"info","message":"SQL insertion completed in 8ms","service":"mindrune-api","timestamp":"2025-03-26 15:08:37"}
{"level":"info","message":"Total request processing time: 274ms","service":"mindrune-api","timestamp":"2025-03-26 15:08:37"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 15:12:02"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 15:12:02"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 15:12:36"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:12:36"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:12:36"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:12:36"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:12:36"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 15:12:36"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:12:36"}
{"level":"info","message":"Data size: 1750 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:12:36"}
{"level":"info","message":"Event count: 7","service":"mindrune-api","timestamp":"2025-03-26 15:12:36"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:12:36"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 15:12:36"}
{"level":"info","message":"Processing 7 events","service":"mindrune-api","timestamp":"2025-03-26 15:12:36"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:12:36"}
{"level":"info","message":"Player node updated in 425ms","service":"mindrune-api","timestamp":"2025-03-26 15:12:37"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 15:12:37"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 15:12:37"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 521ms","service":"mindrune-api","timestamp":"2025-03-26 15:12:37"}
{"level":"info","message":"Processing batch of 5 INVENTORY_ITEM_MOVED events","service":"mindrune-api","timestamp":"2025-03-26 15:12:37"}
{"level":"info","message":"Processing unknown event types: INVENTORY_ITEM_MOVED","service":"mindrune-api","timestamp":"2025-03-26 15:12:37"}
{"level":"info","message":"Completed batch of 5 INVENTORY_ITEM_MOVED events in 163ms","service":"mindrune-api","timestamp":"2025-03-26 15:12:37"}
{"level":"info","message":"All events processed in 685ms","service":"mindrune-api","timestamp":"2025-03-26 15:12:37"}
{"level":"info","message":"Total Neo4j operation time: 1114ms","service":"mindrune-api","timestamp":"2025-03-26 15:12:37"}
{"level":"info","message":"Neo4j session closed after 1114ms","service":"mindrune-api","timestamp":"2025-03-26 15:12:37"}
{"level":"info","message":"Neo4j insertion completed in 1115ms","service":"mindrune-api","timestamp":"2025-03-26 15:12:37"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 15:12:37"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 15:12:37"}
{"level":"info","message":"Total request processing time: 1130ms","service":"mindrune-api","timestamp":"2025-03-26 15:12:37"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 15:14:00"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 15:14:00"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 15:14:36"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:14:36"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:14:36"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:14:36"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:14:36"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 15:14:36"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:14:36"}
{"level":"info","message":"Data size: 1461 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:14:36"}
{"level":"info","message":"Event count: 5","service":"mindrune-api","timestamp":"2025-03-26 15:14:36"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:14:36"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 15:14:36"}
{"level":"info","message":"Processing 5 events","service":"mindrune-api","timestamp":"2025-03-26 15:14:36"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:14:36"}
{"level":"info","message":"Player node updated in 351ms","service":"mindrune-api","timestamp":"2025-03-26 15:14:37"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 15:14:37"}
{"level":"info","message":"Processing batch of 5 INVENTORY_ITEM_MOVED events","service":"mindrune-api","timestamp":"2025-03-26 15:14:37"}
{"level":"info","message":"Completed batch of 5 INVENTORY_ITEM_MOVED events in 479ms","service":"mindrune-api","timestamp":"2025-03-26 15:14:37"}
{"level":"info","message":"All events processed in 479ms","service":"mindrune-api","timestamp":"2025-03-26 15:14:37"}
{"level":"info","message":"Total Neo4j operation time: 833ms","service":"mindrune-api","timestamp":"2025-03-26 15:14:37"}
{"level":"info","message":"Neo4j session closed after 833ms","service":"mindrune-api","timestamp":"2025-03-26 15:14:37"}
{"level":"info","message":"Neo4j insertion completed in 834ms","service":"mindrune-api","timestamp":"2025-03-26 15:14:37"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 15:14:37"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 15:14:37"}
{"level":"info","message":"Total request processing time: 849ms","service":"mindrune-api","timestamp":"2025-03-26 15:14:37"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:16:36"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:16:36"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:16:36"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:16:36"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 15:16:36"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:16:36"}
{"level":"info","message":"Data size: 7765 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:16:36"}
{"level":"info","message":"Event count: 39","service":"mindrune-api","timestamp":"2025-03-26 15:16:36"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:16:36"}
{"level":"info","message":"Processing 39 events","service":"mindrune-api","timestamp":"2025-03-26 15:16:36"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:16:36"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-26 15:16:36"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 15:16:36"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 15:16:36"}
{"level":"info","message":"Completed batch of 5 MENU_CLICK events in 783ms","service":"mindrune-api","timestamp":"2025-03-26 15:16:37"}
{"level":"info","message":"Processing batch of 2 INVENTORY_ITEM_ADDED events","service":"mindrune-api","timestamp":"2025-03-26 15:16:37"}
{"level":"info","message":"Processing unknown event types: INVENTORY_ITEM_ADDED","service":"mindrune-api","timestamp":"2025-03-26 15:16:37"}
{"level":"info","message":"Completed batch of 2 INVENTORY_ITEM_ADDED events in 96ms","service":"mindrune-api","timestamp":"2025-03-26 15:16:37"}
{"level":"info","message":"Processing batch of 21 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 15:16:37"}
{"level":"info","message":"Completed batch of 21 XP_GAIN events in 123ms","service":"mindrune-api","timestamp":"2025-03-26 15:16:37"}
{"level":"info","message":"Processing batch of 11 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 15:16:37"}
{"level":"info","message":"Processing 11 HIT_SPLAT events: 5 incoming, 6 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 15:16:37"}
{"level":"info","message":"Completed batch of 11 HIT_SPLAT events in 321ms","service":"mindrune-api","timestamp":"2025-03-26 15:16:38"}
{"level":"info","message":"All events processed in 1325ms","service":"mindrune-api","timestamp":"2025-03-26 15:16:38"}
{"level":"info","message":"Total Neo4j operation time: 1427ms","service":"mindrune-api","timestamp":"2025-03-26 15:16:38"}
{"level":"info","message":"Neo4j session closed after 1427ms","service":"mindrune-api","timestamp":"2025-03-26 15:16:38"}
{"level":"info","message":"Neo4j insertion completed in 1428ms","service":"mindrune-api","timestamp":"2025-03-26 15:16:38"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 15:16:38"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 15:16:38"}
{"level":"info","message":"Total request processing time: 1440ms","service":"mindrune-api","timestamp":"2025-03-26 15:16:38"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 15:19:19"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 15:19:19"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Data size: 7029 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Event count: 35","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Processing 35 events","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Player node updated in 357ms","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Grouped events into 5 types","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Processing batch of 6 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 15:20:13"}
{"level":"info","message":"Completed batch of 6 MENU_CLICK events in 779ms","service":"mindrune-api","timestamp":"2025-03-26 15:20:14"}
{"level":"info","message":"Processing batch of 2 INVENTORY_ITEM_MOVED events","service":"mindrune-api","timestamp":"2025-03-26 15:20:14"}
{"level":"info","message":"Completed batch of 2 INVENTORY_ITEM_MOVED events in 384ms","service":"mindrune-api","timestamp":"2025-03-26 15:20:14"}
{"level":"info","message":"Processing batch of 17 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 15:20:14"}
{"level":"info","message":"Completed batch of 17 XP_GAIN events in 95ms","service":"mindrune-api","timestamp":"2025-03-26 15:20:14"}
{"level":"info","message":"Processing batch of 7 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 15:20:14"}
{"level":"info","message":"Processing 7 HIT_SPLAT events: 3 incoming, 4 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 15:20:14"}
{"level":"info","message":"Completed batch of 7 HIT_SPLAT events in 326ms","service":"mindrune-api","timestamp":"2025-03-26 15:20:15"}
{"level":"info","message":"Processing batch of 3 INVENTORY_ITEM_ADDED events","service":"mindrune-api","timestamp":"2025-03-26 15:20:15"}
{"level":"info","message":"Processing unknown event types: INVENTORY_ITEM_ADDED","service":"mindrune-api","timestamp":"2025-03-26 15:20:15"}
{"level":"info","message":"Completed batch of 3 INVENTORY_ITEM_ADDED events in 184ms","service":"mindrune-api","timestamp":"2025-03-26 15:20:15"}
{"level":"info","message":"All events processed in 1772ms","service":"mindrune-api","timestamp":"2025-03-26 15:20:15"}
{"level":"info","message":"Total Neo4j operation time: 2133ms","service":"mindrune-api","timestamp":"2025-03-26 15:20:15"}
{"level":"info","message":"Neo4j session closed after 2133ms","service":"mindrune-api","timestamp":"2025-03-26 15:20:15"}
{"level":"info","message":"Neo4j insertion completed in 2134ms","service":"mindrune-api","timestamp":"2025-03-26 15:20:15"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 15:20:15"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 15:20:15"}
{"level":"info","message":"Total request processing time: 2150ms","service":"mindrune-api","timestamp":"2025-03-26 15:20:15"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 15:29:38"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 15:29:38"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Data size: 1208 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Event count: 5","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Processing 5 events","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Player node updated in 354ms","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 484ms","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Processing batch of 3 INVENTORY_ITEM_MOVED events","service":"mindrune-api","timestamp":"2025-03-26 15:30:13"}
{"level":"info","message":"Completed batch of 3 INVENTORY_ITEM_MOVED events in 383ms","service":"mindrune-api","timestamp":"2025-03-26 15:30:14"}
{"level":"info","message":"All events processed in 867ms","service":"mindrune-api","timestamp":"2025-03-26 15:30:14"}
{"level":"info","message":"Total Neo4j operation time: 1226ms","service":"mindrune-api","timestamp":"2025-03-26 15:30:14"}
{"level":"info","message":"Neo4j session closed after 1226ms","service":"mindrune-api","timestamp":"2025-03-26 15:30:14"}
{"level":"info","message":"Neo4j insertion completed in 1227ms","service":"mindrune-api","timestamp":"2025-03-26 15:30:14"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 15:30:14"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 15:30:14"}
{"level":"info","message":"Total request processing time: 1243ms","service":"mindrune-api","timestamp":"2025-03-26 15:30:14"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 15:36:58"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 15:36:58"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Data size: 286 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Player node updated in 351ms","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 494ms","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"All events processed in 494ms","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Total Neo4j operation time: 848ms","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Neo4j session closed after 848ms","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Neo4j insertion completed in 849ms","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Total request processing time: 863ms","service":"mindrune-api","timestamp":"2025-03-26 15:37:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"info","message":"Data size: 1927 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"info","message":"Event count: 7","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"info","message":"Processing 7 events","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"info","message":"Processing batch of 7 INVENTORY_ITEM_MOVED events","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"error","message":"Error in Neo4j operations after 201ms: Variable `event` already declared in outer scope (line 18, column 19 (offset: 561))\n\"        RETURN e, event\"\n                   ^","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"info","message":"Neo4j session closed after 201ms","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"error","message":"Error processing create request after 203ms: Variable `event` already declared in outer scope (line 18, column 19 (offset: 561))\n\"        RETURN e, event\"\n                   ^","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"error","message":"500 - Variable `event` already declared in outer scope (line 18, column 19 (offset: 561))\n\"        RETURN e, event\"\n                   ^ - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-26 15:38:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"info","message":"Data size: 531 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"info","message":"Processing batch of 1 INVENTORY_ITEM_MOVED events","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"error","message":"Error in Neo4j operations after 260ms: Variable `event` already declared in outer scope (line 18, column 19 (offset: 561))\n\"        RETURN e, event\"\n                   ^","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"info","message":"Neo4j session closed after 260ms","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"error","message":"Error processing create request after 263ms: Variable `event` already declared in outer scope (line 18, column 19 (offset: 561))\n\"        RETURN e, event\"\n                   ^","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"error","message":"500 - Variable `event` already declared in outer scope (line 18, column 19 (offset: 561))\n\"        RETURN e, event\"\n                   ^ - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-26 15:39:13"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 15:39:51"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 15:39:51"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Data size: 1610 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Event count: 6","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Processing 6 events","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Player node updated in 347ms","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Processing batch of 5 INVENTORY_ITEM_MOVED events","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Completed batch of 5 INVENTORY_ITEM_MOVED events in 383ms","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 15:40:13"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 711ms","service":"mindrune-api","timestamp":"2025-03-26 15:40:14"}
{"level":"info","message":"All events processed in 1096ms","service":"mindrune-api","timestamp":"2025-03-26 15:40:14"}
{"level":"info","message":"Total Neo4j operation time: 1445ms","service":"mindrune-api","timestamp":"2025-03-26 15:40:14"}
{"level":"info","message":"Neo4j session closed after 1445ms","service":"mindrune-api","timestamp":"2025-03-26 15:40:14"}
{"level":"info","message":"Neo4j insertion completed in 1446ms","service":"mindrune-api","timestamp":"2025-03-26 15:40:14"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 15:40:14"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-26 15:40:14"}
{"level":"info","message":"Total request processing time: 1459ms","service":"mindrune-api","timestamp":"2025-03-26 15:40:14"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:46:13"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:46:13"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:46:13"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:46:13"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 15:46:13"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:46:13"}
{"level":"info","message":"Data size: 3975 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:46:13"}
{"level":"info","message":"Event count: 20","service":"mindrune-api","timestamp":"2025-03-26 15:46:13"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:46:13"}
{"level":"info","message":"Processing 20 events","service":"mindrune-api","timestamp":"2025-03-26 15:46:13"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:46:13"}
{"level":"info","message":"Player node updated in 192ms","service":"mindrune-api","timestamp":"2025-03-26 15:46:13"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 15:46:13"}
{"level":"info","message":"Processing batch of 13 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 15:46:13"}
{"level":"info","message":"Completed batch of 13 MENU_CLICK events in 814ms","service":"mindrune-api","timestamp":"2025-03-26 15:46:14"}
{"level":"info","message":"Processing batch of 4 INVENTORY_ITEM_ADDED events","service":"mindrune-api","timestamp":"2025-03-26 15:46:14"}
{"level":"info","message":"Processing unknown event types: INVENTORY_ITEM_ADDED","service":"mindrune-api","timestamp":"2025-03-26 15:46:14"}
{"level":"info","message":"Completed batch of 4 INVENTORY_ITEM_ADDED events in 162ms","service":"mindrune-api","timestamp":"2025-03-26 15:46:14"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 15:46:14"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 123ms","service":"mindrune-api","timestamp":"2025-03-26 15:46:14"}
{"level":"info","message":"Processing batch of 2 INVENTORY_ITEM_MOVED events","service":"mindrune-api","timestamp":"2025-03-26 15:46:14"}
{"level":"info","message":"Completed batch of 2 INVENTORY_ITEM_MOVED events in 398ms","service":"mindrune-api","timestamp":"2025-03-26 15:46:14"}
{"level":"info","message":"All events processed in 1499ms","service":"mindrune-api","timestamp":"2025-03-26 15:46:14"}
{"level":"info","message":"Total Neo4j operation time: 1693ms","service":"mindrune-api","timestamp":"2025-03-26 15:46:14"}
{"level":"info","message":"Neo4j session closed after 1693ms","service":"mindrune-api","timestamp":"2025-03-26 15:46:14"}
{"level":"info","message":"Neo4j insertion completed in 1693ms","service":"mindrune-api","timestamp":"2025-03-26 15:46:14"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 15:46:14"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 15:46:14"}
{"level":"info","message":"Total request processing time: 1707ms","service":"mindrune-api","timestamp":"2025-03-26 15:46:14"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Data size: 3994 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Event count: 15","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Processing 15 events","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Player node updated in 106ms","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Processing batch of 14 INVENTORY_ITEM_MOVED events","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Completed batch of 14 INVENTORY_ITEM_MOVED events in 294ms","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 15:47:13"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 729ms","service":"mindrune-api","timestamp":"2025-03-26 15:47:14"}
{"level":"info","message":"All events processed in 1025ms","service":"mindrune-api","timestamp":"2025-03-26 15:47:14"}
{"level":"info","message":"Total Neo4j operation time: 1133ms","service":"mindrune-api","timestamp":"2025-03-26 15:47:14"}
{"level":"info","message":"Neo4j session closed after 1133ms","service":"mindrune-api","timestamp":"2025-03-26 15:47:14"}
{"level":"info","message":"Neo4j insertion completed in 1133ms","service":"mindrune-api","timestamp":"2025-03-26 15:47:14"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 15:47:14"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 15:47:14"}
{"level":"info","message":"Total request processing time: 1146ms","service":"mindrune-api","timestamp":"2025-03-26 15:47:14"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 15:50:29"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 15:50:29"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Data size: 3838 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Event count: 19","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Processing 19 events","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Player node updated in 356ms","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Processing batch of 13 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Completed batch of 13 MENU_CLICK events in 362ms","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Processing batch of 3 INVENTORY_ITEM_MOVED events","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Processing unknown event types: INVENTORY_ITEM_MOVED","service":"mindrune-api","timestamp":"2025-03-26 15:51:13"}
{"level":"info","message":"Completed batch of 3 INVENTORY_ITEM_MOVED events in 188ms","service":"mindrune-api","timestamp":"2025-03-26 15:51:14"}
{"level":"info","message":"Processing batch of 3 INVENTORY_ITEM_ADDED events","service":"mindrune-api","timestamp":"2025-03-26 15:51:14"}
{"level":"info","message":"Processing unknown event types: INVENTORY_ITEM_ADDED","service":"mindrune-api","timestamp":"2025-03-26 15:51:14"}
{"level":"info","message":"Completed batch of 3 INVENTORY_ITEM_ADDED events in 162ms","service":"mindrune-api","timestamp":"2025-03-26 15:51:14"}
{"level":"info","message":"All events processed in 713ms","service":"mindrune-api","timestamp":"2025-03-26 15:51:14"}
{"level":"info","message":"Total Neo4j operation time: 1072ms","service":"mindrune-api","timestamp":"2025-03-26 15:51:14"}
{"level":"info","message":"Neo4j session closed after 1072ms","service":"mindrune-api","timestamp":"2025-03-26 15:51:14"}
{"level":"info","message":"Neo4j insertion completed in 1073ms","service":"mindrune-api","timestamp":"2025-03-26 15:51:14"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 15:51:14"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 15:51:14"}
{"level":"info","message":"Total request processing time: 1088ms","service":"mindrune-api","timestamp":"2025-03-26 15:51:14"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:55:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:55:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 15:55:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:55:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 15:55:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:55:15"}
{"level":"info","message":"Data size: 3473 bytes","service":"mindrune-api","timestamp":"2025-03-26 15:55:15"}
{"level":"info","message":"Event count: 17","service":"mindrune-api","timestamp":"2025-03-26 15:55:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 15:55:15"}
{"level":"info","message":"Processing 17 events","service":"mindrune-api","timestamp":"2025-03-26 15:55:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 15:55:15"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-26 15:55:15"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 15:55:15"}
{"level":"info","message":"Processing batch of 11 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 15:55:15"}
{"level":"info","message":"Completed batch of 11 MENU_CLICK events in 342ms","service":"mindrune-api","timestamp":"2025-03-26 15:55:16"}
{"level":"info","message":"Processing batch of 6 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 15:55:16"}
{"level":"info","message":"Completed batch of 6 INVENTORY_CHANGE events in 298ms","service":"mindrune-api","timestamp":"2025-03-26 15:55:16"}
{"level":"info","message":"All events processed in 641ms","service":"mindrune-api","timestamp":"2025-03-26 15:55:16"}
{"level":"info","message":"Total Neo4j operation time: 733ms","service":"mindrune-api","timestamp":"2025-03-26 15:55:16"}
{"level":"info","message":"Neo4j session closed after 733ms","service":"mindrune-api","timestamp":"2025-03-26 15:55:16"}
{"level":"info","message":"Neo4j insertion completed in 733ms","service":"mindrune-api","timestamp":"2025-03-26 15:55:16"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 15:55:16"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 15:55:16"}
{"level":"info","message":"Total request processing time: 749ms","service":"mindrune-api","timestamp":"2025-03-26 15:55:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:00:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:00:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:00:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:00:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:00:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:00:15"}
{"level":"info","message":"Data size: 23271 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:00:15"}
{"level":"info","message":"Event count: 118","service":"mindrune-api","timestamp":"2025-03-26 16:00:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:00:15"}
{"level":"info","message":"Processing 118 events","service":"mindrune-api","timestamp":"2025-03-26 16:00:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:00:15"}
{"level":"info","message":"Player node updated in 125ms","service":"mindrune-api","timestamp":"2025-03-26 16:00:15"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 16:00:15"}
{"level":"info","message":"Processing batch of 7 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 16:00:15"}
{"level":"info","message":"Completed batch of 7 MENU_CLICK events in 481ms","service":"mindrune-api","timestamp":"2025-03-26 16:00:16"}
{"level":"info","message":"Processing batch of 76 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 16:00:16"}
{"level":"info","message":"Completed batch of 76 XP_GAIN events in 105ms","service":"mindrune-api","timestamp":"2025-03-26 16:00:16"}
{"level":"info","message":"Processing batch of 32 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:00:16"}
{"level":"info","message":"Processing 32 HIT_SPLAT events: 14 incoming, 18 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:00:16"}
{"level":"info","message":"Completed batch of 32 HIT_SPLAT events in 271ms","service":"mindrune-api","timestamp":"2025-03-26 16:00:16"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 16:00:16"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 451ms","service":"mindrune-api","timestamp":"2025-03-26 16:00:17"}
{"level":"info","message":"All events processed in 1311ms","service":"mindrune-api","timestamp":"2025-03-26 16:00:17"}
{"level":"info","message":"Total Neo4j operation time: 1436ms","service":"mindrune-api","timestamp":"2025-03-26 16:00:17"}
{"level":"info","message":"Neo4j session closed after 1436ms","service":"mindrune-api","timestamp":"2025-03-26 16:00:17"}
{"level":"info","message":"Neo4j insertion completed in 1437ms","service":"mindrune-api","timestamp":"2025-03-26 16:00:17"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:00:17"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 16:00:17"}
{"level":"info","message":"Total request processing time: 1451ms","service":"mindrune-api","timestamp":"2025-03-26 16:00:17"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:01:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:01:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:01:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:01:15"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 16:01:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:01:15"}
{"level":"info","message":"Data size: 27794 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:01:15"}
{"level":"info","message":"Event count: 141","service":"mindrune-api","timestamp":"2025-03-26 16:01:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:01:15"}
{"level":"info","message":"Processing 141 events","service":"mindrune-api","timestamp":"2025-03-26 16:01:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:01:15"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-26 16:01:15"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 16:01:15"}
{"level":"info","message":"Processing batch of 46 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:01:15"}
{"level":"info","message":"Processing 46 HIT_SPLAT events: 21 incoming, 25 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:01:15"}
{"level":"info","message":"Completed batch of 46 HIT_SPLAT events in 350ms","service":"mindrune-api","timestamp":"2025-03-26 16:01:16"}
{"level":"info","message":"Processing batch of 92 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 16:01:16"}
{"level":"info","message":"Completed batch of 92 XP_GAIN events in 130ms","service":"mindrune-api","timestamp":"2025-03-26 16:01:16"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 16:01:16"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 806ms","service":"mindrune-api","timestamp":"2025-03-26 16:01:17"}
{"level":"info","message":"All events processed in 1288ms","service":"mindrune-api","timestamp":"2025-03-26 16:01:17"}
{"level":"info","message":"Total Neo4j operation time: 1381ms","service":"mindrune-api","timestamp":"2025-03-26 16:01:17"}
{"level":"info","message":"Neo4j session closed after 1381ms","service":"mindrune-api","timestamp":"2025-03-26 16:01:17"}
{"level":"info","message":"Neo4j insertion completed in 1382ms","service":"mindrune-api","timestamp":"2025-03-26 16:01:17"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:01:17"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 16:01:17"}
{"level":"info","message":"Total request processing time: 1396ms","service":"mindrune-api","timestamp":"2025-03-26 16:01:17"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Data size: 2472 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Event count: 12","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Processing 12 events","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 2 incoming, 2 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 236ms","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Processing batch of 8 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 16:02:15"}
{"level":"info","message":"Completed batch of 8 XP_GAIN events in 122ms","service":"mindrune-api","timestamp":"2025-03-26 16:02:16"}
{"level":"info","message":"All events processed in 359ms","service":"mindrune-api","timestamp":"2025-03-26 16:02:16"}
{"level":"info","message":"Total Neo4j operation time: 461ms","service":"mindrune-api","timestamp":"2025-03-26 16:02:16"}
{"level":"info","message":"Neo4j session closed after 461ms","service":"mindrune-api","timestamp":"2025-03-26 16:02:16"}
{"level":"info","message":"Neo4j insertion completed in 462ms","service":"mindrune-api","timestamp":"2025-03-26 16:02:16"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:02:16"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 16:02:16"}
{"level":"info","message":"Total request processing time: 475ms","service":"mindrune-api","timestamp":"2025-03-26 16:02:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:05:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:05:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:05:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:05:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:05:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:05:15"}
{"level":"info","message":"Data size: 10691 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:05:15"}
{"level":"info","message":"Event count: 54","service":"mindrune-api","timestamp":"2025-03-26 16:05:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:05:15"}
{"level":"info","message":"Processing 54 events","service":"mindrune-api","timestamp":"2025-03-26 16:05:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:05:15"}
{"level":"info","message":"Player node updated in 98ms","service":"mindrune-api","timestamp":"2025-03-26 16:05:15"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 16:05:15"}
{"level":"info","message":"Processing batch of 9 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 16:05:15"}
{"level":"info","message":"Completed batch of 9 MENU_CLICK events in 757ms","service":"mindrune-api","timestamp":"2025-03-26 16:05:16"}
{"level":"info","message":"Processing batch of 28 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 16:05:16"}
{"level":"info","message":"Completed batch of 28 XP_GAIN events in 123ms","service":"mindrune-api","timestamp":"2025-03-26 16:05:16"}
{"level":"info","message":"Processing batch of 14 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:05:16"}
{"level":"info","message":"Processing 14 HIT_SPLAT events: 6 incoming, 8 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:05:16"}
{"level":"info","message":"Completed batch of 14 HIT_SPLAT events in 323ms","service":"mindrune-api","timestamp":"2025-03-26 16:05:16"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 16:05:16"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 399ms","service":"mindrune-api","timestamp":"2025-03-26 16:05:17"}
{"level":"info","message":"All events processed in 1602ms","service":"mindrune-api","timestamp":"2025-03-26 16:05:17"}
{"level":"info","message":"Total Neo4j operation time: 1701ms","service":"mindrune-api","timestamp":"2025-03-26 16:05:17"}
{"level":"info","message":"Neo4j session closed after 1702ms","service":"mindrune-api","timestamp":"2025-03-26 16:05:17"}
{"level":"info","message":"Neo4j insertion completed in 1703ms","service":"mindrune-api","timestamp":"2025-03-26 16:05:17"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:05:17"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-26 16:05:17"}
{"level":"info","message":"Total request processing time: 1716ms","service":"mindrune-api","timestamp":"2025-03-26 16:05:17"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Data size: 4809 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Event count: 24","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Processing 24 events","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Player node updated in 90ms","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Processing batch of 9 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Processing 9 HIT_SPLAT events: 6 incoming, 3 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"error","message":"Error in Neo4j operations after 92ms: event.details.source.replace is not a function","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Neo4j session closed after 92ms","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"error","message":"Error processing create request after 94ms: event.details.source.replace is not a function","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"error","message":"500 - event.details.source.replace is not a function - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-26 16:06:15"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Data size: 862 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Player node updated in 98ms","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"error","message":"Error in Neo4j operations after 100ms: event.details.source.replace is not a function","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Neo4j session closed after 101ms","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"error","message":"Error processing create request after 103ms: event.details.source.replace is not a function","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"error","message":"500 - event.details.source.replace is not a function - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-26 16:07:15"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Data size: 1062 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Event count: 5","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Processing 5 events","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Player node updated in 90ms","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 4 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"error","message":"Error in Neo4j operations after 91ms: event.details.source.replace is not a function","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Neo4j session closed after 91ms","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"error","message":"Error processing create request after 94ms: event.details.source.replace is not a function","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"error","message":"500 - event.details.source.replace is not a function - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-26 16:08:15"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Data size: 500 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Player node updated in 99ms","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Processing batch of 2 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Processing 2 HIT_SPLAT events: 2 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"error","message":"Error in Neo4j operations after 101ms: event.details.source.replace is not a function","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Neo4j session closed after 102ms","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"error","message":"Error processing create request after 105ms: event.details.source.replace is not a function","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"error","message":"500 - event.details.source.replace is not a function - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-26 16:09:15"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 16:12:29"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 16:12:29"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 16:13:15"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:13:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:13:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:13:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:13:15"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 16:13:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:13:15"}
{"level":"info","message":"Data size: 17387 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:13:15"}
{"level":"info","message":"Event count: 88","service":"mindrune-api","timestamp":"2025-03-26 16:13:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:13:15"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 16:13:15"}
{"level":"info","message":"Processing 88 events","service":"mindrune-api","timestamp":"2025-03-26 16:13:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:13:15"}
{"level":"info","message":"Player node updated in 360ms","service":"mindrune-api","timestamp":"2025-03-26 16:13:16"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 16:13:16"}
{"level":"info","message":"Processing batch of 7 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 16:13:16"}
{"level":"info","message":"Completed batch of 7 MENU_CLICK events in 489ms","service":"mindrune-api","timestamp":"2025-03-26 16:13:16"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 16:13:16"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 447ms","service":"mindrune-api","timestamp":"2025-03-26 16:13:16"}
{"level":"info","message":"Processing batch of 52 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 16:13:16"}
{"level":"info","message":"Completed batch of 52 XP_GAIN events in 98ms","service":"mindrune-api","timestamp":"2025-03-26 16:13:17"}
{"level":"info","message":"Processing batch of 26 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:13:17"}
{"level":"info","message":"Processing 26 HIT_SPLAT events: 12 incoming, 14 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:13:17"}
{"level":"info","message":"Completed batch of 26 HIT_SPLAT events in 291ms","service":"mindrune-api","timestamp":"2025-03-26 16:13:17"}
{"level":"info","message":"All events processed in 1329ms","service":"mindrune-api","timestamp":"2025-03-26 16:13:17"}
{"level":"info","message":"Total Neo4j operation time: 1692ms","service":"mindrune-api","timestamp":"2025-03-26 16:13:17"}
{"level":"info","message":"Neo4j session closed after 1693ms","service":"mindrune-api","timestamp":"2025-03-26 16:13:17"}
{"level":"info","message":"Neo4j insertion completed in 1694ms","service":"mindrune-api","timestamp":"2025-03-26 16:13:17"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:13:17"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-26 16:13:17"}
{"level":"info","message":"Total request processing time: 1713ms","service":"mindrune-api","timestamp":"2025-03-26 16:13:17"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:14:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:14:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:14:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:14:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:14:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:14:15"}
{"level":"info","message":"Data size: 2072 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:14:15"}
{"level":"info","message":"Event count: 10","service":"mindrune-api","timestamp":"2025-03-26 16:14:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:14:15"}
{"level":"info","message":"Processing 10 events","service":"mindrune-api","timestamp":"2025-03-26 16:14:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:14:15"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-26 16:14:15"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-26 16:14:15"}
{"level":"info","message":"Processing batch of 6 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:14:15"}
{"level":"info","message":"Processing 6 HIT_SPLAT events: 5 incoming, 1 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:14:15"}
{"level":"info","message":"Completed batch of 6 HIT_SPLAT events in 347ms","service":"mindrune-api","timestamp":"2025-03-26 16:14:16"}
{"level":"info","message":"Processing batch of 4 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 16:14:16"}
{"level":"info","message":"Completed batch of 4 XP_GAIN events in 164ms","service":"mindrune-api","timestamp":"2025-03-26 16:14:16"}
{"level":"info","message":"All events processed in 511ms","service":"mindrune-api","timestamp":"2025-03-26 16:14:16"}
{"level":"info","message":"Total Neo4j operation time: 613ms","service":"mindrune-api","timestamp":"2025-03-26 16:14:16"}
{"level":"info","message":"Neo4j session closed after 614ms","service":"mindrune-api","timestamp":"2025-03-26 16:14:16"}
{"level":"info","message":"Neo4j insertion completed in 615ms","service":"mindrune-api","timestamp":"2025-03-26 16:14:16"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:14:16"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 16:14:16"}
{"level":"info","message":"Total request processing time: 628ms","service":"mindrune-api","timestamp":"2025-03-26 16:14:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:15:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:15:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:15:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:15:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:15:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:15:15"}
{"level":"info","message":"Data size: 1089 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:15:15"}
{"level":"info","message":"Event count: 5","service":"mindrune-api","timestamp":"2025-03-26 16:15:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:15:15"}
{"level":"info","message":"Processing 5 events","service":"mindrune-api","timestamp":"2025-03-26 16:15:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:15:15"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-26 16:15:15"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 16:15:15"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 16:15:15"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 739ms","service":"mindrune-api","timestamp":"2025-03-26 16:15:16"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 16:15:16"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 377ms","service":"mindrune-api","timestamp":"2025-03-26 16:15:16"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:15:16"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:15:16"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 163ms","service":"mindrune-api","timestamp":"2025-03-26 16:15:17"}
{"level":"info","message":"All events processed in 1281ms","service":"mindrune-api","timestamp":"2025-03-26 16:15:17"}
{"level":"info","message":"Total Neo4j operation time: 1373ms","service":"mindrune-api","timestamp":"2025-03-26 16:15:17"}
{"level":"info","message":"Neo4j session closed after 1373ms","service":"mindrune-api","timestamp":"2025-03-26 16:15:17"}
{"level":"info","message":"Neo4j insertion completed in 1374ms","service":"mindrune-api","timestamp":"2025-03-26 16:15:17"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:15:17"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 16:15:17"}
{"level":"info","message":"Total request processing time: 1387ms","service":"mindrune-api","timestamp":"2025-03-26 16:15:17"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Data size: 697 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 161ms","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"All events processed in 162ms","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Total Neo4j operation time: 253ms","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Neo4j session closed after 253ms","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Neo4j insertion completed in 254ms","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Total request processing time: 266ms","service":"mindrune-api","timestamp":"2025-03-26 16:16:15"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Data size: 500 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Processing batch of 2 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Processing 2 HIT_SPLAT events: 2 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Completed batch of 2 HIT_SPLAT events in 162ms","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"All events processed in 163ms","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Total Neo4j operation time: 255ms","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Neo4j session closed after 255ms","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Neo4j insertion completed in 256ms","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Total request processing time: 270ms","service":"mindrune-api","timestamp":"2025-03-26 16:17:15"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 16:18:33"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 16:18:34"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 16:19:15"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:19:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:19:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:19:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:19:15"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 16:19:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:19:15"}
{"level":"info","message":"Data size: 14432 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:19:15"}
{"level":"info","message":"Event count: 73","service":"mindrune-api","timestamp":"2025-03-26 16:19:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:19:15"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 16:19:15"}
{"level":"info","message":"Processing 73 events","service":"mindrune-api","timestamp":"2025-03-26 16:19:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:19:15"}
{"level":"info","message":"Player node updated in 423ms","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 566ms","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"Processing batch of 44 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"Completed batch of 44 XP_GAIN events in 97ms","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"Processing batch of 25 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"Processing 25 HIT_SPLAT events: 12 incoming, 13 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"Completed batch of 25 HIT_SPLAT events in 189ms","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"All events processed in 855ms","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"Total Neo4j operation time: 1282ms","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"Neo4j session closed after 1282ms","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"Neo4j insertion completed in 1284ms","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"Total request processing time: 1299ms","service":"mindrune-api","timestamp":"2025-03-26 16:19:16"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Data size: 8771 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Event count: 44","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Processing 44 events","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Player node updated in 90ms","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Processing batch of 28 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Completed batch of 28 XP_GAIN events in 125ms","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Processing batch of 15 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Processing 15 HIT_SPLAT events: 7 incoming, 8 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:20:15"}
{"level":"info","message":"Completed batch of 15 HIT_SPLAT events in 327ms","service":"mindrune-api","timestamp":"2025-03-26 16:20:16"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 16:20:16"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 791ms","service":"mindrune-api","timestamp":"2025-03-26 16:20:16"}
{"level":"info","message":"All events processed in 1244ms","service":"mindrune-api","timestamp":"2025-03-26 16:20:16"}
{"level":"info","message":"Total Neo4j operation time: 1335ms","service":"mindrune-api","timestamp":"2025-03-26 16:20:16"}
{"level":"info","message":"Neo4j session closed after 1335ms","service":"mindrune-api","timestamp":"2025-03-26 16:20:16"}
{"level":"info","message":"Neo4j insertion completed in 1336ms","service":"mindrune-api","timestamp":"2025-03-26 16:20:16"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:20:16"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 16:20:17"}
{"level":"info","message":"Total request processing time: 1352ms","service":"mindrune-api","timestamp":"2025-03-26 16:20:17"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Data size: 697 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Player node updated in 103ms","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 204ms","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"All events processed in 205ms","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Total Neo4j operation time: 309ms","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Neo4j session closed after 309ms","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Neo4j insertion completed in 309ms","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Total request processing time: 322ms","service":"mindrune-api","timestamp":"2025-03-26 16:21:15"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Data size: 888 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Player node updated in 98ms","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 4 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 203ms","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"All events processed in 203ms","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Total Neo4j operation time: 303ms","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Neo4j session closed after 304ms","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Neo4j insertion completed in 304ms","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Total request processing time: 317ms","service":"mindrune-api","timestamp":"2025-03-26 16:22:15"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Data size: 694 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Player node updated in 99ms","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 203ms","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"All events processed in 203ms","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Total Neo4j operation time: 303ms","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Neo4j session closed after 303ms","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Neo4j insertion completed in 304ms","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Total request processing time: 318ms","service":"mindrune-api","timestamp":"2025-03-26 16:23:15"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Data size: 309 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Player node updated in 89ms","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Processing batch of 1 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Processing 1 HIT_SPLAT events: 1 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Completed batch of 1 HIT_SPLAT events in 234ms","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"All events processed in 235ms","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Total Neo4j operation time: 325ms","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Neo4j session closed after 325ms","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Neo4j insertion completed in 326ms","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Total request processing time: 340ms","service":"mindrune-api","timestamp":"2025-03-26 16:24:15"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:27:02"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:27:02"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:27:02"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:27:02"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:27:02"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:27:02"}
{"level":"info","message":"Data size: 6587 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:27:02"}
{"level":"info","message":"Event count: 35","service":"mindrune-api","timestamp":"2025-03-26 16:27:02"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:27:02"}
{"level":"info","message":"Processing 35 events","service":"mindrune-api","timestamp":"2025-03-26 16:27:02"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:27:02"}
{"level":"info","message":"Player node updated in 135ms","service":"mindrune-api","timestamp":"2025-03-26 16:27:02"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 16:27:02"}
{"level":"info","message":"Processing batch of 24 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 16:27:02"}
{"level":"info","message":"Completed batch of 24 MENU_CLICK events in 358ms","service":"mindrune-api","timestamp":"2025-03-26 16:27:03"}
{"level":"info","message":"Processing batch of 6 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 16:27:03"}
{"level":"info","message":"Completed batch of 6 XP_GAIN events in 195ms","service":"mindrune-api","timestamp":"2025-03-26 16:27:03"}
{"level":"info","message":"Processing batch of 5 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 16:27:03"}
{"level":"info","message":"Completed batch of 5 INVENTORY_CHANGE events in 417ms","service":"mindrune-api","timestamp":"2025-03-26 16:27:03"}
{"level":"info","message":"All events processed in 971ms","service":"mindrune-api","timestamp":"2025-03-26 16:27:03"}
{"level":"info","message":"Total Neo4j operation time: 1106ms","service":"mindrune-api","timestamp":"2025-03-26 16:27:03"}
{"level":"info","message":"Neo4j session closed after 1106ms","service":"mindrune-api","timestamp":"2025-03-26 16:27:03"}
{"level":"info","message":"Neo4j insertion completed in 1108ms","service":"mindrune-api","timestamp":"2025-03-26 16:27:03"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:27:03"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 16:27:03"}
{"level":"info","message":"Total request processing time: 1119ms","service":"mindrune-api","timestamp":"2025-03-26 16:27:03"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:28:02"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:28:02"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:28:02"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:28:02"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 16:28:02"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:28:02"}
{"level":"info","message":"Data size: 14414 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:28:02"}
{"level":"info","message":"Event count: 74","service":"mindrune-api","timestamp":"2025-03-26 16:28:02"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:28:02"}
{"level":"info","message":"Processing 74 events","service":"mindrune-api","timestamp":"2025-03-26 16:28:02"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:28:02"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-26 16:28:02"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 16:28:02"}
{"level":"info","message":"Processing batch of 19 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 16:28:02"}
{"level":"info","message":"Completed batch of 19 MENU_CLICK events in 340ms","service":"mindrune-api","timestamp":"2025-03-26 16:28:03"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 16:28:03"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 362ms","service":"mindrune-api","timestamp":"2025-03-26 16:28:03"}
{"level":"info","message":"Processing batch of 36 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 16:28:03"}
{"level":"info","message":"Completed batch of 36 XP_GAIN events in 129ms","service":"mindrune-api","timestamp":"2025-03-26 16:28:03"}
{"level":"info","message":"Processing batch of 16 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:28:03"}
{"level":"info","message":"Processing 16 HIT_SPLAT events: 7 incoming, 9 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:28:03"}
{"level":"info","message":"Completed batch of 16 HIT_SPLAT events in 234ms","service":"mindrune-api","timestamp":"2025-03-26 16:28:03"}
{"level":"info","message":"All events processed in 1067ms","service":"mindrune-api","timestamp":"2025-03-26 16:28:03"}
{"level":"info","message":"Total Neo4j operation time: 1160ms","service":"mindrune-api","timestamp":"2025-03-26 16:28:03"}
{"level":"info","message":"Neo4j session closed after 1160ms","service":"mindrune-api","timestamp":"2025-03-26 16:28:03"}
{"level":"info","message":"Neo4j insertion completed in 1160ms","service":"mindrune-api","timestamp":"2025-03-26 16:28:03"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:28:03"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-26 16:28:03"}
{"level":"info","message":"Total request processing time: 1176ms","service":"mindrune-api","timestamp":"2025-03-26 16:28:03"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Data size: 11631 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Event count: 58","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Processing 58 events","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Player node updated in 90ms","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Processing batch of 21 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Processing 21 HIT_SPLAT events: 11 incoming, 10 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Completed batch of 21 HIT_SPLAT events in 228ms","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Processing batch of 36 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 16:29:02"}
{"level":"info","message":"Completed batch of 36 XP_GAIN events in 96ms","service":"mindrune-api","timestamp":"2025-03-26 16:29:03"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 16:29:03"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 477ms","service":"mindrune-api","timestamp":"2025-03-26 16:29:03"}
{"level":"info","message":"All events processed in 804ms","service":"mindrune-api","timestamp":"2025-03-26 16:29:03"}
{"level":"info","message":"Total Neo4j operation time: 894ms","service":"mindrune-api","timestamp":"2025-03-26 16:29:03"}
{"level":"info","message":"Neo4j session closed after 894ms","service":"mindrune-api","timestamp":"2025-03-26 16:29:03"}
{"level":"info","message":"Neo4j insertion completed in 895ms","service":"mindrune-api","timestamp":"2025-03-26 16:29:03"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:29:03"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 16:29:03"}
{"level":"info","message":"Total request processing time: 909ms","service":"mindrune-api","timestamp":"2025-03-26 16:29:03"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Data size: 724 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Player node updated in 105ms","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 217ms","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"All events processed in 218ms","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Total Neo4j operation time: 323ms","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Neo4j session closed after 323ms","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Neo4j insertion completed in 324ms","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Total request processing time: 337ms","service":"mindrune-api","timestamp":"2025-03-26 16:30:02"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Data size: 928 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 4 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 167ms","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"All events processed in 168ms","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Total Neo4j operation time: 260ms","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Neo4j session closed after 260ms","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Neo4j insertion completed in 260ms","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"SQL insertion completed in 8ms","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Total request processing time: 272ms","service":"mindrune-api","timestamp":"2025-03-26 16:31:02"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Data size: 727 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Player node updated in 90ms","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 223ms","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"All events processed in 223ms","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Total Neo4j operation time: 314ms","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Neo4j session closed after 315ms","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Neo4j insertion completed in 315ms","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Total request processing time: 328ms","service":"mindrune-api","timestamp":"2025-03-26 16:32:02"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 16:40:28"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 16:40:28"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Data size: 6378 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Event count: 31","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Processing 31 events","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Player node updated in 352ms","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 16:40:52"}
{"level":"info","message":"Completed batch of 5 MENU_CLICK events in 492ms","service":"mindrune-api","timestamp":"2025-03-26 16:40:53"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 16:40:53"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 121ms","service":"mindrune-api","timestamp":"2025-03-26 16:40:53"}
{"level":"info","message":"Processing batch of 9 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:40:53"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":30,\"type\":43,\"typeString\":\"MAX_DAMAGE\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"MAX_DAMAGE\"}","service":"mindrune-api","timestamp":"2025-03-26 16:40:53"}
{"level":"info","message":"Processing 9 HIT_SPLAT events: 5 incoming, 4 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:40:53"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"2a88d27c-df64-492e-872b-6a36e15904e5_8\",\"timestamp\":\"2025-03-26T20:40:06.395786500Z\",\"damage\":1,\"type\":16,\"typeString\":\"DAMAGE\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1493,\"locationY\":9709,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 16:40:53"}
{"level":"info","message":"Completed batch of 9 HIT_SPLAT events in 352ms","service":"mindrune-api","timestamp":"2025-03-26 16:40:53"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 16:40:53"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 338ms","service":"mindrune-api","timestamp":"2025-03-26 16:40:54"}
{"level":"info","message":"All events processed in 1305ms","service":"mindrune-api","timestamp":"2025-03-26 16:40:54"}
{"level":"info","message":"Total Neo4j operation time: 1661ms","service":"mindrune-api","timestamp":"2025-03-26 16:40:54"}
{"level":"info","message":"Neo4j session closed after 1661ms","service":"mindrune-api","timestamp":"2025-03-26 16:40:54"}
{"level":"info","message":"Neo4j insertion completed in 1662ms","service":"mindrune-api","timestamp":"2025-03-26 16:40:54"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:40:54"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 16:40:54"}
{"level":"info","message":"Total request processing time: 1675ms","service":"mindrune-api","timestamp":"2025-03-26 16:40:54"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Data size: 808 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Player node updated in 98ms","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":2,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"POISON\",\"typeString\":\"POISON\"}","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"d014235c-5c8a-4231-9a6c-1c2b78930fb2_0\",\"timestamp\":\"2025-03-26T20:41:00.993761Z\",\"damage\":2,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"isCharacter\":false,\"hasLocation\":true,\"locationX\":1491,\"locationY\":9708,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 206ms","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"All events processed in 207ms","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Total Neo4j operation time: 307ms","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Neo4j session closed after 307ms","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Neo4j insertion completed in 307ms","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Total request processing time: 318ms","service":"mindrune-api","timestamp":"2025-03-26 16:41:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Data size: 1043 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Player node updated in 108ms","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":2,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"POISON\",\"typeString\":\"POISON\"}","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 4 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"894f0f78-5cb3-4464-b033-da1163b59cd6_0\",\"timestamp\":\"2025-03-26T20:41:55.034476100Z\",\"damage\":2,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"isCharacter\":false,\"hasLocation\":true,\"locationX\":1491,\"locationY\":9708,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 163ms","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"All events processed in 163ms","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Total Neo4j operation time: 273ms","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Neo4j session closed after 273ms","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Neo4j insertion completed in 273ms","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Total request processing time: 284ms","service":"mindrune-api","timestamp":"2025-03-26 16:42:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Data size: 811 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":1,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"POISON\",\"typeString\":\"POISON\"}","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"abeb0759-5130-4ec2-aa5d-683ecb8719db_0\",\"timestamp\":\"2025-03-26T20:43:07.036786700Z\",\"damage\":1,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"isCharacter\":false,\"hasLocation\":true,\"locationX\":1491,\"locationY\":9708,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 161ms","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"All events processed in 162ms","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Total Neo4j operation time: 253ms","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Neo4j session closed after 253ms","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Neo4j insertion completed in 253ms","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Total request processing time: 264ms","service":"mindrune-api","timestamp":"2025-03-26 16:43:52"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 16:43:57"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 16:43:58"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Data size: 10583 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Event count: 51","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Processing 51 events","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Player node updated in 376ms","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 16:44:52"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 877ms","service":"mindrune-api","timestamp":"2025-03-26 16:44:53"}
{"level":"info","message":"Processing batch of 17 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:44:53"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":0,\"type\":12,\"typeString\":\"BLOCK\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"BLOCK\"}","service":"mindrune-api","timestamp":"2025-03-26 16:44:53"}
{"level":"info","message":"Processing 17 HIT_SPLAT events: 8 incoming, 9 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:44:53"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"b85384a7-dedd-460c-afc2-e6d2f26486bb_2\",\"timestamp\":\"2025-03-26T20:44:10.027022Z\",\"damage\":0,\"type\":12,\"typeString\":\"BLOCK\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1491,\"locationY\":9708,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 16:44:53"}
{"level":"info","message":"Completed batch of 17 HIT_SPLAT events in 434ms","service":"mindrune-api","timestamp":"2025-03-26 16:44:54"}
{"level":"info","message":"Processing batch of 32 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 16:44:54"}
{"level":"info","message":"Completed batch of 32 XP_GAIN events in 138ms","service":"mindrune-api","timestamp":"2025-03-26 16:44:54"}
{"level":"info","message":"All events processed in 1450ms","service":"mindrune-api","timestamp":"2025-03-26 16:44:54"}
{"level":"info","message":"Total Neo4j operation time: 1832ms","service":"mindrune-api","timestamp":"2025-03-26 16:44:54"}
{"level":"info","message":"Neo4j session closed after 1832ms","service":"mindrune-api","timestamp":"2025-03-26 16:44:54"}
{"level":"info","message":"Neo4j insertion completed in 1833ms","service":"mindrune-api","timestamp":"2025-03-26 16:44:54"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:44:54"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 16:44:54"}
{"level":"info","message":"Total request processing time: 1849ms","service":"mindrune-api","timestamp":"2025-03-26 16:44:54"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Data size: 805 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":3,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"POISON\",\"typeString\":\"POISON\"}","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"7d091084-2734-427d-be4f-c21a294fb3fd_0\",\"timestamp\":\"2025-03-26T20:45:01.026775Z\",\"damage\":3,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"isCharacter\":false,\"hasLocation\":true,\"locationX\":1491,\"locationY\":9708,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 205ms","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"All events processed in 206ms","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Total Neo4j operation time: 307ms","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Neo4j session closed after 307ms","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Neo4j insertion completed in 309ms","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Total request processing time: 320ms","service":"mindrune-api","timestamp":"2025-03-26 16:45:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Data size: 1043 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":2,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"POISON\",\"typeString\":\"POISON\"}","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 4 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"8e536730-bf85-4c5d-a065-b23b38668093_0\",\"timestamp\":\"2025-03-26T20:45:55.026737100Z\",\"damage\":2,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"isCharacter\":false,\"hasLocation\":true,\"locationX\":1491,\"locationY\":9708,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 166ms","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"All events processed in 167ms","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Total Neo4j operation time: 260ms","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Neo4j session closed after 260ms","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Neo4j insertion completed in 261ms","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"SQL insertion completed in 8ms","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Total request processing time: 272ms","service":"mindrune-api","timestamp":"2025-03-26 16:46:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Data size: 808 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":1,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"POISON\",\"typeString\":\"POISON\"}","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"bdfaa34c-f444-4379-b232-caa2f0470862_0\",\"timestamp\":\"2025-03-26T20:47:07.025836500Z\",\"damage\":1,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"isCharacter\":false,\"hasLocation\":true,\"locationX\":1491,\"locationY\":9708,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 162ms","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"All events processed in 163ms","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Total Neo4j operation time: 257ms","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Neo4j session closed after 257ms","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Neo4j insertion completed in 257ms","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Total request processing time: 269ms","service":"mindrune-api","timestamp":"2025-03-26 16:47:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Data size: 1194 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Event count: 5","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Processing 5 events","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Player node updated in 90ms","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Processing batch of 1 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":1,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"POISON\",\"typeString\":\"POISON\"}","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Processing 1 HIT_SPLAT events: 1 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"9d7790b8-8804-4315-8089-1d329121af48_0\",\"timestamp\":\"2025-03-26T20:48:01.042427300Z\",\"damage\":1,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"isCharacter\":false,\"hasLocation\":true,\"locationX\":1491,\"locationY\":9708,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Completed batch of 1 HIT_SPLAT events in 224ms","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 16:48:52"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 798ms","service":"mindrune-api","timestamp":"2025-03-26 16:48:53"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 16:48:53"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 381ms","service":"mindrune-api","timestamp":"2025-03-26 16:48:53"}
{"level":"info","message":"All events processed in 1403ms","service":"mindrune-api","timestamp":"2025-03-26 16:48:53"}
{"level":"info","message":"Total Neo4j operation time: 1493ms","service":"mindrune-api","timestamp":"2025-03-26 16:48:53"}
{"level":"info","message":"Neo4j session closed after 1493ms","service":"mindrune-api","timestamp":"2025-03-26 16:48:53"}
{"level":"info","message":"Neo4j insertion completed in 1494ms","service":"mindrune-api","timestamp":"2025-03-26 16:48:53"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:48:53"}
{"level":"info","message":"SQL insertion completed in 8ms","service":"mindrune-api","timestamp":"2025-03-26 16:48:53"}
{"level":"info","message":"Total request processing time: 1505ms","service":"mindrune-api","timestamp":"2025-03-26 16:48:53"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:51:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:51:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:51:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:51:52"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 16:51:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:51:52"}
{"level":"info","message":"Data size: 286 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:51:52"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-26 16:51:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:51:52"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-26 16:51:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:51:52"}
{"level":"info","message":"Player node updated in 149ms","service":"mindrune-api","timestamp":"2025-03-26 16:51:52"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 16:51:52"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 16:51:52"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 749ms","service":"mindrune-api","timestamp":"2025-03-26 16:51:53"}
{"level":"info","message":"All events processed in 750ms","service":"mindrune-api","timestamp":"2025-03-26 16:51:53"}
{"level":"info","message":"Total Neo4j operation time: 901ms","service":"mindrune-api","timestamp":"2025-03-26 16:51:53"}
{"level":"info","message":"Neo4j session closed after 902ms","service":"mindrune-api","timestamp":"2025-03-26 16:51:53"}
{"level":"info","message":"Neo4j insertion completed in 902ms","service":"mindrune-api","timestamp":"2025-03-26 16:51:53"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:51:53"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-26 16:51:53"}
{"level":"info","message":"Total request processing time: 914ms","service":"mindrune-api","timestamp":"2025-03-26 16:51:53"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 16:58:51"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 16:58:51"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Data size: 18773 bytes","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Event count: 92","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Processing 92 events","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Player node updated in 348ms","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Processing batch of 9 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 16:59:52"}
{"level":"info","message":"Completed batch of 9 MENU_CLICK events in 808ms","service":"mindrune-api","timestamp":"2025-03-26 16:59:53"}
{"level":"info","message":"Processing batch of 56 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 16:59:53"}
{"level":"info","message":"Completed batch of 56 XP_GAIN events in 126ms","service":"mindrune-api","timestamp":"2025-03-26 16:59:53"}
{"level":"info","message":"Processing batch of 27 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 16:59:53"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":26,\"type\":16,\"typeString\":\"DAMAGE\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"DAMAGE\"}","service":"mindrune-api","timestamp":"2025-03-26 16:59:53"}
{"level":"info","message":"Processing 27 HIT_SPLAT events: 12 incoming, 15 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 16:59:53"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"cca7f1e2-dce4-4a42-93e3-3ea18944e90f_11\",\"timestamp\":\"2025-03-26T20:59:08.939667800Z\",\"damage\":0,\"type\":12,\"typeString\":\"BLOCK\",\"source\":\"Grimy Lizard\",\"standardizedSource\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1491,\"locationY\":9711,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 16:59:53"}
{"level":"info","message":"Completed batch of 27 HIT_SPLAT events in 315ms","service":"mindrune-api","timestamp":"2025-03-26 16:59:54"}
{"level":"info","message":"All events processed in 1250ms","service":"mindrune-api","timestamp":"2025-03-26 16:59:54"}
{"level":"info","message":"Total Neo4j operation time: 1602ms","service":"mindrune-api","timestamp":"2025-03-26 16:59:54"}
{"level":"info","message":"Neo4j session closed after 1603ms","service":"mindrune-api","timestamp":"2025-03-26 16:59:54"}
{"level":"info","message":"Neo4j insertion completed in 1604ms","service":"mindrune-api","timestamp":"2025-03-26 16:59:54"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 16:59:54"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-26 16:59:54"}
{"level":"info","message":"Total request processing time: 1621ms","service":"mindrune-api","timestamp":"2025-03-26 16:59:54"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 17:01:00"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 17:01:01"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 17:10:03"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 17:10:03"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Data size: 6639 bytes","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Event count: 33","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Processing 33 events","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Player node updated in 364ms","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Processing batch of 7 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Processing 7 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"Current Character counts before processing:","service":"mindrune-api","timestamp":"2025-03-26 17:10:52"}
{"level":"info","message":"No duplicate character nodes found after processing MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 17:10:53"}
{"level":"info","message":"Completed batch of 7 MENU_CLICK events in 858ms","service":"mindrune-api","timestamp":"2025-03-26 17:10:53"}
{"level":"info","message":"Processing batch of 17 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 17:10:53"}
{"level":"info","message":"Completed batch of 17 XP_GAIN events in 122ms","service":"mindrune-api","timestamp":"2025-03-26 17:10:53"}
{"level":"info","message":"Processing batch of 7 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 17:10:53"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":28,\"type\":16,\"typeString\":\"DAMAGE\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"DAMAGE\"}","service":"mindrune-api","timestamp":"2025-03-26 17:10:53"}
{"level":"info","message":"Processing 7 HIT_SPLAT events: 3 incoming, 4 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 17:10:53"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"653d8a32-0923-4e7a-b2ec-10eca542eb7b_8\",\"timestamp\":\"2025-03-26T21:10:21.619469700Z\",\"damage\":0,\"type\":12,\"typeString\":\"BLOCK\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1491,\"locationY\":9709,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 17:10:53"}
{"level":"info","message":"Found 1 existing character names before processing incoming events","service":"mindrune-api","timestamp":"2025-03-26 17:10:53"}
{"level":"info","message":"Sample existing character names: [\"Grimy Lizard \"]","service":"mindrune-api","timestamp":"2025-03-26 17:10:53"}
{"level":"info","message":"Found 2 character names after processing incoming events","service":"mindrune-api","timestamp":"2025-03-26 17:10:54"}
{"level":"info","message":"No duplicate character nodes found after processing all HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 17:10:54"}
{"level":"info","message":"Completed batch of 7 HIT_SPLAT events in 727ms","service":"mindrune-api","timestamp":"2025-03-26 17:10:54"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 17:10:54"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 443ms","service":"mindrune-api","timestamp":"2025-03-26 17:10:55"}
{"level":"info","message":"All events processed in 2150ms","service":"mindrune-api","timestamp":"2025-03-26 17:10:55"}
{"level":"info","message":"Total Neo4j operation time: 2518ms","service":"mindrune-api","timestamp":"2025-03-26 17:10:55"}
{"level":"info","message":"Neo4j session closed after 2519ms","service":"mindrune-api","timestamp":"2025-03-26 17:10:55"}
{"level":"info","message":"Neo4j insertion completed in 2521ms","service":"mindrune-api","timestamp":"2025-03-26 17:10:55"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 17:10:55"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 17:10:55"}
{"level":"info","message":"Total request processing time: 2535ms","service":"mindrune-api","timestamp":"2025-03-26 17:10:55"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 18:02:50"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 18:02:50"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Data size: 7151 bytes","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Event count: 35","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Processing 35 events","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Player node updated in 350ms","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Processing 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"Current Character counts before processing:","service":"mindrune-api","timestamp":"2025-03-26 18:03:52"}
{"level":"info","message":"No duplicate character nodes found after processing MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"Completed batch of 5 MENU_CLICK events in 648ms","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"Processing batch of 20 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"Completed batch of 20 XP_GAIN events in 96ms","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"Processing batch of 10 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":19,\"type\":16,\"typeString\":\"DAMAGE\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"DAMAGE\"}","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"Processing 10 HIT_SPLAT events: 5 incoming, 5 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"d193c1de-afa5-4689-975e-648639fb5579_8\",\"timestamp\":\"2025-03-26T22:03:14.776275100Z\",\"damage\":0,\"type\":12,\"typeString\":\"BLOCK\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1493,\"locationY\":9709,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"Completed batch of 10 HIT_SPLAT events in 340ms","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"All events processed in 1085ms","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"Total Neo4j operation time: 1440ms","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"Neo4j session closed after 1440ms","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"Neo4j insertion completed in 1442ms","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"Total request processing time: 1460ms","service":"mindrune-api","timestamp":"2025-03-26 18:03:53"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Data size: 1040 bytes","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Player node updated in 115ms","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":3,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"POISON\",\"typeString\":\"POISON\"}","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 4 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"f0f61dab-8830-41a2-b074-2cc1d9a6660d_0\",\"timestamp\":\"2025-03-26T22:03:53.776105600Z\",\"damage\":3,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"isCharacter\":false,\"hasLocation\":true,\"locationX\":1493,\"locationY\":9709,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 221ms","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"All events processed in 222ms","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Total Neo4j operation time: 338ms","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Neo4j session closed after 338ms","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Neo4j insertion completed in 339ms","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Total request processing time: 355ms","service":"mindrune-api","timestamp":"2025-03-26 18:04:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Data size: 811 bytes","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":2,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"POISON\",\"typeString\":\"POISON\"}","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"e26fa902-e601-41da-9f00-8643eb9c826e_0\",\"timestamp\":\"2025-03-26T22:05:05.776888100Z\",\"damage\":2,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"isCharacter\":false,\"hasLocation\":true,\"locationX\":1493,\"locationY\":9709,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 164ms","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"All events processed in 164ms","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Total Neo4j operation time: 257ms","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Neo4j session closed after 257ms","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Neo4j insertion completed in 258ms","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Total request processing time: 272ms","service":"mindrune-api","timestamp":"2025-03-26 18:05:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Data size: 811 bytes","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Player node updated in 90ms","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":1,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"POISON\",\"typeString\":\"POISON\"}","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"f4093c41-182a-4b01-9e39-d8f1ace1e19d_0\",\"timestamp\":\"2025-03-26T22:05:59.793129500Z\",\"damage\":1,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"isCharacter\":false,\"hasLocation\":true,\"locationX\":1493,\"locationY\":9709,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 161ms","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"All events processed in 162ms","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Total Neo4j operation time: 253ms","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Neo4j session closed after 253ms","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Neo4j insertion completed in 254ms","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Total request processing time: 267ms","service":"mindrune-api","timestamp":"2025-03-26 18:06:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Data size: 347 bytes","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Processing batch of 1 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":1,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"POISON\",\"typeString\":\"POISON\"}","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Processing 1 HIT_SPLAT events: 1 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"2a66142d-e75a-4475-a321-8a571d7eb955_0\",\"timestamp\":\"2025-03-26T22:06:53.792228700Z\",\"damage\":1,\"type\":65,\"typeString\":\"POISON\",\"source\":\"POISON\",\"isCharacter\":false,\"hasLocation\":true,\"locationX\":1493,\"locationY\":9709,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Completed batch of 1 HIT_SPLAT events in 164ms","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"All events processed in 164ms","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Total Neo4j operation time: 257ms","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Neo4j session closed after 258ms","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Neo4j insertion completed in 258ms","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Total request processing time: 271ms","service":"mindrune-api","timestamp":"2025-03-26 18:07:52"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 18:56:32"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 18:56:32"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Data size: 5735 bytes","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Event count: 28","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Processing 28 events","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Player node updated in 360ms","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Processing 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"Current Character counts before processing:","service":"mindrune-api","timestamp":"2025-03-26 18:57:52"}
{"level":"info","message":"No duplicate character nodes found after processing MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 18:57:53"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 591ms","service":"mindrune-api","timestamp":"2025-03-26 18:57:53"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 18:57:53"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 93ms","service":"mindrune-api","timestamp":"2025-03-26 18:57:53"}
{"level":"info","message":"Processing batch of 7 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 18:57:53"}
{"level":"info","message":"[HitSplat] Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":15,\"type\":16,\"typeString\":\"DAMAGE\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"DAMAGE\"}","service":"mindrune-api","timestamp":"2025-03-26 18:57:53"}
{"level":"info","message":"[HitSplat] Processing 7 HIT_SPLAT events: 3 incoming, 4 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 18:57:53"}
{"level":"info","message":"[HitSplat] Found 1 existing character nodes before processing","service":"mindrune-api","timestamp":"2025-03-26 18:57:53"}
{"level":"info","message":"[HitSplat] Characters before processing: \"Grimy Lizard \"(47933)","service":"mindrune-api","timestamp":"2025-03-26 18:57:53"}
{"level":"info","message":"[HitSplat] Sample processed incoming event: {\"event_uuid\":\"c2c9c219-6eca-4142-ab46-d0fcd00869e7_8\",\"timestamp\":\"2025-03-26T22:57:20.562982300Z\",\"damage\":0,\"type\":12,\"typeString\":\"BLOCK\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1494,\"locationY\":9709,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 18:57:53"}
{"level":"info","message":"[HitSplat] Creating 3 character nodes from incoming events","service":"mindrune-api","timestamp":"2025-03-26 18:57:53"}
{"level":"info","message":"[HitSplat] Unique character names in incoming events: Grimy Lizard","service":"mindrune-api","timestamp":"2025-03-26 18:57:53"}
{"level":"info","message":"[HitSplat] Created new character \"Grimy Lizard\" with ID 47956","service":"mindrune-api","timestamp":"2025-03-26 18:57:53"}
{"level":"info","message":"[HitSplat] Processed 3 incoming HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 18:57:54"}
{"level":"info","message":"[HitSplat] Unique character targets in outgoing events: Grimy Lizard","service":"mindrune-api","timestamp":"2025-03-26 18:57:54"}
{"level":"info","message":"[HitSplat] Character target \"Grimy Lizard\" already exists with ID 47956","service":"mindrune-api","timestamp":"2025-03-26 18:57:54"}
{"level":"error","message":"Error in Neo4j operations after 1844ms: WITH is required between CREATE and MATCH (line 28, column 7 (offset: 837))\n\"      MATCH (character:Character {name: event.target})\"\n       ^","service":"mindrune-api","timestamp":"2025-03-26 18:57:54"}
{"level":"info","message":"Neo4j session closed after 1845ms","service":"mindrune-api","timestamp":"2025-03-26 18:57:54"}
{"level":"error","message":"Error processing create request after 1851ms: WITH is required between CREATE and MATCH (line 28, column 7 (offset: 837))\n\"      MATCH (character:Character {name: event.target})\"\n       ^","service":"mindrune-api","timestamp":"2025-03-26 18:57:54"}
{"level":"error","message":"500 - WITH is required between CREATE and MATCH (line 28, column 7 (offset: 837))\n\"      MATCH (character:Character {name: event.target})\"\n       ^ - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-26 18:57:54"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 19:00:01"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 19:00:02"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Data size: 6211 bytes","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Event count: 30","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Processing 30 events","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Player node updated in 349ms","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Processing 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"Current Character counts before processing:","service":"mindrune-api","timestamp":"2025-03-26 19:00:52"}
{"level":"info","message":"No duplicate character nodes found after processing MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:00:53"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 600ms","service":"mindrune-api","timestamp":"2025-03-26 19:00:53"}
{"level":"info","message":"Processing batch of 20 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 19:00:53"}
{"level":"info","message":"Completed batch of 20 XP_GAIN events in 94ms","service":"mindrune-api","timestamp":"2025-03-26 19:00:53"}
{"level":"info","message":"Processing batch of 9 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 19:00:53"}
{"level":"info","message":"[HitSplat] Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":19,\"type\":16,\"typeString\":\"DAMAGE\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"DAMAGE\"}","service":"mindrune-api","timestamp":"2025-03-26 19:00:53"}
{"level":"info","message":"[HitSplat] Processing 9 HIT_SPLAT events: 4 incoming, 5 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 19:00:53"}
{"level":"info","message":"[HitSplat] Found 1 existing character nodes before processing","service":"mindrune-api","timestamp":"2025-03-26 19:00:53"}
{"level":"info","message":"[HitSplat] Characters before processing: \"Grimy Lizard \"(47962)","service":"mindrune-api","timestamp":"2025-03-26 19:00:53"}
{"level":"info","message":"[HitSplat] Sample processed incoming event: {\"event_uuid\":\"fea19b2a-47b0-4b24-b9ca-d512becafcbc_6\",\"timestamp\":\"2025-03-26T23:00:20.596441300Z\",\"damage\":0,\"type\":12,\"typeString\":\"BLOCK\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1495,\"locationY\":9708,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 19:00:53"}
{"level":"info","message":"[HitSplat] Creating 4 character nodes from incoming events","service":"mindrune-api","timestamp":"2025-03-26 19:00:53"}
{"level":"info","message":"[HitSplat] Unique character names in incoming events: Grimy Lizard","service":"mindrune-api","timestamp":"2025-03-26 19:00:53"}
{"level":"info","message":"[HitSplat] Created new character \"Grimy Lizard\" with ID 47988","service":"mindrune-api","timestamp":"2025-03-26 19:00:53"}
{"level":"info","message":"[HitSplat] Processed 4 incoming HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 19:00:54"}
{"level":"info","message":"[HitSplat] Unique character targets in outgoing events: Grimy Lizard","service":"mindrune-api","timestamp":"2025-03-26 19:00:54"}
{"level":"info","message":"[HitSplat] Character target \"Grimy Lizard\" already exists with ID 47988","service":"mindrune-api","timestamp":"2025-03-26 19:00:54"}
{"level":"info","message":"[HitSplat] Processed 5 outgoing HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 19:00:54"}
{"level":"info","message":"[HitSplat] Found 2 character nodes after processing all events","service":"mindrune-api","timestamp":"2025-03-26 19:00:54"}
{"level":"info","message":"[HitSplat] Characters after processing: \"Grimy Lizard\"(47988), \"Grimy Lizard \"(47962)","service":"mindrune-api","timestamp":"2025-03-26 19:00:54"}
{"level":"info","message":"Completed batch of 9 HIT_SPLAT events in 816ms","service":"mindrune-api","timestamp":"2025-03-26 19:00:54"}
{"level":"info","message":"All events processed in 1511ms","service":"mindrune-api","timestamp":"2025-03-26 19:00:54"}
{"level":"info","message":"Total Neo4j operation time: 1863ms","service":"mindrune-api","timestamp":"2025-03-26 19:00:54"}
{"level":"info","message":"Neo4j session closed after 1863ms","service":"mindrune-api","timestamp":"2025-03-26 19:00:54"}
{"level":"info","message":"Neo4j insertion completed in 1865ms","service":"mindrune-api","timestamp":"2025-03-26 19:00:54"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 19:00:54"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 19:00:54"}
{"level":"info","message":"Total request processing time: 1882ms","service":"mindrune-api","timestamp":"2025-03-26 19:00:54"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 19:14:04"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 19:14:04"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Data size: 6741 bytes","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Event count: 33","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Processing 33 events","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Player node updated in 349ms","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Processing 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"[MenuClick] Creating or finding 1 character targets","service":"mindrune-api","timestamp":"2025-03-26 19:14:52"}
{"level":"info","message":"Current Character counts before processing:","service":"mindrune-api","timestamp":"2025-03-26 19:14:53"}
{"level":"info","message":"Grimy Lizard : 1","service":"mindrune-api","timestamp":"2025-03-26 19:14:53"}
{"level":"info","message":"No duplicate character nodes found after processing MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:14:53"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 762ms","service":"mindrune-api","timestamp":"2025-03-26 19:14:53"}
{"level":"info","message":"Processing batch of 20 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 19:14:53"}
{"level":"info","message":"Completed batch of 20 XP_GAIN events in 95ms","service":"mindrune-api","timestamp":"2025-03-26 19:14:53"}
{"level":"info","message":"Processing batch of 9 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 19:14:53"}
{"level":"info","message":"[HitSplat] Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":4,\"type\":16,\"typeString\":\"DAMAGE\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"DAMAGE\"}","service":"mindrune-api","timestamp":"2025-03-26 19:14:53"}
{"level":"info","message":"[HitSplat] Processing 9 HIT_SPLAT events: 4 incoming, 5 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 19:14:53"}
{"level":"info","message":"[HitSplat] Creating or finding 1 unique characters","service":"mindrune-api","timestamp":"2025-03-26 19:14:53"}
{"level":"info","message":"[HitSplat] Sample processed incoming event: {\"event_uuid\":\"723f45e1-ef30-46c1-809a-2f399521da50_9\",\"timestamp\":\"2025-03-26T23:14:29.691092100Z\",\"damage\":0,\"type\":12,\"typeString\":\"BLOCK\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1495,\"locationY\":9708,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 19:14:53"}
{"level":"info","message":"[HitSplat] Processed 4 incoming HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 19:14:54"}
{"level":"info","message":"[HitSplat] Processed 5 outgoing HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 19:14:54"}
{"level":"info","message":"Completed batch of 9 HIT_SPLAT events in 496ms","service":"mindrune-api","timestamp":"2025-03-26 19:14:54"}
{"level":"info","message":"All events processed in 1354ms","service":"mindrune-api","timestamp":"2025-03-26 19:14:54"}
{"level":"info","message":"Total Neo4j operation time: 1706ms","service":"mindrune-api","timestamp":"2025-03-26 19:14:54"}
{"level":"info","message":"Neo4j session closed after 1706ms","service":"mindrune-api","timestamp":"2025-03-26 19:14:54"}
{"level":"info","message":"Neo4j insertion completed in 1708ms","service":"mindrune-api","timestamp":"2025-03-26 19:14:54"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 19:14:54"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-26 19:14:54"}
{"level":"info","message":"Total request processing time: 1726ms","service":"mindrune-api","timestamp":"2025-03-26 19:14:54"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Data size: 2770 bytes","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Event count: 14","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Processing 14 events","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Player node updated in 103ms","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Processing batch of 8 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Processing 8 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Current Character counts before processing:","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Grimy Lizard : 1","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"Grimy Lizard: 1","service":"mindrune-api","timestamp":"2025-03-26 19:15:52"}
{"level":"info","message":"No duplicate character nodes found after processing MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:15:53"}
{"level":"info","message":"Completed batch of 8 MENU_CLICK events in 864ms","service":"mindrune-api","timestamp":"2025-03-26 19:15:53"}
{"level":"info","message":"Processing batch of 5 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 19:15:53"}
{"level":"info","message":"Completed batch of 5 INVENTORY_CHANGE events in 343ms","service":"mindrune-api","timestamp":"2025-03-26 19:15:53"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 19:15:53"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 140ms","service":"mindrune-api","timestamp":"2025-03-26 19:15:53"}
{"level":"info","message":"All events processed in 1348ms","service":"mindrune-api","timestamp":"2025-03-26 19:15:53"}
{"level":"info","message":"Total Neo4j operation time: 1452ms","service":"mindrune-api","timestamp":"2025-03-26 19:15:53"}
{"level":"info","message":"Neo4j session closed after 1452ms","service":"mindrune-api","timestamp":"2025-03-26 19:15:53"}
{"level":"info","message":"Neo4j insertion completed in 1453ms","service":"mindrune-api","timestamp":"2025-03-26 19:15:53"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 19:15:53"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-26 19:15:53"}
{"level":"info","message":"Total request processing time: 1470ms","service":"mindrune-api","timestamp":"2025-03-26 19:15:53"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 19:19:49"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 19:19:50"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Data size: 286 bytes","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Player node updated in 350ms","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Processing 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Current Character counts before processing:","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Grimy Lizard : 1","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"Grimy Lizard: 1","service":"mindrune-api","timestamp":"2025-03-26 19:19:52"}
{"level":"info","message":"No duplicate character nodes found after processing MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:19:53"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 895ms","service":"mindrune-api","timestamp":"2025-03-26 19:19:53"}
{"level":"info","message":"All events processed in 896ms","service":"mindrune-api","timestamp":"2025-03-26 19:19:53"}
{"level":"info","message":"Total Neo4j operation time: 1250ms","service":"mindrune-api","timestamp":"2025-03-26 19:19:53"}
{"level":"info","message":"Neo4j session closed after 1250ms","service":"mindrune-api","timestamp":"2025-03-26 19:19:53"}
{"level":"info","message":"Neo4j insertion completed in 1251ms","service":"mindrune-api","timestamp":"2025-03-26 19:19:53"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 19:19:53"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 19:19:53"}
{"level":"info","message":"Total request processing time: 1269ms","service":"mindrune-api","timestamp":"2025-03-26 19:19:53"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Data size: 10394 bytes","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Event count: 50","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Processing 50 events","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Processing 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"[MenuClick] Creating or finding 1 character targets","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Current Character counts before processing:","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"Grimy Lizard : 1","service":"mindrune-api","timestamp":"2025-03-26 19:20:52"}
{"level":"info","message":"No duplicate character nodes found after processing MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:20:53"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 984ms","service":"mindrune-api","timestamp":"2025-03-26 19:20:53"}
{"level":"info","message":"Processing batch of 32 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 19:20:53"}
{"level":"info","message":"Completed batch of 32 XP_GAIN events in 97ms","service":"mindrune-api","timestamp":"2025-03-26 19:20:53"}
{"level":"info","message":"Processing batch of 17 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 19:20:53"}
{"level":"info","message":"[HitSplat] Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":20,\"type\":16,\"typeString\":\"DAMAGE\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"DAMAGE\"}","service":"mindrune-api","timestamp":"2025-03-26 19:20:53"}
{"level":"info","message":"[HitSplat] Processing 17 HIT_SPLAT events: 8 incoming, 9 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 19:20:53"}
{"level":"info","message":"[HitSplat] Found 1 existing character nodes before processing","service":"mindrune-api","timestamp":"2025-03-26 19:20:53"}
{"level":"info","message":"[HitSplat] Characters before processing: \"Grimy Lizard \"(48060)","service":"mindrune-api","timestamp":"2025-03-26 19:20:53"}
{"level":"info","message":"[HitSplat] Sample processed incoming event: {\"event_uuid\":\"648e55e2-7416-4427-a6fe-7dd2eaac05a3_6\",\"timestamp\":\"2025-03-26T23:20:03.923270Z\",\"damage\":0,\"type\":12,\"typeString\":\"BLOCK\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1493,\"locationY\":9711,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 19:20:53"}
{"level":"info","message":"[HitSplat] Processed 8 incoming HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 19:20:53"}
{"level":"info","message":"[HitSplat] Processed 9 outgoing HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 19:20:54"}
{"level":"info","message":"[HitSplat] Found 2 character nodes after processing all events","service":"mindrune-api","timestamp":"2025-03-26 19:20:54"}
{"level":"info","message":"[HitSplat] Characters after processing: \"Grimy Lizard\"(48101), \"Grimy Lizard \"(48060)","service":"mindrune-api","timestamp":"2025-03-26 19:20:54"}
{"level":"info","message":"Completed batch of 17 HIT_SPLAT events in 461ms","service":"mindrune-api","timestamp":"2025-03-26 19:20:54"}
{"level":"info","message":"All events processed in 1543ms","service":"mindrune-api","timestamp":"2025-03-26 19:20:54"}
{"level":"info","message":"Total Neo4j operation time: 1644ms","service":"mindrune-api","timestamp":"2025-03-26 19:20:54"}
{"level":"info","message":"Neo4j session closed after 1644ms","service":"mindrune-api","timestamp":"2025-03-26 19:20:54"}
{"level":"info","message":"Neo4j insertion completed in 1645ms","service":"mindrune-api","timestamp":"2025-03-26 19:20:54"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 19:20:54"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-26 19:20:54"}
{"level":"info","message":"Total request processing time: 1659ms","service":"mindrune-api","timestamp":"2025-03-26 19:20:54"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 19:25:59"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 19:25:59"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Data size: 7790 bytes","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Event count: 38","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Processing 38 events","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Player node updated in 357ms","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Processing 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"[MenuClick] Creating or finding 1 character targets","service":"mindrune-api","timestamp":"2025-03-26 19:26:52"}
{"level":"info","message":"Current Character counts before processing:","service":"mindrune-api","timestamp":"2025-03-26 19:26:53"}
{"level":"info","message":"Grimy Lizard : 1","service":"mindrune-api","timestamp":"2025-03-26 19:26:53"}
{"level":"info","message":"No duplicate character nodes found after processing MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:26:53"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 753ms","service":"mindrune-api","timestamp":"2025-03-26 19:26:53"}
{"level":"info","message":"Processing batch of 24 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 19:26:53"}
{"level":"info","message":"Completed batch of 24 XP_GAIN events in 97ms","service":"mindrune-api","timestamp":"2025-03-26 19:26:53"}
{"level":"info","message":"Processing batch of 11 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 19:26:53"}
{"level":"info","message":"[HitSplat] Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":4,\"type\":16,\"typeString\":\"DAMAGE\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"DAMAGE\"}","service":"mindrune-api","timestamp":"2025-03-26 19:26:53"}
{"level":"info","message":"[HitSplat] Processing 11 HIT_SPLAT events: 5 incoming, 6 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 19:26:53"}
{"level":"info","message":"[HitSplat] Found 1 existing character nodes before processing","service":"mindrune-api","timestamp":"2025-03-26 19:26:53"}
{"level":"info","message":"[HitSplat] Characters before processing: \"Grimy Lizard \"(48119)","service":"mindrune-api","timestamp":"2025-03-26 19:26:53"}
{"level":"info","message":"[HitSplat] Sample processed incoming event: {\"event_uuid\":\"26d45365-fe19-41e8-94ed-7bc81eb2de54_7\",\"timestamp\":\"2025-03-26T23:26:16.554355200Z\",\"damage\":0,\"type\":12,\"typeString\":\"BLOCK\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1493,\"locationY\":9711,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 19:26:53"}
{"level":"info","message":"[HitSplat] Processed 5 incoming HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 19:26:53"}
{"level":"info","message":"[HitSplat] Processed 6 outgoing HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 19:26:54"}
{"level":"info","message":"[HitSplat] Found 2 character nodes after processing all events","service":"mindrune-api","timestamp":"2025-03-26 19:26:54"}
{"level":"info","message":"[HitSplat] Characters after processing: \"Grimy Lizard\"(48153), \"Grimy Lizard \"(48119)","service":"mindrune-api","timestamp":"2025-03-26 19:26:54"}
{"level":"info","message":"Completed batch of 11 HIT_SPLAT events in 470ms","service":"mindrune-api","timestamp":"2025-03-26 19:26:54"}
{"level":"info","message":"All events processed in 1321ms","service":"mindrune-api","timestamp":"2025-03-26 19:26:54"}
{"level":"info","message":"Total Neo4j operation time: 1682ms","service":"mindrune-api","timestamp":"2025-03-26 19:26:54"}
{"level":"info","message":"Neo4j session closed after 1682ms","service":"mindrune-api","timestamp":"2025-03-26 19:26:54"}
{"level":"info","message":"Neo4j insertion completed in 1684ms","service":"mindrune-api","timestamp":"2025-03-26 19:26:54"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 19:26:54"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-26 19:26:54"}
{"level":"info","message":"Total request processing time: 1702ms","service":"mindrune-api","timestamp":"2025-03-26 19:26:54"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-26 19:39:27"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-26 19:39:27"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Data size: 3110 bytes","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Event count: 15","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Processing 15 events","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Player node updated in 353ms","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:39:52"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 644ms","service":"mindrune-api","timestamp":"2025-03-26 19:39:53"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 19:39:53"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":0,\"type\":12,\"typeString\":\"BLOCK\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"BLOCK\"}","service":"mindrune-api","timestamp":"2025-03-26 19:39:53"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 2 incoming, 2 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 19:39:53"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"e13fbee5-4d4a-44de-acfb-88a4b9ae285c_4\",\"timestamp\":\"2025-03-26T23:39:49.049806800Z\",\"damage\":0,\"type\":12,\"typeString\":\"BLOCK\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1493,\"locationY\":9711,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 19:39:53"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 412ms","service":"mindrune-api","timestamp":"2025-03-26 19:39:53"}
{"level":"info","message":"Processing batch of 8 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 19:39:53"}
{"level":"info","message":"Completed batch of 8 XP_GAIN events in 134ms","service":"mindrune-api","timestamp":"2025-03-26 19:39:54"}
{"level":"info","message":"All events processed in 1191ms","service":"mindrune-api","timestamp":"2025-03-26 19:39:54"}
{"level":"info","message":"Total Neo4j operation time: 1548ms","service":"mindrune-api","timestamp":"2025-03-26 19:39:54"}
{"level":"info","message":"Neo4j session closed after 1548ms","service":"mindrune-api","timestamp":"2025-03-26 19:39:54"}
{"level":"info","message":"Neo4j insertion completed in 1549ms","service":"mindrune-api","timestamp":"2025-03-26 19:39:54"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 19:39:54"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-26 19:39:54"}
{"level":"info","message":"Total request processing time: 1564ms","service":"mindrune-api","timestamp":"2025-03-26 19:39:54"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Data size: 10603 bytes","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Event count: 52","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Processing 52 events","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Processing batch of 11 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":5,\"type\":16,\"typeString\":\"DAMAGE\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"DAMAGE\"}","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Processing 11 HIT_SPLAT events: 5 incoming, 6 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"1670dac5-bdf2-4ba9-868d-bfce421fba7c_1\",\"timestamp\":\"2025-03-26T23:39:53.833428Z\",\"damage\":0,\"type\":12,\"typeString\":\"BLOCK\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1493,\"locationY\":9711,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Completed batch of 11 HIT_SPLAT events in 258ms","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Processing batch of 21 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-26 19:40:52"}
{"level":"info","message":"Completed batch of 21 XP_GAIN events in 136ms","service":"mindrune-api","timestamp":"2025-03-26 19:40:53"}
{"level":"info","message":"Processing batch of 13 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:40:53"}
{"level":"info","message":"Completed batch of 13 MENU_CLICK events in 960ms","service":"mindrune-api","timestamp":"2025-03-26 19:40:53"}
{"level":"info","message":"Processing batch of 7 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-26 19:40:53"}
{"level":"info","message":"Completed batch of 7 INVENTORY_CHANGE events in 239ms","service":"mindrune-api","timestamp":"2025-03-26 19:40:54"}
{"level":"info","message":"All events processed in 1594ms","service":"mindrune-api","timestamp":"2025-03-26 19:40:54"}
{"level":"info","message":"Total Neo4j operation time: 1696ms","service":"mindrune-api","timestamp":"2025-03-26 19:40:54"}
{"level":"info","message":"Neo4j session closed after 1697ms","service":"mindrune-api","timestamp":"2025-03-26 19:40:54"}
{"level":"info","message":"Neo4j insertion completed in 1698ms","service":"mindrune-api","timestamp":"2025-03-26 19:40:54"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 19:40:54"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-26 19:40:54"}
{"level":"info","message":"Total request processing time: 1711ms","service":"mindrune-api","timestamp":"2025-03-26 19:40:54"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:41:52"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:41:52"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-26 19:41:52"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:41:52"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-26 19:41:52"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:41:52"}
{"level":"info","message":"Data size: 283 bytes","service":"mindrune-api","timestamp":"2025-03-26 19:41:52"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-26 19:41:52"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-26 19:41:52"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-26 19:41:52"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-26 19:41:52"}
{"level":"info","message":"Player node updated in 90ms","service":"mindrune-api","timestamp":"2025-03-26 19:41:52"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-26 19:41:52"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-26 19:41:52"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 804ms","service":"mindrune-api","timestamp":"2025-03-26 19:41:53"}
{"level":"info","message":"All events processed in 804ms","service":"mindrune-api","timestamp":"2025-03-26 19:41:53"}
{"level":"info","message":"Total Neo4j operation time: 895ms","service":"mindrune-api","timestamp":"2025-03-26 19:41:53"}
{"level":"info","message":"Neo4j session closed after 896ms","service":"mindrune-api","timestamp":"2025-03-26 19:41:53"}
{"level":"info","message":"Neo4j insertion completed in 897ms","service":"mindrune-api","timestamp":"2025-03-26 19:41:53"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-26 19:41:53"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-26 19:41:53"}
{"level":"info","message":"Total request processing time: 909ms","service":"mindrune-api","timestamp":"2025-03-26 19:41:53"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-27 12:34:38"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-27 12:34:38"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-27 12:36:55"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:36:55"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:36:55"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 12:36:55"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:36:55"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-27 12:36:55"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:36:55"}
{"level":"info","message":"Data size: 10227 bytes","service":"mindrune-api","timestamp":"2025-03-27 12:36:55"}
{"level":"info","message":"Event count: 49","service":"mindrune-api","timestamp":"2025-03-27 12:36:55"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:36:55"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-27 12:36:55"}
{"level":"info","message":"Processing 49 events","service":"mindrune-api","timestamp":"2025-03-27 12:36:55"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 12:36:55"}
{"level":"info","message":"Player node updated in 354ms","service":"mindrune-api","timestamp":"2025-03-27 12:36:56"}
{"level":"info","message":"Grouped events into 5 types","service":"mindrune-api","timestamp":"2025-03-27 12:36:56"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 12:36:56"}
{"level":"info","message":"Completed batch of 5 MENU_CLICK events in 816ms","service":"mindrune-api","timestamp":"2025-03-27 12:36:56"}
{"level":"info","message":"Processing batch of 17 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 12:36:56"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-27 12:36:56"}
{"level":"info","message":"Processing 17 HIT_SPLAT events: 8 incoming, 9 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 12:36:56"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"144cf047-b9c3-4ede-9fd7-a84c5b2c0e2b_4\",\"timestamp\":\"2025-03-27T16:36:25.508061200Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1495,\"locationY\":9711,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 12:36:56"}
{"level":"info","message":"Completed batch of 17 HIT_SPLAT events in 252ms","service":"mindrune-api","timestamp":"2025-03-27 12:36:57"}
{"level":"info","message":"Processing batch of 24 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 12:36:57"}
{"level":"info","message":"Completed batch of 24 XP_GAIN events in 123ms","service":"mindrune-api","timestamp":"2025-03-27 12:36:57"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-27 12:36:57"}
{"level":"info","message":"Processing 1 monster kills and 0 loot items","service":"mindrune-api","timestamp":"2025-03-27 12:36:57"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 242ms","service":"mindrune-api","timestamp":"2025-03-27 12:36:57"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 12:36:57"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 433ms","service":"mindrune-api","timestamp":"2025-03-27 12:36:57"}
{"level":"info","message":"All events processed in 1870ms","service":"mindrune-api","timestamp":"2025-03-27 12:36:57"}
{"level":"info","message":"Total Neo4j operation time: 2228ms","service":"mindrune-api","timestamp":"2025-03-27 12:36:57"}
{"level":"info","message":"Neo4j session closed after 2228ms","service":"mindrune-api","timestamp":"2025-03-27 12:36:57"}
{"level":"info","message":"Neo4j insertion completed in 2229ms","service":"mindrune-api","timestamp":"2025-03-27 12:36:57"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 12:36:57"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-27 12:36:57"}
{"level":"info","message":"Total request processing time: 2244ms","service":"mindrune-api","timestamp":"2025-03-27 12:36:57"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:37:55"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:37:55"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 12:37:55"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:37:55"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 12:37:55"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:37:55"}
{"level":"info","message":"Data size: 7872 bytes","service":"mindrune-api","timestamp":"2025-03-27 12:37:55"}
{"level":"info","message":"Event count: 38","service":"mindrune-api","timestamp":"2025-03-27 12:37:55"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:37:55"}
{"level":"info","message":"Processing 38 events","service":"mindrune-api","timestamp":"2025-03-27 12:37:55"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 12:37:55"}
{"level":"info","message":"Player node updated in 96ms","service":"mindrune-api","timestamp":"2025-03-27 12:37:55"}
{"level":"info","message":"Grouped events into 5 types","service":"mindrune-api","timestamp":"2025-03-27 12:37:55"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 12:37:55"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 811ms","service":"mindrune-api","timestamp":"2025-03-27 12:37:56"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 12:37:56"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 332ms","service":"mindrune-api","timestamp":"2025-03-27 12:37:56"}
{"level":"info","message":"Processing batch of 21 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 12:37:56"}
{"level":"info","message":"Completed batch of 21 XP_GAIN events in 119ms","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"Processing batch of 11 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":14,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"Processing 11 HIT_SPLAT events: 5 incoming, 6 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"a2584da4-4b88-4fc8-8d8c-d0352b1541ea_11\",\"timestamp\":\"2025-03-27T16:37:32.123978900Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1497,\"locationY\":9711,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"Completed batch of 11 HIT_SPLAT events in 243ms","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"Processing 1 monster kills and 0 loot items","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 210ms","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"All events processed in 1718ms","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"Total Neo4j operation time: 1815ms","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"Neo4j session closed after 1815ms","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"Neo4j insertion completed in 1816ms","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"Total request processing time: 1831ms","service":"mindrune-api","timestamp":"2025-03-27 12:37:57"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-27 12:40:22"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-27 12:40:22"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-27 12:48:55"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:48:55"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:48:55"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 12:48:55"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:48:55"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-27 12:48:55"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:48:55"}
{"level":"info","message":"Data size: 477 bytes","service":"mindrune-api","timestamp":"2025-03-27 12:48:55"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-27 12:48:55"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:48:55"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-27 12:48:55"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-27 12:48:55"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 12:48:55"}
{"level":"info","message":"Player node updated in 337ms","service":"mindrune-api","timestamp":"2025-03-27 12:48:56"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-27 12:48:56"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 12:48:56"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 464ms","service":"mindrune-api","timestamp":"2025-03-27 12:48:56"}
{"level":"info","message":"All events processed in 465ms","service":"mindrune-api","timestamp":"2025-03-27 12:48:56"}
{"level":"info","message":"Total Neo4j operation time: 805ms","service":"mindrune-api","timestamp":"2025-03-27 12:48:56"}
{"level":"info","message":"Neo4j session closed after 806ms","service":"mindrune-api","timestamp":"2025-03-27 12:48:56"}
{"level":"info","message":"Neo4j insertion completed in 807ms","service":"mindrune-api","timestamp":"2025-03-27 12:48:56"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 12:48:56"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-27 12:48:56"}
{"level":"info","message":"Total request processing time: 821ms","service":"mindrune-api","timestamp":"2025-03-27 12:48:56"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Data size: 13858 bytes","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Event count: 67","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Processing 67 events","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Player node updated in 99ms","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Grouped events into 5 types","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Processing batch of 21 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Processing 21 HIT_SPLAT events: 11 incoming, 10 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"91896793-15f0-4078-a261-3e6027b221a7_1\",\"timestamp\":\"2025-03-27T16:48:57.373233500Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1497,\"locationY\":9709,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 12:49:55"}
{"level":"info","message":"Completed batch of 21 HIT_SPLAT events in 285ms","service":"mindrune-api","timestamp":"2025-03-27 12:49:56"}
{"level":"info","message":"Processing batch of 37 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 12:49:56"}
{"level":"info","message":"Completed batch of 37 XP_GAIN events in 134ms","service":"mindrune-api","timestamp":"2025-03-27 12:49:56"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-27 12:49:56"}
{"level":"info","message":"Processing 1 monster kills and 0 loot items","service":"mindrune-api","timestamp":"2025-03-27 12:49:56"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 153ms","service":"mindrune-api","timestamp":"2025-03-27 12:49:56"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 12:49:56"}
{"level":"info","message":"Completed batch of 5 MENU_CLICK events in 799ms","service":"mindrune-api","timestamp":"2025-03-27 12:49:57"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 12:49:57"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 377ms","service":"mindrune-api","timestamp":"2025-03-27 12:49:57"}
{"level":"info","message":"All events processed in 1749ms","service":"mindrune-api","timestamp":"2025-03-27 12:49:57"}
{"level":"info","message":"Total Neo4j operation time: 1850ms","service":"mindrune-api","timestamp":"2025-03-27 12:49:57"}
{"level":"info","message":"Neo4j session closed after 1851ms","service":"mindrune-api","timestamp":"2025-03-27 12:49:57"}
{"level":"info","message":"Neo4j insertion completed in 1851ms","service":"mindrune-api","timestamp":"2025-03-27 12:49:57"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 12:49:57"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-27 12:49:57"}
{"level":"info","message":"Total request processing time: 1865ms","service":"mindrune-api","timestamp":"2025-03-27 12:49:57"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Data size: 811 bytes","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Player node updated in 99ms","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":2,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Poison\",\"typeString\":\"Poison\"}","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"6ee58b1e-8cc0-4e4a-83d6-6266a41007b6_0\",\"timestamp\":\"2025-03-27T16:50:08.787985300Z\",\"damage\":2,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1496,\"locationY\":9710,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 157ms","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"All events processed in 158ms","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Total Neo4j operation time: 257ms","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Neo4j session closed after 257ms","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Neo4j insertion completed in 258ms","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Total request processing time: 271ms","service":"mindrune-api","timestamp":"2025-03-27 12:50:55"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Data size: 811 bytes","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Player node updated in 85ms","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":2,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Poison\",\"typeString\":\"Poison\"}","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"7306de48-5a7a-421a-9e53-2eb57d892081_0\",\"timestamp\":\"2025-03-27T16:51:02.786535600Z\",\"damage\":2,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1496,\"locationY\":9710,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 156ms","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"All events processed in 156ms","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Total Neo4j operation time: 243ms","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Neo4j session closed after 243ms","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Neo4j insertion completed in 243ms","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Total request processing time: 259ms","service":"mindrune-api","timestamp":"2025-03-27 12:51:55"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Data size: 1043 bytes","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Player node updated in 85ms","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":1,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Poison\",\"typeString\":\"Poison\"}","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 4 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"f820b452-4f64-4817-ac49-50ba0b361964_0\",\"timestamp\":\"2025-03-27T16:51:56.792146800Z\",\"damage\":1,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1496,\"locationY\":9710,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 157ms","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"All events processed in 157ms","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Total Neo4j operation time: 245ms","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Neo4j session closed after 245ms","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Neo4j insertion completed in 245ms","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Total request processing time: 257ms","service":"mindrune-api","timestamp":"2025-03-27 12:52:55"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-27 12:57:26"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-27 12:57:27"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-27 12:58:22"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:58:22"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:58:22"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 12:58:22"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:58:22"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 12:58:22"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:58:22"}
{"level":"info","message":"Data size: 5559 bytes","service":"mindrune-api","timestamp":"2025-03-27 12:58:22"}
{"level":"info","message":"Event count: 27","service":"mindrune-api","timestamp":"2025-03-27 12:58:22"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 12:58:22"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-27 12:58:22"}
{"level":"info","message":"Processing 27 events","service":"mindrune-api","timestamp":"2025-03-27 12:58:22"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 12:58:22"}
{"level":"info","message":"Player node updated in 346ms","service":"mindrune-api","timestamp":"2025-03-27 12:58:23"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 12:58:23"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 12:58:23"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 842ms","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 99ms","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Processing batch of 7 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":15,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Processing 7 HIT_SPLAT events: 3 incoming, 4 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"85e60911-ae83-44b7-8ed1-3d0a7cca1147_7\",\"timestamp\":\"2025-03-27T16:57:39.051817Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1496,\"locationY\":9709,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Completed batch of 7 HIT_SPLAT events in 355ms","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Processing batch of 1 KILL events","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Processing unknown event types: KILL","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Completed batch of 1 KILL events in 117ms","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"All events processed in 1415ms","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Total Neo4j operation time: 1764ms","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Neo4j session closed after 1764ms","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Neo4j insertion completed in 1766ms","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Total request processing time: 1781ms","service":"mindrune-api","timestamp":"2025-03-27 12:58:24"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-27 13:01:10"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-27 13:01:10"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-27 13:02:22"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:02:22"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:02:22"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:02:22"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:02:22"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-27 13:02:22"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:02:22"}
{"level":"info","message":"Data size: 5222 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:02:22"}
{"level":"info","message":"Event count: 25","service":"mindrune-api","timestamp":"2025-03-27 13:02:22"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:02:22"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-27 13:02:22"}
{"level":"info","message":"Processing 25 events","service":"mindrune-api","timestamp":"2025-03-27 13:02:22"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:02:22"}
{"level":"info","message":"Player node updated in 331ms","service":"mindrune-api","timestamp":"2025-03-27 13:02:23"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 13:02:23"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:02:23"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 523ms","service":"mindrune-api","timestamp":"2025-03-27 13:02:23"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 13:02:23"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 121ms","service":"mindrune-api","timestamp":"2025-03-27 13:02:23"}
{"level":"info","message":"Processing batch of 7 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 13:02:23"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":23,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 13:02:23"}
{"level":"info","message":"Processing 7 HIT_SPLAT events: 3 incoming, 4 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 13:02:23"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"866066cf-9474-4717-a6f2-8ede79f74220_6\",\"timestamp\":\"2025-03-27T17:01:49.900099600Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1497,\"locationY\":9709,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 13:02:23"}
{"level":"info","message":"Completed batch of 7 HIT_SPLAT events in 316ms","service":"mindrune-api","timestamp":"2025-03-27 13:02:24"}
{"level":"info","message":"Processing batch of 1 KILL events","service":"mindrune-api","timestamp":"2025-03-27 13:02:24"}
{"level":"info","message":"Processing 1 monster kills and 0 loot items","service":"mindrune-api","timestamp":"2025-03-27 13:02:24"}
{"level":"info","message":"Completed batch of 1 KILL events in 228ms","service":"mindrune-api","timestamp":"2025-03-27 13:02:24"}
{"level":"info","message":"All events processed in 1189ms","service":"mindrune-api","timestamp":"2025-03-27 13:02:24"}
{"level":"info","message":"Total Neo4j operation time: 1524ms","service":"mindrune-api","timestamp":"2025-03-27 13:02:24"}
{"level":"info","message":"Neo4j session closed after 1524ms","service":"mindrune-api","timestamp":"2025-03-27 13:02:24"}
{"level":"info","message":"Neo4j insertion completed in 1526ms","service":"mindrune-api","timestamp":"2025-03-27 13:02:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:02:24"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-27 13:02:24"}
{"level":"info","message":"Total request processing time: 1542ms","service":"mindrune-api","timestamp":"2025-03-27 13:02:24"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-27 13:10:14"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-27 13:10:14"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-27 13:11:23"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:11:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:11:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:11:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:11:23"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-27 13:11:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:11:23"}
{"level":"info","message":"Data size: 8132 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:11:23"}
{"level":"info","message":"Event count: 39","service":"mindrune-api","timestamp":"2025-03-27 13:11:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:11:23"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-27 13:11:23"}
{"level":"info","message":"Processing 39 events","service":"mindrune-api","timestamp":"2025-03-27 13:11:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:11:23"}
{"level":"info","message":"Player node updated in 347ms","service":"mindrune-api","timestamp":"2025-03-27 13:11:24"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 13:11:24"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:11:24"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 537ms","service":"mindrune-api","timestamp":"2025-03-27 13:11:24"}
{"level":"info","message":"Processing batch of 24 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 13:11:24"}
{"level":"info","message":"Completed batch of 24 XP_GAIN events in 91ms","service":"mindrune-api","timestamp":"2025-03-27 13:11:24"}
{"level":"info","message":"Processing batch of 11 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 13:11:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":13,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 13:11:24"}
{"level":"info","message":"Processing 11 HIT_SPLAT events: 5 incoming, 6 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 13:11:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"b69e6a74-7668-499a-910f-2dc9f8a09705_7\",\"timestamp\":\"2025-03-27T17:10:50.899130500Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1497,\"locationY\":9709,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 13:11:24"}
{"level":"info","message":"Completed batch of 11 HIT_SPLAT events in 244ms","service":"mindrune-api","timestamp":"2025-03-27 13:11:25"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-27 13:11:25"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-27 13:11:25"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 197ms","service":"mindrune-api","timestamp":"2025-03-27 13:11:25"}
{"level":"info","message":"All events processed in 1071ms","service":"mindrune-api","timestamp":"2025-03-27 13:11:25"}
{"level":"info","message":"Total Neo4j operation time: 1422ms","service":"mindrune-api","timestamp":"2025-03-27 13:11:25"}
{"level":"info","message":"Neo4j session closed after 1423ms","service":"mindrune-api","timestamp":"2025-03-27 13:11:25"}
{"level":"info","message":"Neo4j insertion completed in 1425ms","service":"mindrune-api","timestamp":"2025-03-27 13:11:25"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:11:25"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-27 13:11:25"}
{"level":"info","message":"Total request processing time: 1441ms","service":"mindrune-api","timestamp":"2025-03-27 13:11:25"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:12:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:12:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:12:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:12:23"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 13:12:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:12:23"}
{"level":"info","message":"Data size: 283 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:12:23"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-27 13:12:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:12:23"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-27 13:12:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:12:23"}
{"level":"info","message":"Player node updated in 97ms","service":"mindrune-api","timestamp":"2025-03-27 13:12:23"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-27 13:12:23"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:12:23"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 850ms","service":"mindrune-api","timestamp":"2025-03-27 13:12:24"}
{"level":"info","message":"All events processed in 851ms","service":"mindrune-api","timestamp":"2025-03-27 13:12:24"}
{"level":"info","message":"Total Neo4j operation time: 950ms","service":"mindrune-api","timestamp":"2025-03-27 13:12:24"}
{"level":"info","message":"Neo4j session closed after 950ms","service":"mindrune-api","timestamp":"2025-03-27 13:12:24"}
{"level":"info","message":"Neo4j insertion completed in 951ms","service":"mindrune-api","timestamp":"2025-03-27 13:12:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:12:24"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-27 13:12:24"}
{"level":"info","message":"Total request processing time: 966ms","service":"mindrune-api","timestamp":"2025-03-27 13:12:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:13:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:13:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:13:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:13:23"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 13:13:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:13:23"}
{"level":"info","message":"Data size: 1234 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:13:23"}
{"level":"info","message":"Event count: 6","service":"mindrune-api","timestamp":"2025-03-27 13:13:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:13:23"}
{"level":"info","message":"Processing 6 events","service":"mindrune-api","timestamp":"2025-03-27 13:13:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:13:23"}
{"level":"info","message":"Player node updated in 86ms","service":"mindrune-api","timestamp":"2025-03-27 13:13:23"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-27 13:13:23"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:13:23"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 584ms","service":"mindrune-api","timestamp":"2025-03-27 13:13:24"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 13:13:24"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 407ms","service":"mindrune-api","timestamp":"2025-03-27 13:13:24"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 13:13:24"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 88ms","service":"mindrune-api","timestamp":"2025-03-27 13:13:24"}
{"level":"info","message":"All events processed in 1080ms","service":"mindrune-api","timestamp":"2025-03-27 13:13:24"}
{"level":"info","message":"Total Neo4j operation time: 1169ms","service":"mindrune-api","timestamp":"2025-03-27 13:13:24"}
{"level":"info","message":"Neo4j session closed after 1169ms","service":"mindrune-api","timestamp":"2025-03-27 13:13:24"}
{"level":"info","message":"Neo4j insertion completed in 1169ms","service":"mindrune-api","timestamp":"2025-03-27 13:13:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:13:24"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-27 13:13:24"}
{"level":"info","message":"Total request processing time: 1182ms","service":"mindrune-api","timestamp":"2025-03-27 13:13:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:16:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:16:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:16:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:16:23"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 13:16:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:16:23"}
{"level":"info","message":"Data size: 3469 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:16:23"}
{"level":"info","message":"Event count: 17","service":"mindrune-api","timestamp":"2025-03-27 13:16:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:16:23"}
{"level":"info","message":"Processing 17 events","service":"mindrune-api","timestamp":"2025-03-27 13:16:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:16:23"}
{"level":"info","message":"Player node updated in 86ms","service":"mindrune-api","timestamp":"2025-03-27 13:16:23"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-27 13:16:23"}
{"level":"info","message":"Processing batch of 13 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:16:23"}
{"level":"info","message":"Completed batch of 13 MENU_CLICK events in 386ms","service":"mindrune-api","timestamp":"2025-03-27 13:16:24"}
{"level":"info","message":"Processing batch of 4 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 13:16:24"}
{"level":"info","message":"Completed batch of 4 INVENTORY_CHANGE events in 353ms","service":"mindrune-api","timestamp":"2025-03-27 13:16:24"}
{"level":"info","message":"All events processed in 740ms","service":"mindrune-api","timestamp":"2025-03-27 13:16:24"}
{"level":"info","message":"Total Neo4j operation time: 827ms","service":"mindrune-api","timestamp":"2025-03-27 13:16:24"}
{"level":"info","message":"Neo4j session closed after 827ms","service":"mindrune-api","timestamp":"2025-03-27 13:16:24"}
{"level":"info","message":"Neo4j insertion completed in 828ms","service":"mindrune-api","timestamp":"2025-03-27 13:16:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:16:24"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-27 13:16:24"}
{"level":"info","message":"Total request processing time: 840ms","service":"mindrune-api","timestamp":"2025-03-27 13:16:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:17:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:17:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:17:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:17:23"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 13:17:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:17:23"}
{"level":"info","message":"Data size: 13765 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:17:23"}
{"level":"info","message":"Event count: 70","service":"mindrune-api","timestamp":"2025-03-27 13:17:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:17:23"}
{"level":"info","message":"Processing 70 events","service":"mindrune-api","timestamp":"2025-03-27 13:17:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:17:23"}
{"level":"info","message":"Player node updated in 96ms","service":"mindrune-api","timestamp":"2025-03-27 13:17:23"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 13:17:23"}
{"level":"info","message":"Processing batch of 24 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:17:23"}
{"level":"info","message":"Completed batch of 24 MENU_CLICK events in 651ms","service":"mindrune-api","timestamp":"2025-03-27 13:17:24"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 13:17:24"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 356ms","service":"mindrune-api","timestamp":"2025-03-27 13:17:24"}
{"level":"info","message":"Processing batch of 28 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 13:17:24"}
{"level":"info","message":"Completed batch of 28 XP_GAIN events in 120ms","service":"mindrune-api","timestamp":"2025-03-27 13:17:25"}
{"level":"info","message":"Processing batch of 16 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 13:17:25"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Eclipse Moon\",\"damage\":12,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 13:17:25"}
{"level":"info","message":"Processing 16 HIT_SPLAT events: 15 incoming, 1 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 13:17:25"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"f7b28800-5926-4f56-bb8b-c9ee21789a6b_18\",\"timestamp\":\"2025-03-27T17:16:59.295358100Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Block\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1488,\"locationY\":9632,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 13:17:25"}
{"level":"info","message":"Completed batch of 16 HIT_SPLAT events in 271ms","service":"mindrune-api","timestamp":"2025-03-27 13:17:25"}
{"level":"info","message":"All events processed in 1400ms","service":"mindrune-api","timestamp":"2025-03-27 13:17:25"}
{"level":"info","message":"Total Neo4j operation time: 1497ms","service":"mindrune-api","timestamp":"2025-03-27 13:17:25"}
{"level":"info","message":"Neo4j session closed after 1497ms","service":"mindrune-api","timestamp":"2025-03-27 13:17:25"}
{"level":"info","message":"Neo4j insertion completed in 1498ms","service":"mindrune-api","timestamp":"2025-03-27 13:17:25"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:17:25"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-27 13:17:25"}
{"level":"info","message":"Total request processing time: 1514ms","service":"mindrune-api","timestamp":"2025-03-27 13:17:25"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:18:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:18:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:18:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:18:23"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 13:18:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:18:23"}
{"level":"info","message":"Data size: 17049 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:18:23"}
{"level":"info","message":"Event count: 84","service":"mindrune-api","timestamp":"2025-03-27 13:18:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:18:23"}
{"level":"info","message":"Processing 84 events","service":"mindrune-api","timestamp":"2025-03-27 13:18:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:18:23"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-27 13:18:23"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 13:18:23"}
{"level":"info","message":"Processing batch of 34 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:18:23"}
{"level":"info","message":"Completed batch of 34 MENU_CLICK events in 717ms","service":"mindrune-api","timestamp":"2025-03-27 13:18:24"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 13:18:24"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 335ms","service":"mindrune-api","timestamp":"2025-03-27 13:18:24"}
{"level":"info","message":"Processing batch of 18 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 13:18:24"}
{"level":"info","message":"Completed batch of 18 XP_GAIN events in 125ms","service":"mindrune-api","timestamp":"2025-03-27 13:18:25"}
{"level":"info","message":"Processing batch of 31 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 13:18:25"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Eclipse Moon\",\"damage\":14,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 13:18:25"}
{"level":"info","message":"Processing 31 HIT_SPLAT events: 20 incoming, 11 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 13:18:25"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"9ee3a355-9722-40f0-800e-0d6edb6a159d_8\",\"timestamp\":\"2025-03-27T17:17:29.296075800Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Eclipse Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1489,\"locationY\":9635,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 13:18:25"}
{"level":"info","message":"Completed batch of 31 HIT_SPLAT events in 219ms","service":"mindrune-api","timestamp":"2025-03-27 13:18:25"}
{"level":"info","message":"All events processed in 1399ms","service":"mindrune-api","timestamp":"2025-03-27 13:18:25"}
{"level":"info","message":"Total Neo4j operation time: 1494ms","service":"mindrune-api","timestamp":"2025-03-27 13:18:25"}
{"level":"info","message":"Neo4j session closed after 1494ms","service":"mindrune-api","timestamp":"2025-03-27 13:18:25"}
{"level":"info","message":"Neo4j insertion completed in 1495ms","service":"mindrune-api","timestamp":"2025-03-27 13:18:25"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:18:25"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-27 13:18:25"}
{"level":"info","message":"Total request processing time: 1510ms","service":"mindrune-api","timestamp":"2025-03-27 13:18:25"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Data size: 15388 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Event count: 76","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Processing 76 events","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Player node updated in 85ms","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Processing batch of 21 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Eclipse Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Eclipse Moon\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Processing 21 HIT_SPLAT events: 15 incoming, 6 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"fcbe2f36-254f-41de-aef1-7ebd792e3ed1_0\",\"timestamp\":\"2025-03-27T17:18:23.912646300Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Eclipse Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1486,\"locationY\":9629,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 13:19:23"}
{"level":"info","message":"Completed batch of 21 HIT_SPLAT events in 287ms","service":"mindrune-api","timestamp":"2025-03-27 13:19:24"}
{"level":"info","message":"Processing batch of 15 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 13:19:24"}
{"level":"info","message":"Completed batch of 15 XP_GAIN events in 91ms","service":"mindrune-api","timestamp":"2025-03-27 13:19:24"}
{"level":"info","message":"Processing batch of 32 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:19:24"}
{"level":"info","message":"Completed batch of 32 MENU_CLICK events in 379ms","service":"mindrune-api","timestamp":"2025-03-27 13:19:24"}
{"level":"info","message":"Processing batch of 8 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 13:19:24"}
{"level":"info","message":"Completed batch of 8 INVENTORY_CHANGE events in 278ms","service":"mindrune-api","timestamp":"2025-03-27 13:19:24"}
{"level":"info","message":"All events processed in 1037ms","service":"mindrune-api","timestamp":"2025-03-27 13:19:24"}
{"level":"info","message":"Total Neo4j operation time: 1125ms","service":"mindrune-api","timestamp":"2025-03-27 13:19:24"}
{"level":"info","message":"Neo4j session closed after 1125ms","service":"mindrune-api","timestamp":"2025-03-27 13:19:24"}
{"level":"info","message":"Neo4j insertion completed in 1125ms","service":"mindrune-api","timestamp":"2025-03-27 13:19:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:19:24"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-27 13:19:24"}
{"level":"info","message":"Total request processing time: 1141ms","service":"mindrune-api","timestamp":"2025-03-27 13:19:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:20:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:20:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:20:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:20:23"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 13:20:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:20:23"}
{"level":"info","message":"Data size: 16647 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:20:23"}
{"level":"info","message":"Event count: 81","service":"mindrune-api","timestamp":"2025-03-27 13:20:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:20:23"}
{"level":"info","message":"Processing 81 events","service":"mindrune-api","timestamp":"2025-03-27 13:20:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:20:23"}
{"level":"info","message":"Player node updated in 84ms","service":"mindrune-api","timestamp":"2025-03-27 13:20:23"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 13:20:23"}
{"level":"info","message":"Processing batch of 26 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:20:23"}
{"level":"info","message":"Completed batch of 26 MENU_CLICK events in 613ms","service":"mindrune-api","timestamp":"2025-03-27 13:20:24"}
{"level":"info","message":"Processing batch of 27 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 13:20:24"}
{"level":"info","message":"Completed batch of 27 XP_GAIN events in 89ms","service":"mindrune-api","timestamp":"2025-03-27 13:20:24"}
{"level":"info","message":"Processing batch of 27 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 13:20:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":24,\"type\":43,\"typeString\":\"Max Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Max Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 13:20:24"}
{"level":"info","message":"Processing 27 HIT_SPLAT events: 8 incoming, 19 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 13:20:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"2b1894b3-4d72-4b39-ba6a-d613000f7191_12\",\"timestamp\":\"2025-03-27T17:19:38.901520600Z\",\"damage\":1,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1437,\"locationY\":9678,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 13:20:24"}
{"level":"info","message":"Completed batch of 27 HIT_SPLAT events in 224ms","service":"mindrune-api","timestamp":"2025-03-27 13:20:24"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-27 13:20:24"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-27 13:20:24"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 274ms","service":"mindrune-api","timestamp":"2025-03-27 13:20:25"}
{"level":"info","message":"All events processed in 1203ms","service":"mindrune-api","timestamp":"2025-03-27 13:20:25"}
{"level":"info","message":"Total Neo4j operation time: 1289ms","service":"mindrune-api","timestamp":"2025-03-27 13:20:25"}
{"level":"info","message":"Neo4j session closed after 1289ms","service":"mindrune-api","timestamp":"2025-03-27 13:20:25"}
{"level":"info","message":"Neo4j insertion completed in 1289ms","service":"mindrune-api","timestamp":"2025-03-27 13:20:25"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:20:25"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-27 13:20:25"}
{"level":"info","message":"Total request processing time: 1303ms","service":"mindrune-api","timestamp":"2025-03-27 13:20:25"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Data size: 17375 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Event count: 82","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Processing 82 events","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Processing batch of 44 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":19,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Processing 44 HIT_SPLAT events: 21 incoming, 23 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"fdde0706-07d6-407a-820d-8d3b27c7a73d_1\",\"timestamp\":\"2025-03-27T17:20:25.161350600Z\",\"damage\":2,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1441,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 13:21:23"}
{"level":"info","message":"Completed batch of 44 HIT_SPLAT events in 228ms","service":"mindrune-api","timestamp":"2025-03-27 13:21:24"}
{"level":"info","message":"Processing batch of 20 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:21:24"}
{"level":"info","message":"Completed batch of 20 MENU_CLICK events in 357ms","service":"mindrune-api","timestamp":"2025-03-27 13:21:24"}
{"level":"info","message":"Processing batch of 18 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 13:21:24"}
{"level":"info","message":"Completed batch of 18 XP_GAIN events in 132ms","service":"mindrune-api","timestamp":"2025-03-27 13:21:24"}
{"level":"info","message":"All events processed in 718ms","service":"mindrune-api","timestamp":"2025-03-27 13:21:24"}
{"level":"info","message":"Total Neo4j operation time: 812ms","service":"mindrune-api","timestamp":"2025-03-27 13:21:24"}
{"level":"info","message":"Neo4j session closed after 813ms","service":"mindrune-api","timestamp":"2025-03-27 13:21:24"}
{"level":"info","message":"Neo4j insertion completed in 814ms","service":"mindrune-api","timestamp":"2025-03-27 13:21:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:21:24"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-27 13:21:24"}
{"level":"info","message":"Total request processing time: 830ms","service":"mindrune-api","timestamp":"2025-03-27 13:21:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Data size: 14971 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Event count: 75","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Processing 75 events","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Player node updated in 85ms","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Processing batch of 19 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blue Moon\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Processing 19 HIT_SPLAT events: 10 incoming, 9 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"6c58dc93-e736-4b97-83dc-9f630cd5a330_0\",\"timestamp\":\"2025-03-27T17:21:23.910981200Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 13:22:23"}
{"level":"info","message":"Completed batch of 19 HIT_SPLAT events in 177ms","service":"mindrune-api","timestamp":"2025-03-27 13:22:24"}
{"level":"info","message":"Processing batch of 26 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 13:22:24"}
{"level":"info","message":"Completed batch of 26 XP_GAIN events in 135ms","service":"mindrune-api","timestamp":"2025-03-27 13:22:24"}
{"level":"info","message":"Processing batch of 28 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:22:24"}
{"level":"info","message":"Completed batch of 28 MENU_CLICK events in 377ms","service":"mindrune-api","timestamp":"2025-03-27 13:22:24"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 13:22:24"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 419ms","service":"mindrune-api","timestamp":"2025-03-27 13:22:24"}
{"level":"info","message":"All events processed in 1109ms","service":"mindrune-api","timestamp":"2025-03-27 13:22:24"}
{"level":"info","message":"Total Neo4j operation time: 1195ms","service":"mindrune-api","timestamp":"2025-03-27 13:22:24"}
{"level":"info","message":"Neo4j session closed after 1195ms","service":"mindrune-api","timestamp":"2025-03-27 13:22:24"}
{"level":"info","message":"Neo4j insertion completed in 1197ms","service":"mindrune-api","timestamp":"2025-03-27 13:22:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:22:24"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-27 13:22:25"}
{"level":"info","message":"Total request processing time: 1211ms","service":"mindrune-api","timestamp":"2025-03-27 13:22:25"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Data size: 33146 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Event count: 161","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Processing 161 events","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Player node updated in 85ms","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Processing batch of 76 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Completed batch of 76 XP_GAIN events in 93ms","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Processing batch of 60 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":4,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blood Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blood Moon\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Processing 60 HIT_SPLAT events: 34 incoming, 26 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"6071c84e-a30f-4b08-95f4-4e520e9f8e27_4\",\"timestamp\":\"2025-03-27T17:22:24.527192800Z\",\"damage\":4,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blood Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1394,\"locationY\":9635,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 13:23:23"}
{"level":"info","message":"Completed batch of 60 HIT_SPLAT events in 230ms","service":"mindrune-api","timestamp":"2025-03-27 13:23:24"}
{"level":"info","message":"Processing batch of 25 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:23:24"}
{"level":"info","message":"Completed batch of 25 MENU_CLICK events in 327ms","service":"mindrune-api","timestamp":"2025-03-27 13:23:24"}
{"level":"info","message":"All events processed in 653ms","service":"mindrune-api","timestamp":"2025-03-27 13:23:24"}
{"level":"info","message":"Total Neo4j operation time: 739ms","service":"mindrune-api","timestamp":"2025-03-27 13:23:24"}
{"level":"info","message":"Neo4j session closed after 739ms","service":"mindrune-api","timestamp":"2025-03-27 13:23:24"}
{"level":"info","message":"Neo4j insertion completed in 741ms","service":"mindrune-api","timestamp":"2025-03-27 13:23:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:23:24"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-27 13:23:24"}
{"level":"info","message":"Total request processing time: 758ms","service":"mindrune-api","timestamp":"2025-03-27 13:23:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Data size: 27677 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Event count: 133","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Processing 133 events","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Player node updated in 85ms","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Processing batch of 57 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blood Moon\",\"damage\":17,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Processing 57 HIT_SPLAT events: 31 incoming, 26 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"b4f8b3c5-cf41-4fff-a189-dae3f67a9665_1\",\"timestamp\":\"2025-03-27T17:23:25.126554500Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blood Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1389,\"locationY\":9631,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 13:24:23"}
{"level":"info","message":"Completed batch of 57 HIT_SPLAT events in 183ms","service":"mindrune-api","timestamp":"2025-03-27 13:24:24"}
{"level":"info","message":"Processing batch of 24 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:24:24"}
{"level":"info","message":"Completed batch of 24 MENU_CLICK events in 324ms","service":"mindrune-api","timestamp":"2025-03-27 13:24:24"}
{"level":"info","message":"Processing batch of 52 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 13:24:24"}
{"level":"info","message":"Completed batch of 52 XP_GAIN events in 94ms","service":"mindrune-api","timestamp":"2025-03-27 13:24:24"}
{"level":"info","message":"All events processed in 603ms","service":"mindrune-api","timestamp":"2025-03-27 13:24:24"}
{"level":"info","message":"Total Neo4j operation time: 689ms","service":"mindrune-api","timestamp":"2025-03-27 13:24:24"}
{"level":"info","message":"Neo4j session closed after 689ms","service":"mindrune-api","timestamp":"2025-03-27 13:24:24"}
{"level":"info","message":"Neo4j insertion completed in 690ms","service":"mindrune-api","timestamp":"2025-03-27 13:24:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:24:24"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-27 13:24:24"}
{"level":"info","message":"Total request processing time: 705ms","service":"mindrune-api","timestamp":"2025-03-27 13:24:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:25:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:25:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:25:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:25:23"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 13:25:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:25:23"}
{"level":"info","message":"Data size: 16565 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:25:23"}
{"level":"info","message":"Event count: 84","service":"mindrune-api","timestamp":"2025-03-27 13:25:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:25:23"}
{"level":"info","message":"Processing 84 events","service":"mindrune-api","timestamp":"2025-03-27 13:25:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:25:23"}
{"level":"info","message":"Player node updated in 104ms","service":"mindrune-api","timestamp":"2025-03-27 13:25:23"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-27 13:25:23"}
{"level":"info","message":"Processing batch of 38 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 13:25:23"}
{"level":"info","message":"Completed batch of 38 XP_GAIN events in 96ms","service":"mindrune-api","timestamp":"2025-03-27 13:25:24"}
{"level":"info","message":"Processing batch of 18 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 13:25:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":6,\"type\":6,\"typeString\":\"Heal\",\"source\":\"Blood jaguar\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blood jaguar\",\"typeString\":\"Heal\"}","service":"mindrune-api","timestamp":"2025-03-27 13:25:24"}
{"level":"info","message":"Processing 18 HIT_SPLAT events: 10 incoming, 8 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 13:25:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"a099dfd7-2752-4529-87d1-768867eb3408_4\",\"timestamp\":\"2025-03-27T17:24:24.531332900Z\",\"damage\":6,\"type\":6,\"typeString\":\"Heal\",\"source\":\"Blood jaguar\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1391,\"locationY\":9628,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 13:25:24"}
{"level":"info","message":"Completed batch of 18 HIT_SPLAT events in 221ms","service":"mindrune-api","timestamp":"2025-03-27 13:25:24"}
{"level":"info","message":"Processing batch of 28 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:25:24"}
{"level":"info","message":"Completed batch of 28 MENU_CLICK events in 608ms","service":"mindrune-api","timestamp":"2025-03-27 13:25:24"}
{"level":"info","message":"All events processed in 925ms","service":"mindrune-api","timestamp":"2025-03-27 13:25:24"}
{"level":"info","message":"Total Neo4j operation time: 1031ms","service":"mindrune-api","timestamp":"2025-03-27 13:25:24"}
{"level":"info","message":"Neo4j session closed after 1031ms","service":"mindrune-api","timestamp":"2025-03-27 13:25:24"}
{"level":"info","message":"Neo4j insertion completed in 1031ms","service":"mindrune-api","timestamp":"2025-03-27 13:25:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:25:24"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-27 13:25:24"}
{"level":"info","message":"Total request processing time: 1046ms","service":"mindrune-api","timestamp":"2025-03-27 13:25:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:29:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:29:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:29:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:29:23"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 13:29:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:29:23"}
{"level":"info","message":"Data size: 286 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:29:23"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-27 13:29:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:29:23"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-27 13:29:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:29:23"}
{"level":"info","message":"Player node updated in 86ms","service":"mindrune-api","timestamp":"2025-03-27 13:29:23"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-27 13:29:23"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:29:23"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 521ms","service":"mindrune-api","timestamp":"2025-03-27 13:29:24"}
{"level":"info","message":"All events processed in 521ms","service":"mindrune-api","timestamp":"2025-03-27 13:29:24"}
{"level":"info","message":"Total Neo4j operation time: 608ms","service":"mindrune-api","timestamp":"2025-03-27 13:29:24"}
{"level":"info","message":"Neo4j session closed after 609ms","service":"mindrune-api","timestamp":"2025-03-27 13:29:24"}
{"level":"info","message":"Neo4j insertion completed in 609ms","service":"mindrune-api","timestamp":"2025-03-27 13:29:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:29:24"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-27 13:29:24"}
{"level":"info","message":"Total request processing time: 623ms","service":"mindrune-api","timestamp":"2025-03-27 13:29:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:32:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:32:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:32:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:32:23"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 13:32:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:32:23"}
{"level":"info","message":"Data size: 283 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:32:23"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-27 13:32:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:32:23"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-27 13:32:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:32:23"}
{"level":"info","message":"Player node updated in 114ms","service":"mindrune-api","timestamp":"2025-03-27 13:32:23"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-27 13:32:23"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:32:23"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 452ms","service":"mindrune-api","timestamp":"2025-03-27 13:32:24"}
{"level":"info","message":"All events processed in 452ms","service":"mindrune-api","timestamp":"2025-03-27 13:32:24"}
{"level":"info","message":"Total Neo4j operation time: 568ms","service":"mindrune-api","timestamp":"2025-03-27 13:32:24"}
{"level":"info","message":"Neo4j session closed after 568ms","service":"mindrune-api","timestamp":"2025-03-27 13:32:24"}
{"level":"info","message":"Neo4j insertion completed in 569ms","service":"mindrune-api","timestamp":"2025-03-27 13:32:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:32:24"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-27 13:32:24"}
{"level":"info","message":"Total request processing time: 583ms","service":"mindrune-api","timestamp":"2025-03-27 13:32:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:37:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:37:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:37:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:37:23"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 13:37:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:37:23"}
{"level":"info","message":"Data size: 638 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:37:23"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-27 13:37:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:37:23"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-27 13:37:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:37:23"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-27 13:37:23"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-27 13:37:23"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:37:23"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 832ms","service":"mindrune-api","timestamp":"2025-03-27 13:37:24"}
{"level":"info","message":"All events processed in 833ms","service":"mindrune-api","timestamp":"2025-03-27 13:37:24"}
{"level":"info","message":"Total Neo4j operation time: 926ms","service":"mindrune-api","timestamp":"2025-03-27 13:37:24"}
{"level":"info","message":"Neo4j session closed after 926ms","service":"mindrune-api","timestamp":"2025-03-27 13:37:24"}
{"level":"info","message":"Neo4j insertion completed in 927ms","service":"mindrune-api","timestamp":"2025-03-27 13:37:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:37:24"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-27 13:37:24"}
{"level":"info","message":"Total request processing time: 942ms","service":"mindrune-api","timestamp":"2025-03-27 13:37:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:38:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:38:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:38:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:38:23"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 13:38:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:38:23"}
{"level":"info","message":"Data size: 286 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:38:23"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-27 13:38:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:38:23"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-27 13:38:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:38:23"}
{"level":"info","message":"Player node updated in 95ms","service":"mindrune-api","timestamp":"2025-03-27 13:38:23"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-27 13:38:23"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:38:23"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 852ms","service":"mindrune-api","timestamp":"2025-03-27 13:38:24"}
{"level":"info","message":"All events processed in 852ms","service":"mindrune-api","timestamp":"2025-03-27 13:38:24"}
{"level":"info","message":"Total Neo4j operation time: 948ms","service":"mindrune-api","timestamp":"2025-03-27 13:38:24"}
{"level":"info","message":"Neo4j session closed after 948ms","service":"mindrune-api","timestamp":"2025-03-27 13:38:24"}
{"level":"info","message":"Neo4j insertion completed in 949ms","service":"mindrune-api","timestamp":"2025-03-27 13:38:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:38:24"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-27 13:38:24"}
{"level":"info","message":"Total request processing time: 964ms","service":"mindrune-api","timestamp":"2025-03-27 13:38:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:39:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:39:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 13:39:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:39:23"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 13:39:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:39:23"}
{"level":"info","message":"Data size: 286 bytes","service":"mindrune-api","timestamp":"2025-03-27 13:39:23"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-27 13:39:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 13:39:23"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-27 13:39:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 13:39:23"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-27 13:39:23"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-27 13:39:23"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 13:39:23"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 445ms","service":"mindrune-api","timestamp":"2025-03-27 13:39:24"}
{"level":"info","message":"All events processed in 446ms","service":"mindrune-api","timestamp":"2025-03-27 13:39:24"}
{"level":"info","message":"Total Neo4j operation time: 539ms","service":"mindrune-api","timestamp":"2025-03-27 13:39:24"}
{"level":"info","message":"Neo4j session closed after 539ms","service":"mindrune-api","timestamp":"2025-03-27 13:39:24"}
{"level":"info","message":"Neo4j insertion completed in 539ms","service":"mindrune-api","timestamp":"2025-03-27 13:39:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 13:39:24"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-27 13:39:24"}
{"level":"info","message":"Total request processing time: 553ms","service":"mindrune-api","timestamp":"2025-03-27 13:39:24"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-27 17:20:52"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-27 17:20:52"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-27 17:21:23"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:21:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:21:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 17:21:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:21:23"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 17:21:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:21:23"}
{"level":"info","message":"Data size: 5093 bytes","service":"mindrune-api","timestamp":"2025-03-27 17:21:23"}
{"level":"info","message":"Event count: 27","service":"mindrune-api","timestamp":"2025-03-27 17:21:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:21:23"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-27 17:21:23"}
{"level":"info","message":"Processing 27 events","service":"mindrune-api","timestamp":"2025-03-27 17:21:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 17:21:23"}
{"level":"info","message":"Player node updated in 334ms","service":"mindrune-api","timestamp":"2025-03-27 17:21:24"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-27 17:21:24"}
{"level":"info","message":"Processing batch of 22 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 17:21:24"}
{"level":"info","message":"Completed batch of 22 MENU_CLICK events in 692ms","service":"mindrune-api","timestamp":"2025-03-27 17:21:24"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 17:21:24"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 411ms","service":"mindrune-api","timestamp":"2025-03-27 17:21:25"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 17:21:25"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":2,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Damage\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 17:21:25"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 17:21:25"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"d2daf415-a14e-4bc4-be06-c32dbd19dd5d_15\",\"timestamp\":\"2025-03-27T21:21:12.902636Z\",\"damage\":2,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1485,\"locationY\":9637,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 17:21:25"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 218ms","service":"mindrune-api","timestamp":"2025-03-27 17:21:25"}
{"level":"info","message":"All events processed in 1322ms","service":"mindrune-api","timestamp":"2025-03-27 17:21:25"}
{"level":"info","message":"Total Neo4j operation time: 1659ms","service":"mindrune-api","timestamp":"2025-03-27 17:21:25"}
{"level":"info","message":"Neo4j session closed after 1659ms","service":"mindrune-api","timestamp":"2025-03-27 17:21:25"}
{"level":"info","message":"Neo4j insertion completed in 1660ms","service":"mindrune-api","timestamp":"2025-03-27 17:21:25"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 17:21:25"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-27 17:21:25"}
{"level":"info","message":"Total request processing time: 1676ms","service":"mindrune-api","timestamp":"2025-03-27 17:21:25"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:22:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:22:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 17:22:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:22:23"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 17:22:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:22:23"}
{"level":"info","message":"Data size: 22074 bytes","service":"mindrune-api","timestamp":"2025-03-27 17:22:23"}
{"level":"info","message":"Event count: 108","service":"mindrune-api","timestamp":"2025-03-27 17:22:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:22:23"}
{"level":"info","message":"Processing 108 events","service":"mindrune-api","timestamp":"2025-03-27 17:22:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 17:22:23"}
{"level":"info","message":"Player node updated in 95ms","service":"mindrune-api","timestamp":"2025-03-27 17:22:24"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 17:22:24"}
{"level":"info","message":"Processing batch of 30 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 17:22:24"}
{"level":"info","message":"Completed batch of 30 MENU_CLICK events in 670ms","service":"mindrune-api","timestamp":"2025-03-27 17:22:24"}
{"level":"info","message":"Processing batch of 36 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 17:22:24"}
{"level":"info","message":"Completed batch of 36 XP_GAIN events in 121ms","service":"mindrune-api","timestamp":"2025-03-27 17:22:24"}
{"level":"info","message":"Processing batch of 39 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 17:22:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Eclipse Moon\",\"damage\":10,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 17:22:24"}
{"level":"info","message":"Processing 39 HIT_SPLAT events: 30 incoming, 9 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 17:22:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"50fc0584-f3c7-45e8-948c-fe754b92dab0_11\",\"timestamp\":\"2025-03-27T21:21:31.501297800Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Eclipse Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1486,\"locationY\":9629,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 17:22:24"}
{"level":"info","message":"Completed batch of 39 HIT_SPLAT events in 254ms","service":"mindrune-api","timestamp":"2025-03-27 17:22:25"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 17:22:25"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 379ms","service":"mindrune-api","timestamp":"2025-03-27 17:22:25"}
{"level":"info","message":"All events processed in 1426ms","service":"mindrune-api","timestamp":"2025-03-27 17:22:25"}
{"level":"info","message":"Total Neo4j operation time: 1522ms","service":"mindrune-api","timestamp":"2025-03-27 17:22:25"}
{"level":"info","message":"Neo4j session closed after 1523ms","service":"mindrune-api","timestamp":"2025-03-27 17:22:25"}
{"level":"info","message":"Neo4j insertion completed in 1523ms","service":"mindrune-api","timestamp":"2025-03-27 17:22:25"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 17:22:25"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-27 17:22:25"}
{"level":"info","message":"Total request processing time: 1537ms","service":"mindrune-api","timestamp":"2025-03-27 17:22:25"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:23:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:23:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 17:23:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:23:23"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 17:23:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:23:23"}
{"level":"info","message":"Data size: 14283 bytes","service":"mindrune-api","timestamp":"2025-03-27 17:23:23"}
{"level":"info","message":"Event count: 72","service":"mindrune-api","timestamp":"2025-03-27 17:23:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:23:23"}
{"level":"info","message":"Processing 72 events","service":"mindrune-api","timestamp":"2025-03-27 17:23:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 17:23:23"}
{"level":"info","message":"Player node updated in 86ms","service":"mindrune-api","timestamp":"2025-03-27 17:23:23"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 17:23:23"}
{"level":"info","message":"Processing batch of 37 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 17:23:23"}
{"level":"info","message":"Completed batch of 37 MENU_CLICK events in 622ms","service":"mindrune-api","timestamp":"2025-03-27 17:23:24"}
{"level":"info","message":"Processing batch of 8 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 17:23:24"}
{"level":"info","message":"Completed batch of 8 INVENTORY_CHANGE events in 241ms","service":"mindrune-api","timestamp":"2025-03-27 17:23:24"}
{"level":"info","message":"Processing batch of 13 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 17:23:24"}
{"level":"info","message":"Completed batch of 13 XP_GAIN events in 120ms","service":"mindrune-api","timestamp":"2025-03-27 17:23:24"}
{"level":"info","message":"Processing batch of 14 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 17:23:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":10,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 17:23:24"}
{"level":"info","message":"Processing 14 HIT_SPLAT events: 6 incoming, 8 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 17:23:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"2c748289-646b-42a6-8ad8-188c1be6cf70_55\",\"timestamp\":\"2025-03-27T21:23:17.117989700Z\",\"damage\":4,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 17:23:24"}
{"level":"info","message":"Completed batch of 14 HIT_SPLAT events in 283ms","service":"mindrune-api","timestamp":"2025-03-27 17:23:25"}
{"level":"info","message":"All events processed in 1270ms","service":"mindrune-api","timestamp":"2025-03-27 17:23:25"}
{"level":"info","message":"Total Neo4j operation time: 1356ms","service":"mindrune-api","timestamp":"2025-03-27 17:23:25"}
{"level":"info","message":"Neo4j session closed after 1356ms","service":"mindrune-api","timestamp":"2025-03-27 17:23:25"}
{"level":"info","message":"Neo4j insertion completed in 1357ms","service":"mindrune-api","timestamp":"2025-03-27 17:23:25"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 17:23:25"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-27 17:23:25"}
{"level":"info","message":"Total request processing time: 1371ms","service":"mindrune-api","timestamp":"2025-03-27 17:23:25"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:24:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:24:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 17:24:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:24:23"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 17:24:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:24:23"}
{"level":"info","message":"Data size: 21732 bytes","service":"mindrune-api","timestamp":"2025-03-27 17:24:23"}
{"level":"info","message":"Event count: 102","service":"mindrune-api","timestamp":"2025-03-27 17:24:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:24:23"}
{"level":"info","message":"Processing 102 events","service":"mindrune-api","timestamp":"2025-03-27 17:24:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 17:24:23"}
{"level":"info","message":"Player node updated in 97ms","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Processing batch of 49 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":1,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blue Moon\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Processing 49 HIT_SPLAT events: 22 incoming, 27 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"36788f3c-0ba2-419c-afca-cd2eef7fa20d_0\",\"timestamp\":\"2025-03-27T21:23:24.317830900Z\",\"damage\":1,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1437,\"locationY\":9679,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Completed batch of 49 HIT_SPLAT events in 214ms","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Processing batch of 20 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Completed batch of 20 MENU_CLICK events in 423ms","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Processing batch of 32 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Completed batch of 32 XP_GAIN events in 90ms","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 229ms","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"All events processed in 959ms","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Total Neo4j operation time: 1057ms","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Neo4j session closed after 1057ms","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Neo4j insertion completed in 1058ms","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Total request processing time: 1072ms","service":"mindrune-api","timestamp":"2025-03-27 17:24:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:25:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:25:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 17:25:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:25:23"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 17:25:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:25:23"}
{"level":"info","message":"Data size: 20266 bytes","service":"mindrune-api","timestamp":"2025-03-27 17:25:23"}
{"level":"info","message":"Event count: 99","service":"mindrune-api","timestamp":"2025-03-27 17:25:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:25:23"}
{"level":"info","message":"Processing 99 events","service":"mindrune-api","timestamp":"2025-03-27 17:25:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 17:25:23"}
{"level":"info","message":"Player node updated in 88ms","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Processing batch of 35 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blue Moon\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Processing 35 HIT_SPLAT events: 23 incoming, 12 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"840a0cc3-f00b-41f9-b084-0c92ba7dcafd_0\",\"timestamp\":\"2025-03-27T21:24:24.317988600Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1443,\"locationY\":9681,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Completed batch of 35 HIT_SPLAT events in 179ms","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Processing batch of 38 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Completed batch of 38 XP_GAIN events in 91ms","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Processing batch of 25 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Completed batch of 25 MENU_CLICK events in 327ms","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 329ms","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"All events processed in 930ms","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Total Neo4j operation time: 1019ms","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Neo4j session closed after 1019ms","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Neo4j insertion completed in 1019ms","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Total request processing time: 1033ms","service":"mindrune-api","timestamp":"2025-03-27 17:25:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:26:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:26:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 17:26:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:26:23"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 17:26:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:26:23"}
{"level":"info","message":"Data size: 25137 bytes","service":"mindrune-api","timestamp":"2025-03-27 17:26:23"}
{"level":"info","message":"Event count: 123","service":"mindrune-api","timestamp":"2025-03-27 17:26:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:26:23"}
{"level":"info","message":"Processing 123 events","service":"mindrune-api","timestamp":"2025-03-27 17:26:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 17:26:23"}
{"level":"info","message":"Player node updated in 85ms","service":"mindrune-api","timestamp":"2025-03-27 17:26:23"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-27 17:26:23"}
{"level":"info","message":"Processing batch of 25 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 17:26:23"}
{"level":"info","message":"Completed batch of 25 MENU_CLICK events in 331ms","service":"mindrune-api","timestamp":"2025-03-27 17:26:24"}
{"level":"info","message":"Processing batch of 56 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 17:26:24"}
{"level":"info","message":"Completed batch of 56 XP_GAIN events in 124ms","service":"mindrune-api","timestamp":"2025-03-27 17:26:24"}
{"level":"info","message":"Processing batch of 42 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 17:26:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blood Moon\",\"damage\":14,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 17:26:24"}
{"level":"info","message":"Processing 42 HIT_SPLAT events: 25 incoming, 17 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 17:26:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"694a4713-e9e0-4711-a822-45e5d7b414f0_19\",\"timestamp\":\"2025-03-27T21:25:44.133885700Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blood Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1393,\"locationY\":9635,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 17:26:24"}
{"level":"info","message":"Completed batch of 42 HIT_SPLAT events in 241ms","service":"mindrune-api","timestamp":"2025-03-27 17:26:24"}
{"level":"info","message":"All events processed in 697ms","service":"mindrune-api","timestamp":"2025-03-27 17:26:24"}
{"level":"info","message":"Total Neo4j operation time: 783ms","service":"mindrune-api","timestamp":"2025-03-27 17:26:24"}
{"level":"info","message":"Neo4j session closed after 784ms","service":"mindrune-api","timestamp":"2025-03-27 17:26:24"}
{"level":"info","message":"Neo4j insertion completed in 785ms","service":"mindrune-api","timestamp":"2025-03-27 17:26:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 17:26:24"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-27 17:26:24"}
{"level":"info","message":"Total request processing time: 799ms","service":"mindrune-api","timestamp":"2025-03-27 17:26:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:27:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:27:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 17:27:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:27:23"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-27 17:27:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:27:23"}
{"level":"info","message":"Data size: 16411 bytes","service":"mindrune-api","timestamp":"2025-03-27 17:27:23"}
{"level":"info","message":"Event count: 82","service":"mindrune-api","timestamp":"2025-03-27 17:27:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:27:23"}
{"level":"info","message":"Processing 82 events","service":"mindrune-api","timestamp":"2025-03-27 17:27:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 17:27:23"}
{"level":"info","message":"Player node updated in 86ms","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Processing batch of 36 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Completed batch of 36 XP_GAIN events in 92ms","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Processing batch of 23 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":8,\"type\":6,\"typeString\":\"Heal\",\"source\":\"Blood jaguar\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blood jaguar\",\"typeString\":\"Heal\"}","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Processing 23 HIT_SPLAT events: 14 incoming, 9 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"1218ccf0-78b8-47ef-be6a-7c0e467fb7b1_4\",\"timestamp\":\"2025-03-27T21:26:24.943539400Z\",\"damage\":8,\"type\":6,\"typeString\":\"Heal\",\"source\":\"Blood jaguar\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1393,\"locationY\":9628,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Completed batch of 23 HIT_SPLAT events in 210ms","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Processing batch of 23 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Completed batch of 23 MENU_CLICK events in 567ms","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"All events processed in 871ms","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Total Neo4j operation time: 958ms","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Neo4j session closed after 958ms","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Neo4j insertion completed in 960ms","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Total request processing time: 975ms","service":"mindrune-api","timestamp":"2025-03-27 17:27:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:30:23"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:30:23"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 17:30:23"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:30:23"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 17:30:23"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:30:23"}
{"level":"info","message":"Data size: 809 bytes","service":"mindrune-api","timestamp":"2025-03-27 17:30:23"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-27 17:30:23"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 17:30:23"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-27 17:30:23"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 17:30:23"}
{"level":"info","message":"Player node updated in 84ms","service":"mindrune-api","timestamp":"2025-03-27 17:30:23"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-27 17:30:24"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 17:30:24"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 570ms","service":"mindrune-api","timestamp":"2025-03-27 17:30:24"}
{"level":"info","message":"All events processed in 571ms","service":"mindrune-api","timestamp":"2025-03-27 17:30:24"}
{"level":"info","message":"Total Neo4j operation time: 656ms","service":"mindrune-api","timestamp":"2025-03-27 17:30:24"}
{"level":"info","message":"Neo4j session closed after 656ms","service":"mindrune-api","timestamp":"2025-03-27 17:30:24"}
{"level":"info","message":"Neo4j insertion completed in 657ms","service":"mindrune-api","timestamp":"2025-03-27 17:30:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 17:30:24"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-27 17:30:24"}
{"level":"info","message":"Total request processing time: 671ms","service":"mindrune-api","timestamp":"2025-03-27 17:30:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Data size: 10463 bytes","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Event count: 54","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Processing 54 events","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Player node updated in 97ms","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Processing batch of 32 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Completed batch of 32 MENU_CLICK events in 545ms","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 21:37:24"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 465ms","service":"mindrune-api","timestamp":"2025-03-27 21:37:25"}
{"level":"info","message":"Processing batch of 10 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 21:37:25"}
{"level":"info","message":"Completed batch of 10 XP_GAIN events in 133ms","service":"mindrune-api","timestamp":"2025-03-27 21:37:25"}
{"level":"info","message":"Processing batch of 10 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 21:37:25"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Eclipse Moon\",\"damage\":21,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 21:37:25"}
{"level":"info","message":"Processing 10 HIT_SPLAT events: 6 incoming, 4 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 21:37:25"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"4cc46065-824d-48bd-9726-a8eaf3a4ad36_29\",\"timestamp\":\"2025-03-28T01:37:04.589300900Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Eclipse Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1491,\"locationY\":9631,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 21:37:25"}
{"level":"info","message":"Completed batch of 10 HIT_SPLAT events in 339ms","service":"mindrune-api","timestamp":"2025-03-27 21:37:25"}
{"level":"info","message":"All events processed in 1484ms","service":"mindrune-api","timestamp":"2025-03-27 21:37:25"}
{"level":"info","message":"Total Neo4j operation time: 1582ms","service":"mindrune-api","timestamp":"2025-03-27 21:37:25"}
{"level":"info","message":"Neo4j session closed after 1582ms","service":"mindrune-api","timestamp":"2025-03-27 21:37:25"}
{"level":"info","message":"Neo4j insertion completed in 1583ms","service":"mindrune-api","timestamp":"2025-03-27 21:37:25"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 21:37:25"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-27 21:37:25"}
{"level":"info","message":"Total request processing time: 1600ms","service":"mindrune-api","timestamp":"2025-03-27 21:37:25"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Data size: 18566 bytes","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Event count: 92","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Processing 92 events","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Player node updated in 88ms","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Processing batch of 33 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Completed batch of 33 MENU_CLICK events in 677ms","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Processing batch of 26 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Completed batch of 26 XP_GAIN events in 133ms","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Processing batch of 32 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Eclipse Moon\",\"damage\":23,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Processing 32 HIT_SPLAT events: 24 incoming, 8 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"1ae0c0b7-43a1-4d66-b97d-f1df5f8e04fe_21\",\"timestamp\":\"2025-03-28T01:37:44.839805600Z\",\"damage\":2,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Eclipse Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1487,\"locationY\":9629,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 21:38:24"}
{"level":"info","message":"Completed batch of 32 HIT_SPLAT events in 228ms","service":"mindrune-api","timestamp":"2025-03-27 21:38:25"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 21:38:25"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 310ms","service":"mindrune-api","timestamp":"2025-03-27 21:38:25"}
{"level":"info","message":"All events processed in 1349ms","service":"mindrune-api","timestamp":"2025-03-27 21:38:25"}
{"level":"info","message":"Total Neo4j operation time: 1438ms","service":"mindrune-api","timestamp":"2025-03-27 21:38:25"}
{"level":"info","message":"Neo4j session closed after 1438ms","service":"mindrune-api","timestamp":"2025-03-27 21:38:25"}
{"level":"info","message":"Neo4j insertion completed in 1439ms","service":"mindrune-api","timestamp":"2025-03-27 21:38:25"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 21:38:25"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-27 21:38:25"}
{"level":"info","message":"Total request processing time: 1456ms","service":"mindrune-api","timestamp":"2025-03-27 21:38:25"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Data size: 11968 bytes","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Event count: 60","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Processing 60 events","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Player node updated in 86ms","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Processing batch of 26 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Completed batch of 26 MENU_CLICK events in 382ms","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Processing batch of 12 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":126,\"type\":44,\"typeString\":\"Max Damage\",\"source\":\"Max Damage\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Max Damage\",\"typeString\":\"Max Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Processing 12 HIT_SPLAT events: 1 incoming, 11 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"01f89b9d-6387-46ac-9aff-0bdb23ea48ff_1\",\"timestamp\":\"2025-03-28T01:38:25.605889100Z\",\"damage\":126,\"type\":44,\"typeString\":\"Max Damage\",\"source\":\"Max Damage\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1488,\"locationY\":9632,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Completed batch of 12 HIT_SPLAT events in 452ms","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Processing batch of 20 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 21:39:24"}
{"level":"info","message":"Completed batch of 20 XP_GAIN events in 102ms","service":"mindrune-api","timestamp":"2025-03-27 21:39:25"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 21:39:25"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 379ms","service":"mindrune-api","timestamp":"2025-03-27 21:39:25"}
{"level":"info","message":"All events processed in 1319ms","service":"mindrune-api","timestamp":"2025-03-27 21:39:25"}
{"level":"info","message":"Total Neo4j operation time: 1406ms","service":"mindrune-api","timestamp":"2025-03-27 21:39:25"}
{"level":"info","message":"Neo4j session closed after 1406ms","service":"mindrune-api","timestamp":"2025-03-27 21:39:25"}
{"level":"info","message":"Neo4j insertion completed in 1406ms","service":"mindrune-api","timestamp":"2025-03-27 21:39:25"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 21:39:25"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-27 21:39:25"}
{"level":"info","message":"Total request processing time: 1420ms","service":"mindrune-api","timestamp":"2025-03-27 21:39:25"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Data size: 16636 bytes","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Event count: 79","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Processing 79 events","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Player node updated in 117ms","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Processing batch of 24 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Completed batch of 24 MENU_CLICK events in 495ms","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 243ms","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 93ms","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Processing batch of 38 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":19,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Processing 38 HIT_SPLAT events: 20 incoming, 18 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"e36f1690-0a84-4940-997e-265611b98bd4_9\",\"timestamp\":\"2025-03-28T01:39:37.022628900Z\",\"damage\":2,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1442,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 21:40:24"}
{"level":"info","message":"Completed batch of 38 HIT_SPLAT events in 185ms","service":"mindrune-api","timestamp":"2025-03-27 21:40:25"}
{"level":"info","message":"All events processed in 1018ms","service":"mindrune-api","timestamp":"2025-03-27 21:40:25"}
{"level":"info","message":"Total Neo4j operation time: 1135ms","service":"mindrune-api","timestamp":"2025-03-27 21:40:25"}
{"level":"info","message":"Neo4j session closed after 1135ms","service":"mindrune-api","timestamp":"2025-03-27 21:40:25"}
{"level":"info","message":"Neo4j insertion completed in 1136ms","service":"mindrune-api","timestamp":"2025-03-27 21:40:25"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 21:40:25"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-27 21:40:25"}
{"level":"info","message":"Total request processing time: 1153ms","service":"mindrune-api","timestamp":"2025-03-27 21:40:25"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Data size: 13544 bytes","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Event count: 65","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Processing 65 events","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Player node updated in 88ms","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Processing batch of 23 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Completed batch of 23 MENU_CLICK events in 334ms","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Processing batch of 12 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Completed batch of 12 XP_GAIN events in 93ms","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Processing batch of 29 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":6,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Processing 29 HIT_SPLAT events: 14 incoming, 15 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"21bb927f-e277-4522-8b4a-d72e5731174b_10\",\"timestamp\":\"2025-03-28T01:40:35.822222200Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Completed batch of 29 HIT_SPLAT events in 189ms","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 217ms","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"All events processed in 834ms","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Total Neo4j operation time: 922ms","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Neo4j session closed after 923ms","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Neo4j insertion completed in 924ms","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Total request processing time: 938ms","service":"mindrune-api","timestamp":"2025-03-27 21:41:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Data size: 27916 bytes","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Event count: 137","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Processing 137 events","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Player node updated in 86ms","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Processing batch of 27 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Completed batch of 27 MENU_CLICK events in 332ms","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Processing batch of 64 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Completed batch of 64 XP_GAIN events in 96ms","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Processing batch of 45 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blood Moon\",\"damage\":13,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Processing 45 HIT_SPLAT events: 27 incoming, 18 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"7a739806-2ed9-445a-9399-7ac7f69c59dc_11\",\"timestamp\":\"2025-03-28T01:41:36.421400900Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blood Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1393,\"locationY\":9635,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Completed batch of 45 HIT_SPLAT events in 196ms","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 215ms","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"All events processed in 841ms","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Total Neo4j operation time: 929ms","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Neo4j session closed after 929ms","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Neo4j insertion completed in 929ms","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Total request processing time: 944ms","service":"mindrune-api","timestamp":"2025-03-27 21:42:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Data size: 22572 bytes","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Event count: 110","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Processing 110 events","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Processing batch of 22 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Completed batch of 22 MENU_CLICK events in 343ms","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Processing batch of 39 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blood Moon\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Processing 39 HIT_SPLAT events: 23 incoming, 16 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"3469d427-5cbb-4559-8826-3075110d32c0_8\",\"timestamp\":\"2025-03-28T01:42:29.854936500Z\",\"damage\":1,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blood Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1391,\"locationY\":9629,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Completed batch of 39 HIT_SPLAT events in 189ms","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Processing batch of 49 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Completed batch of 49 XP_GAIN events in 97ms","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"All events processed in 629ms","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Total Neo4j operation time: 729ms","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Neo4j session closed after 730ms","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Neo4j insertion completed in 731ms","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Total request processing time: 748ms","service":"mindrune-api","timestamp":"2025-03-27 21:43:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Data size: 2685 bytes","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Event count: 14","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Processing 14 events","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Player node updated in 102ms","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Processing batch of 12 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Completed batch of 12 MENU_CLICK events in 673ms","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Processing batch of 2 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Block\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Block\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Processing 2 HIT_SPLAT events: 2 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"8579478c-e1fd-4995-9b92-61eb497c04e1_3\",\"timestamp\":\"2025-03-28T01:43:29.254657100Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Block\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1352,\"locationY\":9561,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-27 21:44:24"}
{"level":"info","message":"Completed batch of 2 HIT_SPLAT events in 204ms","service":"mindrune-api","timestamp":"2025-03-27 21:44:25"}
{"level":"info","message":"All events processed in 877ms","service":"mindrune-api","timestamp":"2025-03-27 21:44:25"}
{"level":"info","message":"Total Neo4j operation time: 981ms","service":"mindrune-api","timestamp":"2025-03-27 21:44:25"}
{"level":"info","message":"Neo4j session closed after 981ms","service":"mindrune-api","timestamp":"2025-03-27 21:44:25"}
{"level":"info","message":"Neo4j insertion completed in 981ms","service":"mindrune-api","timestamp":"2025-03-27 21:44:25"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 21:44:25"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-27 21:44:25"}
{"level":"info","message":"Total request processing time: 996ms","service":"mindrune-api","timestamp":"2025-03-27 21:44:25"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Data size: 809 bytes","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Player node updated in 89ms","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 642ms","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"All events processed in 643ms","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Total Neo4j operation time: 732ms","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Neo4j session closed after 732ms","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Neo4j insertion completed in 733ms","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Total request processing time: 745ms","service":"mindrune-api","timestamp":"2025-03-27 21:45:24"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Spam protection check completed in 4ms","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Data size: 6368 bytes","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Event count: 32","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Processing 32 events","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Player node updated in 333ms","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Processing batch of 9 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Completed batch of 9 MENU_CLICK events in 501ms","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 133ms","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Processing batch of 7 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":30,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Processing 7 HIT_SPLAT events: 3 incoming, 4 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"68f6c7a5-2e72-4dd8-be8e-bbb12cd747d7_14\",\"timestamp\":\"2025-03-28T19:52:36.812724200Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1511,\"locationY\":9715,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 15:52:46"}
{"level":"info","message":"Completed batch of 7 HIT_SPLAT events in 400ms","service":"mindrune-api","timestamp":"2025-03-28 15:52:47"}
{"level":"info","message":"All events processed in 1034ms","service":"mindrune-api","timestamp":"2025-03-28 15:52:47"}
{"level":"info","message":"Total Neo4j operation time: 1367ms","service":"mindrune-api","timestamp":"2025-03-28 15:52:47"}
{"level":"info","message":"Neo4j session closed after 1367ms","service":"mindrune-api","timestamp":"2025-03-28 15:52:47"}
{"level":"info","message":"Neo4j insertion completed in 1369ms","service":"mindrune-api","timestamp":"2025-03-28 15:52:47"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 15:52:47"}
{"level":"info","message":"SQL insertion completed in 18ms","service":"mindrune-api","timestamp":"2025-03-28 15:52:47"}
{"level":"info","message":"Total request processing time: 1393ms","service":"mindrune-api","timestamp":"2025-03-28 15:52:47"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 15:53:45"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 15:53:45"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 15:53:45"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 15:53:45"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 15:53:45"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 15:53:45"}
{"level":"info","message":"Data size: 511 bytes","service":"mindrune-api","timestamp":"2025-03-28 15:53:45"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-28 15:53:45"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 15:53:45"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-28 15:53:45"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 15:53:45"}
{"level":"info","message":"Player node updated in 102ms","service":"mindrune-api","timestamp":"2025-03-28 15:53:46"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 15:53:46"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-28 15:53:46"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-28 15:53:46"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 167ms","service":"mindrune-api","timestamp":"2025-03-28 15:53:46"}
{"level":"info","message":"All events processed in 167ms","service":"mindrune-api","timestamp":"2025-03-28 15:53:46"}
{"level":"info","message":"Total Neo4j operation time: 270ms","service":"mindrune-api","timestamp":"2025-03-28 15:53:46"}
{"level":"info","message":"Neo4j session closed after 270ms","service":"mindrune-api","timestamp":"2025-03-28 15:53:46"}
{"level":"info","message":"Neo4j insertion completed in 271ms","service":"mindrune-api","timestamp":"2025-03-28 15:53:46"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 15:53:46"}
{"level":"info","message":"SQL insertion completed in 17ms","service":"mindrune-api","timestamp":"2025-03-28 15:53:46"}
{"level":"info","message":"Total request processing time: 290ms","service":"mindrune-api","timestamp":"2025-03-28 15:53:46"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-28 15:58:58"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-28 15:58:59"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Spam protection check completed in 4ms","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Data size: 6116 bytes","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Event count: 29","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Processing 29 events","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Player node updated in 371ms","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Grouped events into 5 types","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 15:59:46"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 565ms","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 97ms","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Processing batch of 7 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":26,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Processing 7 HIT_SPLAT events: 3 incoming, 4 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"d4186ae1-d424-4c2b-a690-d5f69f8f2b85_7\",\"timestamp\":\"2025-03-28T19:59:19.427734400Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Grimy Lizard\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1505,\"locationY\":9716,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Completed batch of 7 HIT_SPLAT events in 327ms","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 164ms","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 352ms","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"All events processed in 1507ms","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Total Neo4j operation time: 1881ms","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Neo4j session closed after 1882ms","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Neo4j insertion completed in 1883ms","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 15:59:47"}
{"level":"info","message":"SQL insertion completed in 49ms","service":"mindrune-api","timestamp":"2025-03-28 15:59:48"}
{"level":"info","message":"Total request processing time: 1937ms","service":"mindrune-api","timestamp":"2025-03-28 15:59:48"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:01:45"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:01:45"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:01:45"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:01:45"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 16:01:45"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"Data size: 451 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 772ms","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"All events processed in 772ms","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"Total Neo4j operation time: 875ms","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"Neo4j session closed after 875ms","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"Neo4j insertion completed in 875ms","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"SQL insertion completed in 38ms","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"Total request processing time: 918ms","service":"mindrune-api","timestamp":"2025-03-28 16:01:46"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:02:45"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:02:45"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:02:45"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:02:45"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 16:02:45"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:02:45"}
{"level":"info","message":"Data size: 4601 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:02:45"}
{"level":"info","message":"Event count: 25","service":"mindrune-api","timestamp":"2025-03-28 16:02:46"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:02:46"}
{"level":"info","message":"Processing 25 events","service":"mindrune-api","timestamp":"2025-03-28 16:02:46"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:02:46"}
{"level":"info","message":"Player node updated in 96ms","service":"mindrune-api","timestamp":"2025-03-28 16:02:46"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 16:02:46"}
{"level":"info","message":"Processing batch of 22 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:02:46"}
{"level":"info","message":"Completed batch of 22 MENU_CLICK events in 415ms","service":"mindrune-api","timestamp":"2025-03-28 16:02:46"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-28 16:02:46"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 452ms","service":"mindrune-api","timestamp":"2025-03-28 16:02:46"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 16:02:46"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 121ms","service":"mindrune-api","timestamp":"2025-03-28 16:02:47"}
{"level":"info","message":"All events processed in 989ms","service":"mindrune-api","timestamp":"2025-03-28 16:02:47"}
{"level":"info","message":"Total Neo4j operation time: 1086ms","service":"mindrune-api","timestamp":"2025-03-28 16:02:47"}
{"level":"info","message":"Neo4j session closed after 1087ms","service":"mindrune-api","timestamp":"2025-03-28 16:02:47"}
{"level":"info","message":"Neo4j insertion completed in 1088ms","service":"mindrune-api","timestamp":"2025-03-28 16:02:47"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:02:47"}
{"level":"info","message":"SQL insertion completed in 21ms","service":"mindrune-api","timestamp":"2025-03-28 16:02:47"}
{"level":"info","message":"Total request processing time: 1113ms","service":"mindrune-api","timestamp":"2025-03-28 16:02:47"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Data size: 22450 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Event count: 107","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Processing 107 events","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Player node updated in 95ms","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Grouped events into 5 types","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Processing batch of 24 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Completed batch of 24 MENU_CLICK events in 666ms","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Processing batch of 38 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Completed batch of 38 XP_GAIN events in 131ms","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Processing batch of 43 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":19,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Processing 43 HIT_SPLAT events: 18 incoming, 25 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"a6662fb0-497c-4da5-8804-adfda6461d78_15\",\"timestamp\":\"2025-03-28T20:02:58.462359100Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 16:03:46"}
{"level":"info","message":"Completed batch of 43 HIT_SPLAT events in 267ms","service":"mindrune-api","timestamp":"2025-03-28 16:03:47"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-28 16:03:47"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 320ms","service":"mindrune-api","timestamp":"2025-03-28 16:03:47"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-28 16:03:47"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-28 16:03:47"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 227ms","service":"mindrune-api","timestamp":"2025-03-28 16:03:47"}
{"level":"info","message":"All events processed in 1615ms","service":"mindrune-api","timestamp":"2025-03-28 16:03:47"}
{"level":"info","message":"Total Neo4j operation time: 1712ms","service":"mindrune-api","timestamp":"2025-03-28 16:03:47"}
{"level":"info","message":"Neo4j session closed after 1712ms","service":"mindrune-api","timestamp":"2025-03-28 16:03:47"}
{"level":"info","message":"Neo4j insertion completed in 1712ms","service":"mindrune-api","timestamp":"2025-03-28 16:03:47"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:03:47"}
{"level":"info","message":"SQL insertion completed in 20ms","service":"mindrune-api","timestamp":"2025-03-28 16:03:47"}
{"level":"info","message":"Total request processing time: 1735ms","service":"mindrune-api","timestamp":"2025-03-28 16:03:47"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:04:45"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:04:45"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:04:45"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:04:45"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 16:04:45"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:04:45"}
{"level":"info","message":"Data size: 10255 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:04:45"}
{"level":"info","message":"Event count: 49","service":"mindrune-api","timestamp":"2025-03-28 16:04:45"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:04:45"}
{"level":"info","message":"Processing 49 events","service":"mindrune-api","timestamp":"2025-03-28 16:04:45"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:04:45"}
{"level":"info","message":"Player node updated in 103ms","service":"mindrune-api","timestamp":"2025-03-28 16:04:46"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-28 16:04:46"}
{"level":"info","message":"Processing batch of 16 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:04:46"}
{"level":"info","message":"Completed batch of 16 MENU_CLICK events in 679ms","service":"mindrune-api","timestamp":"2025-03-28 16:04:46"}
{"level":"info","message":"Processing batch of 10 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 16:04:46"}
{"level":"info","message":"Completed batch of 10 XP_GAIN events in 157ms","service":"mindrune-api","timestamp":"2025-03-28 16:04:46"}
{"level":"info","message":"Processing batch of 22 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 16:04:46"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":20,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 16:04:46"}
{"level":"info","message":"Processing 22 HIT_SPLAT events: 12 incoming, 10 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 16:04:46"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"0c7462e8-7eff-4585-8d89-e74c2479b936_10\",\"timestamp\":\"2025-03-28T20:03:54.843332100Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1442,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 16:04:46"}
{"level":"info","message":"Completed batch of 22 HIT_SPLAT events in 245ms","service":"mindrune-api","timestamp":"2025-03-28 16:04:47"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-28 16:04:47"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 228ms","service":"mindrune-api","timestamp":"2025-03-28 16:04:47"}
{"level":"info","message":"All events processed in 1312ms","service":"mindrune-api","timestamp":"2025-03-28 16:04:47"}
{"level":"info","message":"Total Neo4j operation time: 1415ms","service":"mindrune-api","timestamp":"2025-03-28 16:04:47"}
{"level":"info","message":"Neo4j session closed after 1415ms","service":"mindrune-api","timestamp":"2025-03-28 16:04:47"}
{"level":"info","message":"Neo4j insertion completed in 1415ms","service":"mindrune-api","timestamp":"2025-03-28 16:04:47"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:04:47"}
{"level":"info","message":"SQL insertion completed in 20ms","service":"mindrune-api","timestamp":"2025-03-28 16:04:47"}
{"level":"info","message":"Total request processing time: 1439ms","service":"mindrune-api","timestamp":"2025-03-28 16:04:47"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:05:45"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:05:45"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:05:45"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:05:45"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 16:05:45"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:05:45"}
{"level":"info","message":"Data size: 464 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:05:45"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-28 16:05:46"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:05:46"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-28 16:05:46"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:05:46"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-28 16:05:46"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 16:05:46"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:05:46"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 533ms","service":"mindrune-api","timestamp":"2025-03-28 16:05:46"}
{"level":"info","message":"All events processed in 533ms","service":"mindrune-api","timestamp":"2025-03-28 16:05:46"}
{"level":"info","message":"Total Neo4j operation time: 627ms","service":"mindrune-api","timestamp":"2025-03-28 16:05:46"}
{"level":"info","message":"Neo4j session closed after 628ms","service":"mindrune-api","timestamp":"2025-03-28 16:05:46"}
{"level":"info","message":"Neo4j insertion completed in 629ms","service":"mindrune-api","timestamp":"2025-03-28 16:05:46"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:05:46"}
{"level":"info","message":"SQL insertion completed in 17ms","service":"mindrune-api","timestamp":"2025-03-28 16:05:46"}
{"level":"info","message":"Total request processing time: 649ms","service":"mindrune-api","timestamp":"2025-03-28 16:05:46"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:22:05"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:22:05"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:22:05"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:22:05"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 16:22:05"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:22:05"}
{"level":"info","message":"Data size: 638 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:22:05"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-28 16:22:05"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:22:05"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-28 16:22:05"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:22:05"}
{"level":"info","message":"Player node updated in 128ms","service":"mindrune-api","timestamp":"2025-03-28 16:22:05"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 16:22:05"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:22:05"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 553ms","service":"mindrune-api","timestamp":"2025-03-28 16:22:06"}
{"level":"info","message":"All events processed in 554ms","service":"mindrune-api","timestamp":"2025-03-28 16:22:06"}
{"level":"info","message":"Total Neo4j operation time: 684ms","service":"mindrune-api","timestamp":"2025-03-28 16:22:06"}
{"level":"info","message":"Neo4j session closed after 684ms","service":"mindrune-api","timestamp":"2025-03-28 16:22:06"}
{"level":"info","message":"Neo4j insertion completed in 684ms","service":"mindrune-api","timestamp":"2025-03-28 16:22:06"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:22:06"}
{"level":"info","message":"SQL insertion completed in 42ms","service":"mindrune-api","timestamp":"2025-03-28 16:22:06"}
{"level":"info","message":"Total request processing time: 730ms","service":"mindrune-api","timestamp":"2025-03-28 16:22:06"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:23:05"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:23:05"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:23:05"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:23:05"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 16:23:05"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:23:05"}
{"level":"info","message":"Data size: 14206 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:23:05"}
{"level":"info","message":"Event count: 70","service":"mindrune-api","timestamp":"2025-03-28 16:23:05"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:23:05"}
{"level":"info","message":"Processing 70 events","service":"mindrune-api","timestamp":"2025-03-28 16:23:05"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:23:05"}
{"level":"info","message":"Player node updated in 102ms","service":"mindrune-api","timestamp":"2025-03-28 16:23:05"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-28 16:23:05"}
{"level":"info","message":"Processing batch of 32 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:23:05"}
{"level":"info","message":"Completed batch of 32 MENU_CLICK events in 645ms","service":"mindrune-api","timestamp":"2025-03-28 16:23:06"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-28 16:23:06"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 404ms","service":"mindrune-api","timestamp":"2025-03-28 16:23:06"}
{"level":"info","message":"Processing batch of 9 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 16:23:06"}
{"level":"info","message":"Completed batch of 9 XP_GAIN events in 128ms","service":"mindrune-api","timestamp":"2025-03-28 16:23:06"}
{"level":"info","message":"Processing batch of 26 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 16:23:06"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":6,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 16:23:06"}
{"level":"info","message":"Processing 26 HIT_SPLAT events: 12 incoming, 14 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 16:23:06"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"5ec9ff8b-e521-4cc0-a251-cedd3ef272c4_42\",\"timestamp\":\"2025-03-28T20:22:53.554156100Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1437,\"locationY\":9679,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 16:23:06"}
{"level":"info","message":"Completed batch of 26 HIT_SPLAT events in 243ms","service":"mindrune-api","timestamp":"2025-03-28 16:23:07"}
{"level":"info","message":"All events processed in 1421ms","service":"mindrune-api","timestamp":"2025-03-28 16:23:07"}
{"level":"info","message":"Total Neo4j operation time: 1524ms","service":"mindrune-api","timestamp":"2025-03-28 16:23:07"}
{"level":"info","message":"Neo4j session closed after 1525ms","service":"mindrune-api","timestamp":"2025-03-28 16:23:07"}
{"level":"info","message":"Neo4j insertion completed in 1525ms","service":"mindrune-api","timestamp":"2025-03-28 16:23:07"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:23:07"}
{"level":"info","message":"SQL insertion completed in 42ms","service":"mindrune-api","timestamp":"2025-03-28 16:23:07"}
{"level":"info","message":"Total request processing time: 1569ms","service":"mindrune-api","timestamp":"2025-03-28 16:23:07"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Data size: 22407 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Event count: 107","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Processing 107 events","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Player node updated in 103ms","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Processing batch of 45 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Enraged Blue Moon\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Processing 45 HIT_SPLAT events: 19 incoming, 26 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"e1264469-e144-459d-ada7-32896f46de04_8\",\"timestamp\":\"2025-03-28T20:23:12.155017500Z\",\"damage\":7,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1442,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Completed batch of 45 HIT_SPLAT events in 194ms","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Processing batch of 25 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:24:05"}
{"level":"info","message":"Completed batch of 25 MENU_CLICK events in 784ms","service":"mindrune-api","timestamp":"2025-03-28 16:24:06"}
{"level":"info","message":"Processing batch of 36 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 16:24:06"}
{"level":"info","message":"Completed batch of 36 XP_GAIN events in 99ms","service":"mindrune-api","timestamp":"2025-03-28 16:24:06"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-28 16:24:06"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-28 16:24:06"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 163ms","service":"mindrune-api","timestamp":"2025-03-28 16:24:06"}
{"level":"info","message":"All events processed in 1241ms","service":"mindrune-api","timestamp":"2025-03-28 16:24:06"}
{"level":"info","message":"Total Neo4j operation time: 1345ms","service":"mindrune-api","timestamp":"2025-03-28 16:24:06"}
{"level":"info","message":"Neo4j session closed after 1345ms","service":"mindrune-api","timestamp":"2025-03-28 16:24:06"}
{"level":"info","message":"Neo4j insertion completed in 1346ms","service":"mindrune-api","timestamp":"2025-03-28 16:24:06"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:24:06"}
{"level":"info","message":"SQL insertion completed in 118ms","service":"mindrune-api","timestamp":"2025-03-28 16:24:07"}
{"level":"info","message":"Total request processing time: 1466ms","service":"mindrune-api","timestamp":"2025-03-28 16:24:07"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:25:05"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:25:05"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:25:05"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:25:05"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 16:25:05"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:25:05"}
{"level":"info","message":"Data size: 10122 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:25:05"}
{"level":"info","message":"Event count: 49","service":"mindrune-api","timestamp":"2025-03-28 16:25:05"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:25:05"}
{"level":"info","message":"Processing 49 events","service":"mindrune-api","timestamp":"2025-03-28 16:25:05"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:25:05"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-28 16:25:05"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 16:25:05"}
{"level":"info","message":"Processing batch of 20 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:25:05"}
{"level":"info","message":"Completed batch of 20 MENU_CLICK events in 353ms","service":"mindrune-api","timestamp":"2025-03-28 16:25:06"}
{"level":"info","message":"Processing batch of 21 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 16:25:06"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-28 16:25:06"}
{"level":"info","message":"Processing 21 HIT_SPLAT events: 12 incoming, 9 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 16:25:06"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"9f2cd460-d4ec-4527-99eb-d195e62555b0_15\",\"timestamp\":\"2025-03-28T20:24:41.554491800Z\",\"damage\":3,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 16:25:06"}
{"level":"info","message":"Completed batch of 21 HIT_SPLAT events in 230ms","service":"mindrune-api","timestamp":"2025-03-28 16:25:06"}
{"level":"info","message":"Processing batch of 8 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 16:25:06"}
{"level":"info","message":"Completed batch of 8 XP_GAIN events in 135ms","service":"mindrune-api","timestamp":"2025-03-28 16:25:06"}
{"level":"info","message":"All events processed in 720ms","service":"mindrune-api","timestamp":"2025-03-28 16:25:06"}
{"level":"info","message":"Total Neo4j operation time: 814ms","service":"mindrune-api","timestamp":"2025-03-28 16:25:06"}
{"level":"info","message":"Neo4j session closed after 814ms","service":"mindrune-api","timestamp":"2025-03-28 16:25:06"}
{"level":"info","message":"Neo4j insertion completed in 814ms","service":"mindrune-api","timestamp":"2025-03-28 16:25:06"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:25:06"}
{"level":"info","message":"SQL insertion completed in 67ms","service":"mindrune-api","timestamp":"2025-03-28 16:25:06"}
{"level":"info","message":"Total request processing time: 884ms","service":"mindrune-api","timestamp":"2025-03-28 16:25:06"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:26:05"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:26:05"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:26:05"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:26:05"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 16:26:05"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:26:05"}
{"level":"info","message":"Data size: 457 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:26:05"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-28 16:26:05"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:26:05"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-28 16:26:05"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:26:05"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-28 16:26:05"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 16:26:05"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:26:05"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 542ms","service":"mindrune-api","timestamp":"2025-03-28 16:26:06"}
{"level":"info","message":"All events processed in 543ms","service":"mindrune-api","timestamp":"2025-03-28 16:26:06"}
{"level":"info","message":"Total Neo4j operation time: 637ms","service":"mindrune-api","timestamp":"2025-03-28 16:26:06"}
{"level":"info","message":"Neo4j session closed after 637ms","service":"mindrune-api","timestamp":"2025-03-28 16:26:06"}
{"level":"info","message":"Neo4j insertion completed in 637ms","service":"mindrune-api","timestamp":"2025-03-28 16:26:06"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:26:06"}
{"level":"info","message":"SQL insertion completed in 94ms","service":"mindrune-api","timestamp":"2025-03-28 16:26:06"}
{"level":"info","message":"Total request processing time: 732ms","service":"mindrune-api","timestamp":"2025-03-28 16:26:06"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:27:05"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:27:05"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:27:05"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:27:05"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 16:27:05"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:27:05"}
{"level":"info","message":"Data size: 635 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:27:05"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-28 16:27:05"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:27:05"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-28 16:27:05"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:27:05"}
{"level":"info","message":"Player node updated in 103ms","service":"mindrune-api","timestamp":"2025-03-28 16:27:05"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 16:27:05"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:27:05"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 816ms","service":"mindrune-api","timestamp":"2025-03-28 16:27:06"}
{"level":"info","message":"All events processed in 816ms","service":"mindrune-api","timestamp":"2025-03-28 16:27:06"}
{"level":"info","message":"Total Neo4j operation time: 921ms","service":"mindrune-api","timestamp":"2025-03-28 16:27:06"}
{"level":"info","message":"Neo4j session closed after 921ms","service":"mindrune-api","timestamp":"2025-03-28 16:27:06"}
{"level":"info","message":"Neo4j insertion completed in 922ms","service":"mindrune-api","timestamp":"2025-03-28 16:27:06"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:27:06"}
{"level":"info","message":"SQL insertion completed in 38ms","service":"mindrune-api","timestamp":"2025-03-28 16:27:06"}
{"level":"info","message":"Total request processing time: 962ms","service":"mindrune-api","timestamp":"2025-03-28 16:27:06"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Data size: 3289 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Event count: 18","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Processing 18 events","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Player node updated in 127ms","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Processing batch of 16 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Completed batch of 16 MENU_CLICK events in 414ms","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Processing batch of 2 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Completed batch of 2 XP_GAIN events in 198ms","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"All events processed in 613ms","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Total Neo4j operation time: 740ms","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Neo4j session closed after 740ms","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Neo4j insertion completed in 741ms","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"SQL insertion completed in 23ms","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Total request processing time: 768ms","service":"mindrune-api","timestamp":"2025-03-28 16:41:35"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Data size: 16349 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Event count: 77","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Processing 77 events","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Player node updated in 102ms","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Processing batch of 19 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Completed batch of 19 MENU_CLICK events in 671ms","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Processing batch of 40 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Processing 40 HIT_SPLAT events: 18 incoming, 22 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"c34c2d2b-26f1-4028-b0bf-868a8c97f7d8_19\",\"timestamp\":\"2025-03-28T20:42:10.098739300Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 16:42:35"}
{"level":"info","message":"Completed batch of 40 HIT_SPLAT events in 222ms","service":"mindrune-api","timestamp":"2025-03-28 16:42:36"}
{"level":"info","message":"Processing batch of 18 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 16:42:36"}
{"level":"info","message":"Completed batch of 18 XP_GAIN events in 96ms","service":"mindrune-api","timestamp":"2025-03-28 16:42:36"}
{"level":"info","message":"All events processed in 990ms","service":"mindrune-api","timestamp":"2025-03-28 16:42:36"}
{"level":"info","message":"Total Neo4j operation time: 1094ms","service":"mindrune-api","timestamp":"2025-03-28 16:42:36"}
{"level":"info","message":"Neo4j session closed after 1095ms","service":"mindrune-api","timestamp":"2025-03-28 16:42:36"}
{"level":"info","message":"Neo4j insertion completed in 1095ms","service":"mindrune-api","timestamp":"2025-03-28 16:42:36"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:42:36"}
{"level":"info","message":"SQL insertion completed in 19ms","service":"mindrune-api","timestamp":"2025-03-28 16:42:36"}
{"level":"info","message":"Total request processing time: 1117ms","service":"mindrune-api","timestamp":"2025-03-28 16:42:36"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Data size: 16995 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Event count: 82","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Processing 82 events","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Player node updated in 102ms","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Processing batch of 28 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Completed batch of 28 MENU_CLICK events in 722ms","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Processing batch of 24 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 16:43:35"}
{"level":"info","message":"Completed batch of 24 XP_GAIN events in 98ms","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"Processing batch of 29 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Frozen weapons</col>\",\"damage\":10,\"type\":43,\"typeString\":\"Max Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Max Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"Processing 29 HIT_SPLAT events: 12 incoming, 17 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"7c282734-e514-48e6-b0e9-89b800809836_45\",\"timestamp\":\"2025-03-28T20:43:06.464978200Z\",\"damage\":2,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1442,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"Completed batch of 29 HIT_SPLAT events in 196ms","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 168ms","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"All events processed in 1186ms","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"Total Neo4j operation time: 1290ms","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"Neo4j session closed after 1290ms","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"Neo4j insertion completed in 1290ms","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"SQL insertion completed in 35ms","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"Total request processing time: 1329ms","service":"mindrune-api","timestamp":"2025-03-28 16:43:36"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Data size: 1305 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Event count: 7","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Processing 7 events","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Processing batch of 7 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Completed batch of 7 MENU_CLICK events in 550ms","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"All events processed in 550ms","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Total Neo4j operation time: 645ms","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Neo4j session closed after 646ms","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Neo4j insertion completed in 646ms","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"SQL insertion completed in 22ms","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Total request processing time: 670ms","service":"mindrune-api","timestamp":"2025-03-28 16:44:35"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:45:35"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:45:35"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:45:35"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:45:35"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 16:45:35"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:45:35"}
{"level":"info","message":"Data size: 467 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:45:35"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-28 16:45:35"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:45:35"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-28 16:45:35"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:45:35"}
{"level":"info","message":"Player node updated in 105ms","service":"mindrune-api","timestamp":"2025-03-28 16:45:35"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 16:45:35"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:45:35"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 751ms","service":"mindrune-api","timestamp":"2025-03-28 16:45:36"}
{"level":"info","message":"All events processed in 751ms","service":"mindrune-api","timestamp":"2025-03-28 16:45:36"}
{"level":"info","message":"Total Neo4j operation time: 857ms","service":"mindrune-api","timestamp":"2025-03-28 16:45:36"}
{"level":"info","message":"Neo4j session closed after 857ms","service":"mindrune-api","timestamp":"2025-03-28 16:45:36"}
{"level":"info","message":"Neo4j insertion completed in 858ms","service":"mindrune-api","timestamp":"2025-03-28 16:45:36"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:45:36"}
{"level":"info","message":"SQL insertion completed in 28ms","service":"mindrune-api","timestamp":"2025-03-28 16:45:36"}
{"level":"info","message":"Total request processing time: 888ms","service":"mindrune-api","timestamp":"2025-03-28 16:45:36"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:53:08"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:53:08"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:53:08"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:53:08"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 16:53:08"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:53:08"}
{"level":"info","message":"Data size: 806 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:53:08"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-28 16:53:08"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:53:08"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-28 16:53:08"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:53:08"}
{"level":"info","message":"Player node updated in 174ms","service":"mindrune-api","timestamp":"2025-03-28 16:53:08"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 16:53:08"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:53:08"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 810ms","service":"mindrune-api","timestamp":"2025-03-28 16:53:09"}
{"level":"info","message":"All events processed in 811ms","service":"mindrune-api","timestamp":"2025-03-28 16:53:09"}
{"level":"info","message":"Total Neo4j operation time: 987ms","service":"mindrune-api","timestamp":"2025-03-28 16:53:09"}
{"level":"info","message":"Neo4j session closed after 987ms","service":"mindrune-api","timestamp":"2025-03-28 16:53:09"}
{"level":"info","message":"Neo4j insertion completed in 987ms","service":"mindrune-api","timestamp":"2025-03-28 16:53:09"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:53:09"}
{"level":"info","message":"SQL insertion completed in 19ms","service":"mindrune-api","timestamp":"2025-03-28 16:53:09"}
{"level":"info","message":"Total request processing time: 1009ms","service":"mindrune-api","timestamp":"2025-03-28 16:53:09"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Data size: 3475 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Event count: 19","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Processing 19 events","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Processing batch of 18 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Completed batch of 18 MENU_CLICK events in 416ms","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-28 16:54:08"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 329ms","service":"mindrune-api","timestamp":"2025-03-28 16:54:09"}
{"level":"info","message":"All events processed in 745ms","service":"mindrune-api","timestamp":"2025-03-28 16:54:09"}
{"level":"info","message":"Total Neo4j operation time: 840ms","service":"mindrune-api","timestamp":"2025-03-28 16:54:09"}
{"level":"info","message":"Neo4j session closed after 840ms","service":"mindrune-api","timestamp":"2025-03-28 16:54:09"}
{"level":"info","message":"Neo4j insertion completed in 841ms","service":"mindrune-api","timestamp":"2025-03-28 16:54:09"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:54:09"}
{"level":"info","message":"SQL insertion completed in 20ms","service":"mindrune-api","timestamp":"2025-03-28 16:54:09"}
{"level":"info","message":"Total request processing time: 863ms","service":"mindrune-api","timestamp":"2025-03-28 16:54:09"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:55:08"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:55:08"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:55:08"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:55:08"}
{"level":"info","message":"Spam protection check completed in 0ms","service":"mindrune-api","timestamp":"2025-03-28 16:55:08"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:55:08"}
{"level":"info","message":"Data size: 20991 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:55:08"}
{"level":"info","message":"Event count: 100","service":"mindrune-api","timestamp":"2025-03-28 16:55:08"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:55:08"}
{"level":"info","message":"Processing 100 events","service":"mindrune-api","timestamp":"2025-03-28 16:55:08"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:55:08"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-28 16:55:08"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-28 16:55:08"}
{"level":"info","message":"Processing batch of 24 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:55:08"}
{"level":"info","message":"Completed batch of 24 MENU_CLICK events in 678ms","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Processing batch of 32 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Completed batch of 32 XP_GAIN events in 128ms","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Processing batch of 43 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":20,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Processing 43 HIT_SPLAT events: 19 incoming, 24 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"1411ed5a-13d3-4f98-9f00-bc39bf8c30d7_4\",\"timestamp\":\"2025-03-28T20:54:21.178213800Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Completed batch of 43 HIT_SPLAT events in 196ms","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 167ms","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"All events processed in 1171ms","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Total Neo4j operation time: 1274ms","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Neo4j session closed after 1275ms","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Neo4j insertion completed in 1275ms","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"SQL insertion completed in 19ms","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Total request processing time: 1296ms","service":"mindrune-api","timestamp":"2025-03-28 16:55:09"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:56:08"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:56:08"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:56:08"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:56:08"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 16:56:08"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:56:08"}
{"level":"info","message":"Data size: 12665 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:56:08"}
{"level":"info","message":"Event count: 61","service":"mindrune-api","timestamp":"2025-03-28 16:56:08"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:56:08"}
{"level":"info","message":"Processing 61 events","service":"mindrune-api","timestamp":"2025-03-28 16:56:08"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:56:08"}
{"level":"info","message":"Player node updated in 103ms","service":"mindrune-api","timestamp":"2025-03-28 16:56:08"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-28 16:56:08"}
{"level":"info","message":"Processing batch of 21 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:56:08"}
{"level":"info","message":"Completed batch of 21 MENU_CLICK events in 661ms","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"Processing batch of 12 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"Completed batch of 12 XP_GAIN events in 129ms","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"Processing batch of 27 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":10,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"Processing 27 HIT_SPLAT events: 17 incoming, 10 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"80bbb46f-7833-441e-ad47-4cab80fd80ea_8\",\"timestamp\":\"2025-03-28T20:55:17.578837200Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1442,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"Completed batch of 27 HIT_SPLAT events in 244ms","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 349ms","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"All events processed in 1385ms","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"Total Neo4j operation time: 1488ms","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"Neo4j session closed after 1488ms","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"Neo4j insertion completed in 1489ms","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"SQL insertion completed in 20ms","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"Total request processing time: 1512ms","service":"mindrune-api","timestamp":"2025-03-28 16:56:09"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:57:08"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:57:08"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 16:57:08"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:57:08"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 16:57:08"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:57:08"}
{"level":"info","message":"Data size: 464 bytes","service":"mindrune-api","timestamp":"2025-03-28 16:57:08"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-28 16:57:08"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 16:57:08"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-28 16:57:08"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 16:57:08"}
{"level":"info","message":"Player node updated in 107ms","service":"mindrune-api","timestamp":"2025-03-28 16:57:08"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 16:57:08"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 16:57:08"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 750ms","service":"mindrune-api","timestamp":"2025-03-28 16:57:09"}
{"level":"info","message":"All events processed in 751ms","service":"mindrune-api","timestamp":"2025-03-28 16:57:09"}
{"level":"info","message":"Total Neo4j operation time: 859ms","service":"mindrune-api","timestamp":"2025-03-28 16:57:09"}
{"level":"info","message":"Neo4j session closed after 859ms","service":"mindrune-api","timestamp":"2025-03-28 16:57:09"}
{"level":"info","message":"Neo4j insertion completed in 861ms","service":"mindrune-api","timestamp":"2025-03-28 16:57:09"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 16:57:09"}
{"level":"info","message":"SQL insertion completed in 19ms","service":"mindrune-api","timestamp":"2025-03-28 16:57:09"}
{"level":"info","message":"Total request processing time: 883ms","service":"mindrune-api","timestamp":"2025-03-28 16:57:09"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:39:59"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:39:59"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 17:39:59"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:39:59"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-28 17:39:59"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:39:59"}
{"level":"info","message":"Data size: 6778 bytes","service":"mindrune-api","timestamp":"2025-03-28 17:39:59"}
{"level":"info","message":"Event count: 36","service":"mindrune-api","timestamp":"2025-03-28 17:39:59"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:39:59"}
{"level":"info","message":"Processing 36 events","service":"mindrune-api","timestamp":"2025-03-28 17:39:59"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 17:39:59"}
{"level":"info","message":"Player node updated in 338ms","service":"mindrune-api","timestamp":"2025-03-28 17:40:00"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 17:40:00"}
{"level":"info","message":"Processing batch of 27 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 17:40:00"}
{"level":"info","message":"Completed batch of 27 MENU_CLICK events in 672ms","service":"mindrune-api","timestamp":"2025-03-28 17:40:00"}
{"level":"info","message":"Processing batch of 5 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-28 17:40:00"}
{"level":"info","message":"Completed batch of 5 INVENTORY_CHANGE events in 339ms","service":"mindrune-api","timestamp":"2025-03-28 17:40:01"}
{"level":"info","message":"Processing batch of 4 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 17:40:01"}
{"level":"info","message":"Completed batch of 4 XP_GAIN events in 204ms","service":"mindrune-api","timestamp":"2025-03-28 17:40:01"}
{"level":"info","message":"All events processed in 1216ms","service":"mindrune-api","timestamp":"2025-03-28 17:40:01"}
{"level":"info","message":"Total Neo4j operation time: 1555ms","service":"mindrune-api","timestamp":"2025-03-28 17:40:01"}
{"level":"info","message":"Neo4j session closed after 1556ms","service":"mindrune-api","timestamp":"2025-03-28 17:40:01"}
{"level":"info","message":"Neo4j insertion completed in 1557ms","service":"mindrune-api","timestamp":"2025-03-28 17:40:01"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 17:40:01"}
{"level":"info","message":"SQL insertion completed in 20ms","service":"mindrune-api","timestamp":"2025-03-28 17:40:01"}
{"level":"info","message":"Total request processing time: 1581ms","service":"mindrune-api","timestamp":"2025-03-28 17:40:01"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:40:59"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:40:59"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 17:40:59"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:40:59"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 17:40:59"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:40:59"}
{"level":"info","message":"Data size: 19567 bytes","service":"mindrune-api","timestamp":"2025-03-28 17:40:59"}
{"level":"info","message":"Event count: 94","service":"mindrune-api","timestamp":"2025-03-28 17:40:59"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:40:59"}
{"level":"info","message":"Processing 94 events","service":"mindrune-api","timestamp":"2025-03-28 17:40:59"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 17:40:59"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-28 17:40:59"}
{"level":"info","message":"Grouped events into 5 types","service":"mindrune-api","timestamp":"2025-03-28 17:40:59"}
{"level":"info","message":"Processing batch of 28 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 17:40:59"}
{"level":"info","message":"Completed batch of 28 MENU_CLICK events in 670ms","service":"mindrune-api","timestamp":"2025-03-28 17:41:00"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-28 17:41:00"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 337ms","service":"mindrune-api","timestamp":"2025-03-28 17:41:00"}
{"level":"info","message":"Processing batch of 24 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 17:41:00"}
{"level":"info","message":"Completed batch of 24 XP_GAIN events in 96ms","service":"mindrune-api","timestamp":"2025-03-28 17:41:00"}
{"level":"info","message":"Processing batch of 40 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 17:41:00"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Cracked ice</col>\",\"damage\":10,\"type\":43,\"typeString\":\"Max Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Max Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 17:41:00"}
{"level":"info","message":"Processing 40 HIT_SPLAT events: 19 incoming, 21 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 17:41:00"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"38162c39-8eca-4ebf-b9b6-9d5333093eda_28\",\"timestamp\":\"2025-03-28T21:40:28.699589100Z\",\"damage\":1,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1442,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 17:41:00"}
{"level":"info","message":"Completed batch of 40 HIT_SPLAT events in 219ms","service":"mindrune-api","timestamp":"2025-03-28 17:41:01"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-28 17:41:01"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-28 17:41:01"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 227ms","service":"mindrune-api","timestamp":"2025-03-28 17:41:01"}
{"level":"info","message":"All events processed in 1552ms","service":"mindrune-api","timestamp":"2025-03-28 17:41:01"}
{"level":"info","message":"Total Neo4j operation time: 1655ms","service":"mindrune-api","timestamp":"2025-03-28 17:41:01"}
{"level":"info","message":"Neo4j session closed after 1655ms","service":"mindrune-api","timestamp":"2025-03-28 17:41:01"}
{"level":"info","message":"Neo4j insertion completed in 1655ms","service":"mindrune-api","timestamp":"2025-03-28 17:41:01"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 17:41:01"}
{"level":"info","message":"SQL insertion completed in 23ms","service":"mindrune-api","timestamp":"2025-03-28 17:41:01"}
{"level":"info","message":"Total request processing time: 1680ms","service":"mindrune-api","timestamp":"2025-03-28 17:41:01"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:41:59"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:41:59"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 17:41:59"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:41:59"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 17:41:59"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:41:59"}
{"level":"info","message":"Data size: 10392 bytes","service":"mindrune-api","timestamp":"2025-03-28 17:41:59"}
{"level":"info","message":"Event count: 50","service":"mindrune-api","timestamp":"2025-03-28 17:41:59"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:41:59"}
{"level":"info","message":"Processing 50 events","service":"mindrune-api","timestamp":"2025-03-28 17:41:59"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 17:41:59"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-28 17:41:59"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 17:41:59"}
{"level":"info","message":"Processing batch of 18 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 17:41:59"}
{"level":"info","message":"Completed batch of 18 MENU_CLICK events in 390ms","service":"mindrune-api","timestamp":"2025-03-28 17:42:00"}
{"level":"info","message":"Processing batch of 22 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 17:42:00"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":8,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Damage\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 17:42:00"}
{"level":"info","message":"Processing 22 HIT_SPLAT events: 11 incoming, 11 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 17:42:00"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"6def7128-3200-48e3-811d-bbf9bae1cd81_2\",\"timestamp\":\"2025-03-28T21:41:05.301997500Z\",\"damage\":8,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1452,\"locationY\":9679,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 17:42:00"}
{"level":"info","message":"Completed batch of 22 HIT_SPLAT events in 193ms","service":"mindrune-api","timestamp":"2025-03-28 17:42:00"}
{"level":"info","message":"Processing batch of 10 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 17:42:00"}
{"level":"info","message":"Completed batch of 10 XP_GAIN events in 124ms","service":"mindrune-api","timestamp":"2025-03-28 17:42:00"}
{"level":"info","message":"All events processed in 709ms","service":"mindrune-api","timestamp":"2025-03-28 17:42:00"}
{"level":"info","message":"Total Neo4j operation time: 802ms","service":"mindrune-api","timestamp":"2025-03-28 17:42:00"}
{"level":"info","message":"Neo4j session closed after 802ms","service":"mindrune-api","timestamp":"2025-03-28 17:42:00"}
{"level":"info","message":"Neo4j insertion completed in 803ms","service":"mindrune-api","timestamp":"2025-03-28 17:42:00"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 17:42:00"}
{"level":"info","message":"SQL insertion completed in 20ms","service":"mindrune-api","timestamp":"2025-03-28 17:42:00"}
{"level":"info","message":"Total request processing time: 826ms","service":"mindrune-api","timestamp":"2025-03-28 17:42:00"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:42:59"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:42:59"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 17:42:59"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:42:59"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 17:42:59"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:42:59"}
{"level":"info","message":"Data size: 638 bytes","service":"mindrune-api","timestamp":"2025-03-28 17:42:59"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-28 17:42:59"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:42:59"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-28 17:42:59"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 17:42:59"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-28 17:42:59"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 17:42:59"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 17:42:59"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 554ms","service":"mindrune-api","timestamp":"2025-03-28 17:43:00"}
{"level":"info","message":"All events processed in 554ms","service":"mindrune-api","timestamp":"2025-03-28 17:43:00"}
{"level":"info","message":"Total Neo4j operation time: 656ms","service":"mindrune-api","timestamp":"2025-03-28 17:43:00"}
{"level":"info","message":"Neo4j session closed after 656ms","service":"mindrune-api","timestamp":"2025-03-28 17:43:00"}
{"level":"info","message":"Neo4j insertion completed in 657ms","service":"mindrune-api","timestamp":"2025-03-28 17:43:00"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 17:43:00"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-28 17:43:00"}
{"level":"info","message":"Total request processing time: 675ms","service":"mindrune-api","timestamp":"2025-03-28 17:43:00"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:48:18"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:48:18"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 17:48:18"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:48:18"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 17:48:18"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:48:18"}
{"level":"info","message":"Data size: 977 bytes","service":"mindrune-api","timestamp":"2025-03-28 17:48:18"}
{"level":"info","message":"Event count: 5","service":"mindrune-api","timestamp":"2025-03-28 17:48:18"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:48:18"}
{"level":"info","message":"Processing 5 events","service":"mindrune-api","timestamp":"2025-03-28 17:48:18"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 17:48:18"}
{"level":"info","message":"Player node updated in 137ms","service":"mindrune-api","timestamp":"2025-03-28 17:48:19"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 17:48:19"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 17:48:19"}
{"level":"info","message":"Completed batch of 5 MENU_CLICK events in 806ms","service":"mindrune-api","timestamp":"2025-03-28 17:48:19"}
{"level":"info","message":"All events processed in 807ms","service":"mindrune-api","timestamp":"2025-03-28 17:48:19"}
{"level":"info","message":"Total Neo4j operation time: 945ms","service":"mindrune-api","timestamp":"2025-03-28 17:48:19"}
{"level":"info","message":"Neo4j session closed after 945ms","service":"mindrune-api","timestamp":"2025-03-28 17:48:19"}
{"level":"info","message":"Neo4j insertion completed in 947ms","service":"mindrune-api","timestamp":"2025-03-28 17:48:19"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 17:48:19"}
{"level":"info","message":"SQL insertion completed in 21ms","service":"mindrune-api","timestamp":"2025-03-28 17:48:19"}
{"level":"info","message":"Total request processing time: 970ms","service":"mindrune-api","timestamp":"2025-03-28 17:48:19"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:49:18"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:49:18"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 17:49:18"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:49:18"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 17:49:18"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:49:18"}
{"level":"info","message":"Data size: 15242 bytes","service":"mindrune-api","timestamp":"2025-03-28 17:49:18"}
{"level":"info","message":"Event count: 74","service":"mindrune-api","timestamp":"2025-03-28 17:49:18"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:49:18"}
{"level":"info","message":"Processing 74 events","service":"mindrune-api","timestamp":"2025-03-28 17:49:18"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 17:49:18"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Processing batch of 29 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Completed batch of 29 MENU_CLICK events in 404ms","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 198ms","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Processing batch of 29 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Frozen weapons</col>\",\"damage\":10,\"type\":43,\"typeString\":\"Max Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Max Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Processing 29 HIT_SPLAT events: 15 incoming, 14 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"86db1e5f-056f-4513-845d-4c43454078a6_25\",\"timestamp\":\"2025-03-28T21:48:58.781443800Z\",\"damage\":23,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1436,\"locationY\":9681,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Completed batch of 29 HIT_SPLAT events in 267ms","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"All events processed in 870ms","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Total Neo4j operation time: 963ms","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Neo4j session closed after 964ms","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Neo4j insertion completed in 965ms","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"SQL insertion completed in 21ms","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Total request processing time: 987ms","service":"mindrune-api","timestamp":"2025-03-28 17:49:19"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:50:18"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:50:18"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 17:50:18"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:50:18"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 17:50:18"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:50:18"}
{"level":"info","message":"Data size: 17221 bytes","service":"mindrune-api","timestamp":"2025-03-28 17:50:18"}
{"level":"info","message":"Event count: 83","service":"mindrune-api","timestamp":"2025-03-28 17:50:18"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:50:18"}
{"level":"info","message":"Processing 83 events","service":"mindrune-api","timestamp":"2025-03-28 17:50:18"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 17:50:19"}
{"level":"info","message":"Player node updated in 105ms","service":"mindrune-api","timestamp":"2025-03-28 17:50:19"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 17:50:19"}
{"level":"info","message":"Processing batch of 38 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 17:50:19"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blue Moon\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-28 17:50:19"}
{"level":"info","message":"Processing 38 HIT_SPLAT events: 20 incoming, 18 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 17:50:19"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"cadf9951-ce4e-46bf-8818-b453ae46908c_0\",\"timestamp\":\"2025-03-28T21:49:19.180785900Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1443,\"locationY\":9679,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 17:50:19"}
{"level":"info","message":"Completed batch of 38 HIT_SPLAT events in 195ms","service":"mindrune-api","timestamp":"2025-03-28 17:50:19"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 17:50:19"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 127ms","service":"mindrune-api","timestamp":"2025-03-28 17:50:19"}
{"level":"info","message":"Processing batch of 29 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 17:50:19"}
{"level":"info","message":"Completed batch of 29 MENU_CLICK events in 697ms","service":"mindrune-api","timestamp":"2025-03-28 17:50:20"}
{"level":"info","message":"All events processed in 1021ms","service":"mindrune-api","timestamp":"2025-03-28 17:50:20"}
{"level":"info","message":"Total Neo4j operation time: 1128ms","service":"mindrune-api","timestamp":"2025-03-28 17:50:20"}
{"level":"info","message":"Neo4j session closed after 1128ms","service":"mindrune-api","timestamp":"2025-03-28 17:50:20"}
{"level":"info","message":"Neo4j insertion completed in 1129ms","service":"mindrune-api","timestamp":"2025-03-28 17:50:20"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 17:50:20"}
{"level":"info","message":"SQL insertion completed in 21ms","service":"mindrune-api","timestamp":"2025-03-28 17:50:20"}
{"level":"info","message":"Total request processing time: 1152ms","service":"mindrune-api","timestamp":"2025-03-28 17:50:20"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:51:18"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:51:18"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 17:51:18"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:51:18"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 17:51:18"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:51:18"}
{"level":"info","message":"Data size: 2477 bytes","service":"mindrune-api","timestamp":"2025-03-28 17:51:18"}
{"level":"info","message":"Event count: 13","service":"mindrune-api","timestamp":"2025-03-28 17:51:18"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:51:18"}
{"level":"info","message":"Processing 13 events","service":"mindrune-api","timestamp":"2025-03-28 17:51:18"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 17:51:18"}
{"level":"info","message":"Player node updated in 103ms","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"Processing batch of 11 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"Completed batch of 11 MENU_CLICK events in 666ms","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"Processing batch of 2 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Block\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Block\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"Processing 2 HIT_SPLAT events: 2 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"81abe4f6-50dd-4837-a7d6-cebac13ad6bb_3\",\"timestamp\":\"2025-03-28T21:50:23.380228200Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Block\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1353,\"locationY\":9575,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"Completed batch of 2 HIT_SPLAT events in 209ms","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"All events processed in 875ms","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"Total Neo4j operation time: 980ms","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"Neo4j session closed after 981ms","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"Neo4j insertion completed in 981ms","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"SQL insertion completed in 19ms","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"Total request processing time: 1002ms","service":"mindrune-api","timestamp":"2025-03-28 17:51:19"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:52:18"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:52:18"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 17:52:18"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:52:18"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 17:52:18"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:52:18"}
{"level":"info","message":"Data size: 467 bytes","service":"mindrune-api","timestamp":"2025-03-28 17:52:18"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-28 17:52:18"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 17:52:18"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-28 17:52:18"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 17:52:18"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-28 17:52:19"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 17:52:19"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 17:52:19"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 516ms","service":"mindrune-api","timestamp":"2025-03-28 17:52:19"}
{"level":"info","message":"All events processed in 516ms","service":"mindrune-api","timestamp":"2025-03-28 17:52:19"}
{"level":"info","message":"Total Neo4j operation time: 611ms","service":"mindrune-api","timestamp":"2025-03-28 17:52:19"}
{"level":"info","message":"Neo4j session closed after 612ms","service":"mindrune-api","timestamp":"2025-03-28 17:52:19"}
{"level":"info","message":"Neo4j insertion completed in 613ms","service":"mindrune-api","timestamp":"2025-03-28 17:52:19"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 17:52:19"}
{"level":"info","message":"SQL insertion completed in 20ms","service":"mindrune-api","timestamp":"2025-03-28 17:52:19"}
{"level":"info","message":"Total request processing time: 636ms","service":"mindrune-api","timestamp":"2025-03-28 17:52:19"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:52:33"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:52:33"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 20:52:33"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:52:33"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 20:52:33"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:52:33"}
{"level":"info","message":"Data size: 452 bytes","service":"mindrune-api","timestamp":"2025-03-28 20:52:33"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-28 20:52:33"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:52:33"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-28 20:52:33"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 20:52:33"}
{"level":"info","message":"Player node updated in 369ms","service":"mindrune-api","timestamp":"2025-03-28 20:52:34"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 20:52:34"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 20:52:34"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 499ms","service":"mindrune-api","timestamp":"2025-03-28 20:52:34"}
{"level":"info","message":"All events processed in 499ms","service":"mindrune-api","timestamp":"2025-03-28 20:52:34"}
{"level":"info","message":"Total Neo4j operation time: 868ms","service":"mindrune-api","timestamp":"2025-03-28 20:52:34"}
{"level":"info","message":"Neo4j session closed after 868ms","service":"mindrune-api","timestamp":"2025-03-28 20:52:34"}
{"level":"info","message":"Neo4j insertion completed in 870ms","service":"mindrune-api","timestamp":"2025-03-28 20:52:34"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 20:52:34"}
{"level":"info","message":"SQL insertion completed in 20ms","service":"mindrune-api","timestamp":"2025-03-28 20:52:34"}
{"level":"info","message":"Total request processing time: 893ms","service":"mindrune-api","timestamp":"2025-03-28 20:52:34"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:53:33"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:53:33"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 20:53:33"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:53:33"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 20:53:33"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:53:33"}
{"level":"info","message":"Data size: 1525 bytes","service":"mindrune-api","timestamp":"2025-03-28 20:53:33"}
{"level":"info","message":"Event count: 8","service":"mindrune-api","timestamp":"2025-03-28 20:53:33"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:53:33"}
{"level":"info","message":"Processing 8 events","service":"mindrune-api","timestamp":"2025-03-28 20:53:33"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 20:53:33"}
{"level":"info","message":"Player node updated in 106ms","service":"mindrune-api","timestamp":"2025-03-28 20:53:33"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 20:53:33"}
{"level":"info","message":"Processing batch of 8 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 20:53:33"}
{"level":"info","message":"Completed batch of 8 MENU_CLICK events in 747ms","service":"mindrune-api","timestamp":"2025-03-28 20:53:34"}
{"level":"info","message":"All events processed in 747ms","service":"mindrune-api","timestamp":"2025-03-28 20:53:34"}
{"level":"info","message":"Total Neo4j operation time: 855ms","service":"mindrune-api","timestamp":"2025-03-28 20:53:34"}
{"level":"info","message":"Neo4j session closed after 855ms","service":"mindrune-api","timestamp":"2025-03-28 20:53:34"}
{"level":"info","message":"Neo4j insertion completed in 855ms","service":"mindrune-api","timestamp":"2025-03-28 20:53:34"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 20:53:34"}
{"level":"info","message":"SQL insertion completed in 20ms","service":"mindrune-api","timestamp":"2025-03-28 20:53:34"}
{"level":"info","message":"Total request processing time: 878ms","service":"mindrune-api","timestamp":"2025-03-28 20:53:34"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:54:33"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:54:33"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 20:54:33"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:54:33"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 20:54:33"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:54:33"}
{"level":"info","message":"Data size: 7376 bytes","service":"mindrune-api","timestamp":"2025-03-28 20:54:33"}
{"level":"info","message":"Event count: 35","service":"mindrune-api","timestamp":"2025-03-28 20:54:33"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:54:33"}
{"level":"info","message":"Processing 35 events","service":"mindrune-api","timestamp":"2025-03-28 20:54:33"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 20:54:33"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-28 20:54:33"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-28 20:54:33"}
{"level":"info","message":"Processing batch of 9 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 20:54:33"}
{"level":"info","message":"Completed batch of 9 MENU_CLICK events in 731ms","service":"mindrune-api","timestamp":"2025-03-28 20:54:34"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-28 20:54:34"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 344ms","service":"mindrune-api","timestamp":"2025-03-28 20:54:35"}
{"level":"info","message":"Processing batch of 10 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 20:54:35"}
{"level":"info","message":"Completed batch of 10 XP_GAIN events in 126ms","service":"mindrune-api","timestamp":"2025-03-28 20:54:35"}
{"level":"info","message":"Processing batch of 15 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 20:54:35"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":6,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 20:54:35"}
{"level":"info","message":"Processing 15 HIT_SPLAT events: 6 incoming, 9 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 20:54:35"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"9ee2955f-ff85-4888-ad82-fafaf1bf20da_19\",\"timestamp\":\"2025-03-29T00:54:28.274508700Z\",\"damage\":2,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 20:54:35"}
{"level":"info","message":"Completed batch of 15 HIT_SPLAT events in 287ms","service":"mindrune-api","timestamp":"2025-03-28 20:54:35"}
{"level":"info","message":"All events processed in 1489ms","service":"mindrune-api","timestamp":"2025-03-28 20:54:35"}
{"level":"info","message":"Total Neo4j operation time: 1583ms","service":"mindrune-api","timestamp":"2025-03-28 20:54:35"}
{"level":"info","message":"Neo4j session closed after 1583ms","service":"mindrune-api","timestamp":"2025-03-28 20:54:35"}
{"level":"info","message":"Neo4j insertion completed in 1584ms","service":"mindrune-api","timestamp":"2025-03-28 20:54:35"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 20:54:35"}
{"level":"info","message":"SQL insertion completed in 26ms","service":"mindrune-api","timestamp":"2025-03-28 20:54:35"}
{"level":"info","message":"Total request processing time: 1611ms","service":"mindrune-api","timestamp":"2025-03-28 20:54:35"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:55:33"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:55:33"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 20:55:33"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:55:33"}
{"level":"info","message":"Spam protection check completed in 0ms","service":"mindrune-api","timestamp":"2025-03-28 20:55:33"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:55:33"}
{"level":"info","message":"Data size: 21384 bytes","service":"mindrune-api","timestamp":"2025-03-28 20:55:33"}
{"level":"info","message":"Event count: 103","service":"mindrune-api","timestamp":"2025-03-28 20:55:33"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:55:33"}
{"level":"info","message":"Processing 103 events","service":"mindrune-api","timestamp":"2025-03-28 20:55:33"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 20:55:33"}
{"level":"info","message":"Player node updated in 103ms","service":"mindrune-api","timestamp":"2025-03-28 20:55:33"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-28 20:55:33"}
{"level":"info","message":"Processing batch of 30 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 20:55:33"}
{"level":"info","message":"Completed batch of 30 MENU_CLICK events in 693ms","service":"mindrune-api","timestamp":"2025-03-28 20:55:34"}
{"level":"info","message":"Processing batch of 32 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 20:55:34"}
{"level":"info","message":"Completed batch of 32 XP_GAIN events in 126ms","service":"mindrune-api","timestamp":"2025-03-28 20:55:34"}
{"level":"info","message":"Processing batch of 40 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 20:55:34"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blue Moon\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-28 20:55:34"}
{"level":"info","message":"Processing 40 HIT_SPLAT events: 22 incoming, 18 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 20:55:34"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"826a74fa-4828-45dc-9865-c4903b5174cf_3\",\"timestamp\":\"2025-03-29T00:54:35.472692300Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1437,\"locationY\":9679,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 20:55:34"}
{"level":"info","message":"Completed batch of 40 HIT_SPLAT events in 270ms","service":"mindrune-api","timestamp":"2025-03-28 20:55:35"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-28 20:55:35"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-28 20:55:35"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 256ms","service":"mindrune-api","timestamp":"2025-03-28 20:55:35"}
{"level":"info","message":"All events processed in 1345ms","service":"mindrune-api","timestamp":"2025-03-28 20:55:35"}
{"level":"info","message":"Total Neo4j operation time: 1448ms","service":"mindrune-api","timestamp":"2025-03-28 20:55:35"}
{"level":"info","message":"Neo4j session closed after 1448ms","service":"mindrune-api","timestamp":"2025-03-28 20:55:35"}
{"level":"info","message":"Neo4j insertion completed in 1448ms","service":"mindrune-api","timestamp":"2025-03-28 20:55:35"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 20:55:35"}
{"level":"info","message":"SQL insertion completed in 19ms","service":"mindrune-api","timestamp":"2025-03-28 20:55:35"}
{"level":"info","message":"Total request processing time: 1470ms","service":"mindrune-api","timestamp":"2025-03-28 20:55:35"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:56:33"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:56:33"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 20:56:33"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:56:33"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 20:56:33"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:56:33"}
{"level":"info","message":"Data size: 16774 bytes","service":"mindrune-api","timestamp":"2025-03-28 20:56:33"}
{"level":"info","message":"Event count: 81","service":"mindrune-api","timestamp":"2025-03-28 20:56:33"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:56:33"}
{"level":"info","message":"Processing 81 events","service":"mindrune-api","timestamp":"2025-03-28 20:56:33"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 20:56:33"}
{"level":"info","message":"Player node updated in 91ms","service":"mindrune-api","timestamp":"2025-03-28 20:56:33"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 20:56:33"}
{"level":"info","message":"Processing batch of 29 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 20:56:33"}
{"level":"info","message":"Completed batch of 29 MENU_CLICK events in 405ms","service":"mindrune-api","timestamp":"2025-03-28 20:56:34"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 20:56:34"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 98ms","service":"mindrune-api","timestamp":"2025-03-28 20:56:34"}
{"level":"info","message":"Processing batch of 36 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 20:56:34"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blue Moon\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-28 20:56:34"}
{"level":"info","message":"Processing 36 HIT_SPLAT events: 21 incoming, 15 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 20:56:34"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"6fcc3e23-c89c-4fe3-933b-71cb32689337_3\",\"timestamp\":\"2025-03-29T00:55:35.465816600Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1443,\"locationY\":9681,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 20:56:34"}
{"level":"info","message":"Completed batch of 36 HIT_SPLAT events in 194ms","service":"mindrune-api","timestamp":"2025-03-28 20:56:34"}
{"level":"info","message":"All events processed in 700ms","service":"mindrune-api","timestamp":"2025-03-28 20:56:34"}
{"level":"info","message":"Total Neo4j operation time: 792ms","service":"mindrune-api","timestamp":"2025-03-28 20:56:34"}
{"level":"info","message":"Neo4j session closed after 792ms","service":"mindrune-api","timestamp":"2025-03-28 20:56:34"}
{"level":"info","message":"Neo4j insertion completed in 793ms","service":"mindrune-api","timestamp":"2025-03-28 20:56:34"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 20:56:34"}
{"level":"info","message":"SQL insertion completed in 19ms","service":"mindrune-api","timestamp":"2025-03-28 20:56:34"}
{"level":"info","message":"Total request processing time: 813ms","service":"mindrune-api","timestamp":"2025-03-28 20:56:34"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Data size: 4241 bytes","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Event count: 21","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Processing 21 events","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Processing batch of 7 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Enraged Blue Moon\",\"damage\":10,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Processing 7 HIT_SPLAT events: 5 incoming, 2 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"efa4f685-9d5f-479c-b245-0c756bb7b41f_2\",\"timestamp\":\"2025-03-29T00:56:36.665624100Z\",\"damage\":161,\"type\":44,\"typeString\":\"Max Damage\",\"source\":\"Enraged Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1437,\"locationY\":9679,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 20:57:33"}
{"level":"info","message":"Completed batch of 7 HIT_SPLAT events in 325ms","service":"mindrune-api","timestamp":"2025-03-28 20:57:34"}
{"level":"info","message":"Processing batch of 14 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 20:57:34"}
{"level":"info","message":"Completed batch of 14 MENU_CLICK events in 694ms","service":"mindrune-api","timestamp":"2025-03-28 20:57:34"}
{"level":"info","message":"All events processed in 1021ms","service":"mindrune-api","timestamp":"2025-03-28 20:57:34"}
{"level":"info","message":"Total Neo4j operation time: 1122ms","service":"mindrune-api","timestamp":"2025-03-28 20:57:34"}
{"level":"info","message":"Neo4j session closed after 1122ms","service":"mindrune-api","timestamp":"2025-03-28 20:57:34"}
{"level":"info","message":"Neo4j insertion completed in 1123ms","service":"mindrune-api","timestamp":"2025-03-28 20:57:34"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 20:57:34"}
{"level":"info","message":"SQL insertion completed in 18ms","service":"mindrune-api","timestamp":"2025-03-28 20:57:34"}
{"level":"info","message":"Total request processing time: 1142ms","service":"mindrune-api","timestamp":"2025-03-28 20:57:34"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:58:33"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:58:33"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 20:58:33"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:58:33"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 20:58:33"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:58:33"}
{"level":"info","message":"Data size: 820 bytes","service":"mindrune-api","timestamp":"2025-03-28 20:58:33"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-28 20:58:33"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 20:58:33"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-28 20:58:33"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 20:58:33"}
{"level":"info","message":"Player node updated in 96ms","service":"mindrune-api","timestamp":"2025-03-28 20:58:33"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 20:58:33"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 20:58:33"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 864ms","service":"mindrune-api","timestamp":"2025-03-28 20:58:34"}
{"level":"info","message":"All events processed in 864ms","service":"mindrune-api","timestamp":"2025-03-28 20:58:34"}
{"level":"info","message":"Total Neo4j operation time: 963ms","service":"mindrune-api","timestamp":"2025-03-28 20:58:34"}
{"level":"info","message":"Neo4j session closed after 963ms","service":"mindrune-api","timestamp":"2025-03-28 20:58:34"}
{"level":"info","message":"Neo4j insertion completed in 964ms","service":"mindrune-api","timestamp":"2025-03-28 20:58:34"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 20:58:34"}
{"level":"info","message":"SQL insertion completed in 21ms","service":"mindrune-api","timestamp":"2025-03-28 20:58:34"}
{"level":"info","message":"Total request processing time: 986ms","service":"mindrune-api","timestamp":"2025-03-28 20:58:34"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:17:55"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:17:55"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:17:55"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:17:55"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 21:17:55"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:17:55"}
{"level":"info","message":"Data size: 1322 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:17:55"}
{"level":"info","message":"Event count: 7","service":"mindrune-api","timestamp":"2025-03-28 21:17:55"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:17:55"}
{"level":"info","message":"Processing 7 events","service":"mindrune-api","timestamp":"2025-03-28 21:17:55"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:17:55"}
{"level":"info","message":"Player node updated in 133ms","service":"mindrune-api","timestamp":"2025-03-28 21:17:55"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 21:17:55"}
{"level":"info","message":"Processing batch of 7 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:17:55"}
{"level":"info","message":"Completed batch of 7 MENU_CLICK events in 766ms","service":"mindrune-api","timestamp":"2025-03-28 21:17:56"}
{"level":"info","message":"All events processed in 767ms","service":"mindrune-api","timestamp":"2025-03-28 21:17:56"}
{"level":"info","message":"Total Neo4j operation time: 900ms","service":"mindrune-api","timestamp":"2025-03-28 21:17:56"}
{"level":"info","message":"Neo4j session closed after 900ms","service":"mindrune-api","timestamp":"2025-03-28 21:17:56"}
{"level":"info","message":"Neo4j insertion completed in 901ms","service":"mindrune-api","timestamp":"2025-03-28 21:17:56"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:17:56"}
{"level":"info","message":"SQL insertion completed in 19ms","service":"mindrune-api","timestamp":"2025-03-28 21:17:56"}
{"level":"info","message":"Total request processing time: 921ms","service":"mindrune-api","timestamp":"2025-03-28 21:17:56"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Data size: 9267 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Event count: 49","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Processing 49 events","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Processing batch of 34 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Completed batch of 34 MENU_CLICK events in 398ms","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Processing batch of 7 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Completed batch of 7 XP_GAIN events in 164ms","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-28 21:18:55"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 347ms","service":"mindrune-api","timestamp":"2025-03-28 21:18:56"}
{"level":"info","message":"Processing batch of 7 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 21:18:56"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":16,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 21:18:56"}
{"level":"info","message":"Processing 7 HIT_SPLAT events: 3 incoming, 4 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 21:18:56"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"f3951959-9075-4b94-a09a-319df44f5ea9_41\",\"timestamp\":\"2025-03-29T01:18:52.097479800Z\",\"damage\":1,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1442,\"locationY\":9681,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 21:18:56"}
{"level":"info","message":"Completed batch of 7 HIT_SPLAT events in 404ms","service":"mindrune-api","timestamp":"2025-03-28 21:18:56"}
{"level":"info","message":"All events processed in 1314ms","service":"mindrune-api","timestamp":"2025-03-28 21:18:56"}
{"level":"info","message":"Total Neo4j operation time: 1407ms","service":"mindrune-api","timestamp":"2025-03-28 21:18:56"}
{"level":"info","message":"Neo4j session closed after 1407ms","service":"mindrune-api","timestamp":"2025-03-28 21:18:56"}
{"level":"info","message":"Neo4j insertion completed in 1408ms","service":"mindrune-api","timestamp":"2025-03-28 21:18:56"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:18:56"}
{"level":"info","message":"SQL insertion completed in 21ms","service":"mindrune-api","timestamp":"2025-03-28 21:18:56"}
{"level":"info","message":"Total request processing time: 1430ms","service":"mindrune-api","timestamp":"2025-03-28 21:18:56"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Data size: 16512 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Event count: 78","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Processing 78 events","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Processing batch of 22 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Completed batch of 22 XP_GAIN events in 99ms","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Processing batch of 40 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blue Moon\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Processing 40 HIT_SPLAT events: 20 incoming, 20 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"c8784d69-9dc8-47b7-ba9d-97aa968bc552_2\",\"timestamp\":\"2025-03-29T01:18:56.317357300Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1443,\"locationY\":9681,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Completed batch of 40 HIT_SPLAT events in 194ms","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Processing batch of 16 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:19:55"}
{"level":"info","message":"Completed batch of 16 MENU_CLICK events in 688ms","service":"mindrune-api","timestamp":"2025-03-28 21:19:56"}
{"level":"info","message":"All events processed in 982ms","service":"mindrune-api","timestamp":"2025-03-28 21:19:56"}
{"level":"info","message":"Total Neo4j operation time: 1083ms","service":"mindrune-api","timestamp":"2025-03-28 21:19:56"}
{"level":"info","message":"Neo4j session closed after 1083ms","service":"mindrune-api","timestamp":"2025-03-28 21:19:56"}
{"level":"info","message":"Neo4j insertion completed in 1084ms","service":"mindrune-api","timestamp":"2025-03-28 21:19:56"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:19:56"}
{"level":"info","message":"SQL insertion completed in 19ms","service":"mindrune-api","timestamp":"2025-03-28 21:19:56"}
{"level":"info","message":"Total request processing time: 1106ms","service":"mindrune-api","timestamp":"2025-03-28 21:19:56"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Data size: 5345 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Event count: 26","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Processing 26 events","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Processing batch of 10 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blue Moon\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Processing 10 HIT_SPLAT events: 8 incoming, 2 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"8d91337d-47db-47b1-a7ac-107de04bc89d_0\",\"timestamp\":\"2025-03-29T01:19:55.717208700Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1437,\"locationY\":9679,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Completed batch of 10 HIT_SPLAT events in 328ms","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Processing batch of 4 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Completed batch of 4 XP_GAIN events in 202ms","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Processing batch of 12 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:20:55"}
{"level":"info","message":"Completed batch of 12 MENU_CLICK events in 345ms","service":"mindrune-api","timestamp":"2025-03-28 21:20:56"}
{"level":"info","message":"All events processed in 878ms","service":"mindrune-api","timestamp":"2025-03-28 21:20:56"}
{"level":"info","message":"Total Neo4j operation time: 972ms","service":"mindrune-api","timestamp":"2025-03-28 21:20:56"}
{"level":"info","message":"Neo4j session closed after 972ms","service":"mindrune-api","timestamp":"2025-03-28 21:20:56"}
{"level":"info","message":"Neo4j insertion completed in 971ms","service":"mindrune-api","timestamp":"2025-03-28 21:20:56"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:20:56"}
{"level":"info","message":"SQL insertion completed in 21ms","service":"mindrune-api","timestamp":"2025-03-28 21:20:56"}
{"level":"info","message":"Total request processing time: 994ms","service":"mindrune-api","timestamp":"2025-03-28 21:20:56"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:21:55"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:21:55"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:21:55"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:21:55"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 21:21:55"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:21:55"}
{"level":"info","message":"Data size: 467 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:21:55"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-28 21:21:55"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:21:55"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-28 21:21:55"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:21:55"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-28 21:21:55"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 21:21:55"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:21:55"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 749ms","service":"mindrune-api","timestamp":"2025-03-28 21:21:56"}
{"level":"info","message":"All events processed in 749ms","service":"mindrune-api","timestamp":"2025-03-28 21:21:56"}
{"level":"info","message":"Total Neo4j operation time: 850ms","service":"mindrune-api","timestamp":"2025-03-28 21:21:56"}
{"level":"info","message":"Neo4j session closed after 851ms","service":"mindrune-api","timestamp":"2025-03-28 21:21:56"}
{"level":"info","message":"Neo4j insertion completed in 852ms","service":"mindrune-api","timestamp":"2025-03-28 21:21:56"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:21:56"}
{"level":"info","message":"SQL insertion completed in 20ms","service":"mindrune-api","timestamp":"2025-03-28 21:21:56"}
{"level":"info","message":"Total request processing time: 873ms","service":"mindrune-api","timestamp":"2025-03-28 21:21:56"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:31:13"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:31:13"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:31:13"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:31:13"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-28 21:31:13"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:31:13"}
{"level":"info","message":"Data size: 806 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:31:13"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-28 21:31:13"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:31:13"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-28 21:31:13"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:31:13"}
{"level":"info","message":"Player node updated in 168ms","service":"mindrune-api","timestamp":"2025-03-28 21:31:13"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 21:31:13"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:31:13"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 803ms","service":"mindrune-api","timestamp":"2025-03-28 21:31:14"}
{"level":"info","message":"All events processed in 803ms","service":"mindrune-api","timestamp":"2025-03-28 21:31:14"}
{"level":"info","message":"Total Neo4j operation time: 973ms","service":"mindrune-api","timestamp":"2025-03-28 21:31:14"}
{"level":"info","message":"Neo4j session closed after 973ms","service":"mindrune-api","timestamp":"2025-03-28 21:31:14"}
{"level":"info","message":"Neo4j insertion completed in 974ms","service":"mindrune-api","timestamp":"2025-03-28 21:31:14"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:31:14"}
{"level":"info","message":"SQL insertion completed in 17ms","service":"mindrune-api","timestamp":"2025-03-28 21:31:14"}
{"level":"info","message":"Total request processing time: 995ms","service":"mindrune-api","timestamp":"2025-03-28 21:31:14"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Data size: 10132 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Event count: 51","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Processing 51 events","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Processing batch of 25 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Completed batch of 25 MENU_CLICK events in 403ms","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Processing batch of 11 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Completed batch of 11 XP_GAIN events in 136ms","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-28 21:32:13"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 227ms","service":"mindrune-api","timestamp":"2025-03-28 21:32:14"}
{"level":"info","message":"Processing batch of 14 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 21:32:14"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":13,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 21:32:14"}
{"level":"info","message":"Processing 14 HIT_SPLAT events: 6 incoming, 8 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 21:32:14"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"4ebbcf59-d2c1-4b6d-a866-277a5a11dedc_35\",\"timestamp\":\"2025-03-29T01:32:06.369833400Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 21:32:14"}
{"level":"info","message":"Completed batch of 14 HIT_SPLAT events in 194ms","service":"mindrune-api","timestamp":"2025-03-28 21:32:14"}
{"level":"info","message":"All events processed in 960ms","service":"mindrune-api","timestamp":"2025-03-28 21:32:14"}
{"level":"info","message":"Total Neo4j operation time: 1056ms","service":"mindrune-api","timestamp":"2025-03-28 21:32:14"}
{"level":"info","message":"Neo4j session closed after 1057ms","service":"mindrune-api","timestamp":"2025-03-28 21:32:14"}
{"level":"info","message":"Neo4j insertion completed in 1057ms","service":"mindrune-api","timestamp":"2025-03-28 21:32:14"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:32:14"}
{"level":"info","message":"SQL insertion completed in 20ms","service":"mindrune-api","timestamp":"2025-03-28 21:32:14"}
{"level":"info","message":"Total request processing time: 1080ms","service":"mindrune-api","timestamp":"2025-03-28 21:32:14"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Data size: 22774 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Event count: 107","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Processing 107 events","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Processing batch of 51 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blue Moon\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Processing 51 HIT_SPLAT events: 22 incoming, 29 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"cfb6a4af-cba0-4fd5-b6ba-a32f042c9f75_0\",\"timestamp\":\"2025-03-29T01:32:13.589384100Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1437,\"locationY\":9679,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Completed batch of 51 HIT_SPLAT events in 194ms","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Processing batch of 34 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Completed batch of 34 XP_GAIN events in 131ms","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Processing batch of 21 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:33:13"}
{"level":"info","message":"Completed batch of 21 MENU_CLICK events in 683ms","service":"mindrune-api","timestamp":"2025-03-28 21:33:14"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-28 21:33:14"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-28 21:33:14"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 162ms","service":"mindrune-api","timestamp":"2025-03-28 21:33:14"}
{"level":"info","message":"All events processed in 1172ms","service":"mindrune-api","timestamp":"2025-03-28 21:33:14"}
{"level":"info","message":"Total Neo4j operation time: 1272ms","service":"mindrune-api","timestamp":"2025-03-28 21:33:14"}
{"level":"info","message":"Neo4j session closed after 1272ms","service":"mindrune-api","timestamp":"2025-03-28 21:33:14"}
{"level":"info","message":"Neo4j insertion completed in 1273ms","service":"mindrune-api","timestamp":"2025-03-28 21:33:14"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:33:14"}
{"level":"info","message":"SQL insertion completed in 27ms","service":"mindrune-api","timestamp":"2025-03-28 21:33:14"}
{"level":"info","message":"Total request processing time: 1303ms","service":"mindrune-api","timestamp":"2025-03-28 21:33:14"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Data size: 4097 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Event count: 20","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Processing 20 events","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Player node updated in 105ms","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Processing batch of 7 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blue Moon\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Processing 7 HIT_SPLAT events: 5 incoming, 2 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"7f4cce5a-2bfb-4274-a08e-6351976f49ea_0\",\"timestamp\":\"2025-03-29T01:33:13.589418800Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1443,\"locationY\":9681,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Completed batch of 7 HIT_SPLAT events in 327ms","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Processing batch of 2 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Completed batch of 2 XP_GAIN events in 192ms","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Processing batch of 11 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:34:13"}
{"level":"info","message":"Completed batch of 11 MENU_CLICK events in 681ms","service":"mindrune-api","timestamp":"2025-03-28 21:34:14"}
{"level":"info","message":"All events processed in 1202ms","service":"mindrune-api","timestamp":"2025-03-28 21:34:14"}
{"level":"info","message":"Total Neo4j operation time: 1307ms","service":"mindrune-api","timestamp":"2025-03-28 21:34:14"}
{"level":"info","message":"Neo4j session closed after 1307ms","service":"mindrune-api","timestamp":"2025-03-28 21:34:14"}
{"level":"info","message":"Neo4j insertion completed in 1310ms","service":"mindrune-api","timestamp":"2025-03-28 21:34:14"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:34:14"}
{"level":"info","message":"SQL insertion completed in 20ms","service":"mindrune-api","timestamp":"2025-03-28 21:34:14"}
{"level":"info","message":"Total request processing time: 1333ms","service":"mindrune-api","timestamp":"2025-03-28 21:34:14"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:35:13"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:35:13"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:35:13"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:35:13"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 21:35:13"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:35:13"}
{"level":"info","message":"Data size: 297 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:35:13"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-28 21:35:13"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:35:13"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-28 21:35:13"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:35:13"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-28 21:35:13"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 21:35:13"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:35:13"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 740ms","service":"mindrune-api","timestamp":"2025-03-28 21:35:14"}
{"level":"info","message":"All events processed in 740ms","service":"mindrune-api","timestamp":"2025-03-28 21:35:14"}
{"level":"info","message":"Total Neo4j operation time: 841ms","service":"mindrune-api","timestamp":"2025-03-28 21:35:14"}
{"level":"info","message":"Neo4j session closed after 841ms","service":"mindrune-api","timestamp":"2025-03-28 21:35:14"}
{"level":"info","message":"Neo4j insertion completed in 843ms","service":"mindrune-api","timestamp":"2025-03-28 21:35:14"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:35:14"}
{"level":"info","message":"SQL insertion completed in 18ms","service":"mindrune-api","timestamp":"2025-03-28 21:35:14"}
{"level":"info","message":"Total request processing time: 862ms","service":"mindrune-api","timestamp":"2025-03-28 21:35:14"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Data size: 2556 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Event count: 14","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Processing 14 events","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Player node updated in 125ms","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Processing batch of 13 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Completed batch of 13 MENU_CLICK events in 386ms","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 21:49:38"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 123ms","service":"mindrune-api","timestamp":"2025-03-28 21:49:39"}
{"level":"info","message":"All events processed in 510ms","service":"mindrune-api","timestamp":"2025-03-28 21:49:39"}
{"level":"info","message":"Total Neo4j operation time: 636ms","service":"mindrune-api","timestamp":"2025-03-28 21:49:39"}
{"level":"info","message":"Neo4j session closed after 636ms","service":"mindrune-api","timestamp":"2025-03-28 21:49:39"}
{"level":"info","message":"Neo4j insertion completed in 637ms","service":"mindrune-api","timestamp":"2025-03-28 21:49:39"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:49:39"}
{"level":"info","message":"SQL insertion completed in 16ms","service":"mindrune-api","timestamp":"2025-03-28 21:49:39"}
{"level":"info","message":"Total request processing time: 654ms","service":"mindrune-api","timestamp":"2025-03-28 21:49:39"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:50:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:50:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:50:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:50:38"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 21:50:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:50:38"}
{"level":"info","message":"Data size: 640 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:50:38"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-28 21:50:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:50:38"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-28 21:50:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:50:38"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-28 21:50:38"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 21:50:38"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:50:38"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 871ms","service":"mindrune-api","timestamp":"2025-03-28 21:50:39"}
{"level":"info","message":"All events processed in 871ms","service":"mindrune-api","timestamp":"2025-03-28 21:50:39"}
{"level":"info","message":"Total Neo4j operation time: 964ms","service":"mindrune-api","timestamp":"2025-03-28 21:50:39"}
{"level":"info","message":"Neo4j session closed after 964ms","service":"mindrune-api","timestamp":"2025-03-28 21:50:39"}
{"level":"info","message":"Neo4j insertion completed in 966ms","service":"mindrune-api","timestamp":"2025-03-28 21:50:39"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:50:39"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-28 21:50:39"}
{"level":"info","message":"Total request processing time: 983ms","service":"mindrune-api","timestamp":"2025-03-28 21:50:39"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Data size: 16399 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Event count: 78","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Processing 78 events","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Processing batch of 22 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Completed batch of 22 MENU_CLICK events in 381ms","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Processing batch of 20 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 21:51:38"}
{"level":"info","message":"Completed batch of 20 XP_GAIN events in 98ms","service":"mindrune-api","timestamp":"2025-03-28 21:51:39"}
{"level":"info","message":"Processing batch of 36 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 21:51:39"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-28 21:51:39"}
{"level":"info","message":"Processing 36 HIT_SPLAT events: 19 incoming, 17 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 21:51:39"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"828b54f5-8315-497c-8b97-f5118a4136a5_13\",\"timestamp\":\"2025-03-29T01:51:09.304004300Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1439,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 21:51:39"}
{"level":"info","message":"Completed batch of 36 HIT_SPLAT events in 194ms","service":"mindrune-api","timestamp":"2025-03-28 21:51:39"}
{"level":"info","message":"All events processed in 674ms","service":"mindrune-api","timestamp":"2025-03-28 21:51:39"}
{"level":"info","message":"Total Neo4j operation time: 768ms","service":"mindrune-api","timestamp":"2025-03-28 21:51:39"}
{"level":"info","message":"Neo4j session closed after 768ms","service":"mindrune-api","timestamp":"2025-03-28 21:51:39"}
{"level":"info","message":"Neo4j insertion completed in 769ms","service":"mindrune-api","timestamp":"2025-03-28 21:51:39"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:51:39"}
{"level":"info","message":"SQL insertion completed in 21ms","service":"mindrune-api","timestamp":"2025-03-28 21:51:39"}
{"level":"info","message":"Total request processing time: 792ms","service":"mindrune-api","timestamp":"2025-03-28 21:51:39"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Data size: 17380 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Event count: 83","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Processing 83 events","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Player node updated in 308ms","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Processing batch of 26 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Completed batch of 26 XP_GAIN events in 100ms","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Processing batch of 20 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:52:38"}
{"level":"info","message":"Completed batch of 20 MENU_CLICK events in 680ms","service":"mindrune-api","timestamp":"2025-03-28 21:52:39"}
{"level":"info","message":"Processing batch of 37 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 21:52:39"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Frozen weapons</col>\",\"damage\":9,\"type\":43,\"typeString\":\"Max Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Max Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 21:52:39"}
{"level":"info","message":"Processing 37 HIT_SPLAT events: 19 incoming, 18 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 21:52:39"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"c8f56b67-5d27-4257-adc9-3912e169325a_21\",\"timestamp\":\"2025-03-29T01:51:59.103843300Z\",\"damage\":10,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1440,\"locationY\":9682,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 21:52:39"}
{"level":"info","message":"Completed batch of 37 HIT_SPLAT events in 226ms","service":"mindrune-api","timestamp":"2025-03-28 21:52:39"}
{"level":"info","message":"All events processed in 1008ms","service":"mindrune-api","timestamp":"2025-03-28 21:52:39"}
{"level":"info","message":"Total Neo4j operation time: 1317ms","service":"mindrune-api","timestamp":"2025-03-28 21:52:39"}
{"level":"info","message":"Neo4j session closed after 1317ms","service":"mindrune-api","timestamp":"2025-03-28 21:52:39"}
{"level":"info","message":"Neo4j insertion completed in 1317ms","service":"mindrune-api","timestamp":"2025-03-28 21:52:39"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:52:39"}
{"level":"info","message":"SQL insertion completed in 20ms","service":"mindrune-api","timestamp":"2025-03-28 21:52:39"}
{"level":"info","message":"Total request processing time: 1339ms","service":"mindrune-api","timestamp":"2025-03-28 21:52:39"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:53:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:53:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:53:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:53:38"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 21:53:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:53:38"}
{"level":"info","message":"Data size: 1963 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:53:38"}
{"level":"info","message":"Event count: 10","service":"mindrune-api","timestamp":"2025-03-28 21:53:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:53:38"}
{"level":"info","message":"Processing 10 events","service":"mindrune-api","timestamp":"2025-03-28 21:53:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:53:38"}
{"level":"info","message":"Player node updated in 102ms","service":"mindrune-api","timestamp":"2025-03-28 21:53:38"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-28 21:53:38"}
{"level":"info","message":"Processing batch of 8 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:53:38"}
{"level":"info","message":"Completed batch of 8 MENU_CLICK events in 757ms","service":"mindrune-api","timestamp":"2025-03-28 21:53:39"}
{"level":"info","message":"Processing batch of 2 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 21:53:39"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Block\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Block\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-28 21:53:39"}
{"level":"info","message":"Processing 2 HIT_SPLAT events: 2 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 21:53:39"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"6b8f590c-6504-410c-90fc-134946442a35_2\",\"timestamp\":\"2025-03-29T01:52:41.124250500Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Block\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1356,\"locationY\":9565,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 21:53:39"}
{"level":"info","message":"Completed batch of 2 HIT_SPLAT events in 210ms","service":"mindrune-api","timestamp":"2025-03-28 21:53:39"}
{"level":"info","message":"All events processed in 969ms","service":"mindrune-api","timestamp":"2025-03-28 21:53:39"}
{"level":"info","message":"Total Neo4j operation time: 1072ms","service":"mindrune-api","timestamp":"2025-03-28 21:53:39"}
{"level":"info","message":"Neo4j session closed after 1072ms","service":"mindrune-api","timestamp":"2025-03-28 21:53:39"}
{"level":"info","message":"Neo4j insertion completed in 1073ms","service":"mindrune-api","timestamp":"2025-03-28 21:53:39"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:53:39"}
{"level":"info","message":"SQL insertion completed in 18ms","service":"mindrune-api","timestamp":"2025-03-28 21:53:39"}
{"level":"info","message":"Total request processing time: 1093ms","service":"mindrune-api","timestamp":"2025-03-28 21:53:39"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:54:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:54:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 21:54:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:54:38"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 21:54:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:54:38"}
{"level":"info","message":"Data size: 855 bytes","service":"mindrune-api","timestamp":"2025-03-28 21:54:38"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-28 21:54:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 21:54:38"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-28 21:54:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 21:54:38"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-28 21:54:38"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-28 21:54:38"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 21:54:38"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 513ms","service":"mindrune-api","timestamp":"2025-03-28 21:54:39"}
{"level":"info","message":"Processing batch of 1 REWARD events","service":"mindrune-api","timestamp":"2025-03-28 21:54:39"}
{"level":"info","message":"Processing 1 rewards and 0 reward item sets","service":"mindrune-api","timestamp":"2025-03-28 21:54:39"}
{"level":"info","message":"Completed batch of 1 REWARD events in 210ms","service":"mindrune-api","timestamp":"2025-03-28 21:54:39"}
{"level":"info","message":"All events processed in 725ms","service":"mindrune-api","timestamp":"2025-03-28 21:54:39"}
{"level":"info","message":"Total Neo4j operation time: 826ms","service":"mindrune-api","timestamp":"2025-03-28 21:54:39"}
{"level":"info","message":"Neo4j session closed after 826ms","service":"mindrune-api","timestamp":"2025-03-28 21:54:39"}
{"level":"info","message":"Neo4j insertion completed in 827ms","service":"mindrune-api","timestamp":"2025-03-28 21:54:39"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 21:54:39"}
{"level":"info","message":"SQL insertion completed in 18ms","service":"mindrune-api","timestamp":"2025-03-28 21:54:39"}
{"level":"info","message":"Total request processing time: 847ms","service":"mindrune-api","timestamp":"2025-03-28 21:54:39"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-28 22:10:04"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-28 22:10:04"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Data size: 3921 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Event count: 22","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Processing 22 events","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Player node updated in 405ms","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Processing batch of 21 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:13:38"}
{"level":"info","message":"Completed batch of 21 MENU_CLICK events in 690ms","service":"mindrune-api","timestamp":"2025-03-28 22:13:39"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 22:13:39"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 125ms","service":"mindrune-api","timestamp":"2025-03-28 22:13:39"}
{"level":"info","message":"All events processed in 817ms","service":"mindrune-api","timestamp":"2025-03-28 22:13:39"}
{"level":"info","message":"Total Neo4j operation time: 1226ms","service":"mindrune-api","timestamp":"2025-03-28 22:13:39"}
{"level":"info","message":"Neo4j session closed after 1226ms","service":"mindrune-api","timestamp":"2025-03-28 22:13:39"}
{"level":"info","message":"Neo4j insertion completed in 1228ms","service":"mindrune-api","timestamp":"2025-03-28 22:13:39"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:13:39"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-28 22:13:39"}
{"level":"info","message":"Total request processing time: 1245ms","service":"mindrune-api","timestamp":"2025-03-28 22:13:39"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:14:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:14:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:14:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:14:38"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 22:14:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:14:38"}
{"level":"info","message":"Data size: 16447 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:14:38"}
{"level":"info","message":"Event count: 78","service":"mindrune-api","timestamp":"2025-03-28 22:14:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:14:38"}
{"level":"info","message":"Processing 78 events","service":"mindrune-api","timestamp":"2025-03-28 22:14:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:14:38"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-28 22:14:38"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 22:14:38"}
{"level":"info","message":"Processing batch of 19 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:14:38"}
{"level":"info","message":"Completed batch of 19 MENU_CLICK events in 679ms","service":"mindrune-api","timestamp":"2025-03-28 22:14:39"}
{"level":"info","message":"Processing batch of 22 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 22:14:39"}
{"level":"info","message":"Completed batch of 22 XP_GAIN events in 129ms","service":"mindrune-api","timestamp":"2025-03-28 22:14:39"}
{"level":"info","message":"Processing batch of 37 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 22:14:39"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":10,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 22:14:39"}
{"level":"info","message":"Processing 37 HIT_SPLAT events: 18 incoming, 19 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 22:14:39"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"c7a23f95-145e-49ae-b8af-c906d4019542_18\",\"timestamp\":\"2025-03-29T02:14:11.846697500Z\",\"damage\":3,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 22:14:39"}
{"level":"info","message":"Completed batch of 37 HIT_SPLAT events in 201ms","service":"mindrune-api","timestamp":"2025-03-28 22:14:39"}
{"level":"info","message":"All events processed in 1011ms","service":"mindrune-api","timestamp":"2025-03-28 22:14:39"}
{"level":"info","message":"Total Neo4j operation time: 1114ms","service":"mindrune-api","timestamp":"2025-03-28 22:14:39"}
{"level":"info","message":"Neo4j session closed after 1114ms","service":"mindrune-api","timestamp":"2025-03-28 22:14:39"}
{"level":"info","message":"Neo4j insertion completed in 1114ms","service":"mindrune-api","timestamp":"2025-03-28 22:14:39"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:14:39"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-28 22:14:39"}
{"level":"info","message":"Total request processing time: 1131ms","service":"mindrune-api","timestamp":"2025-03-28 22:14:39"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Data size: 12887 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Event count: 64","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Processing 64 events","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Processing batch of 20 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Completed batch of 20 XP_GAIN events in 98ms","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Processing batch of 20 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Frozen weapons</col>\",\"damage\":10,\"type\":43,\"typeString\":\"Max Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Max Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Processing 20 HIT_SPLAT events: 10 incoming, 10 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"52b590cf-435a-416f-8c96-c94a294b6676_37\",\"timestamp\":\"2025-03-29T02:15:08.265644500Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1442,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Completed batch of 20 HIT_SPLAT events in 281ms","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Processing batch of 24 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:15:38"}
{"level":"info","message":"Completed batch of 24 MENU_CLICK events in 679ms","service":"mindrune-api","timestamp":"2025-03-28 22:15:39"}
{"level":"info","message":"All events processed in 1059ms","service":"mindrune-api","timestamp":"2025-03-28 22:15:39"}
{"level":"info","message":"Total Neo4j operation time: 1155ms","service":"mindrune-api","timestamp":"2025-03-28 22:15:39"}
{"level":"info","message":"Neo4j session closed after 1155ms","service":"mindrune-api","timestamp":"2025-03-28 22:15:39"}
{"level":"info","message":"Neo4j insertion completed in 1156ms","service":"mindrune-api","timestamp":"2025-03-28 22:15:39"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:15:39"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-28 22:15:39"}
{"level":"info","message":"Total request processing time: 1172ms","service":"mindrune-api","timestamp":"2025-03-28 22:15:39"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:16:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:16:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:16:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:16:38"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 22:16:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:16:38"}
{"level":"info","message":"Data size: 1206 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:16:38"}
{"level":"info","message":"Event count: 5","service":"mindrune-api","timestamp":"2025-03-28 22:16:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:16:38"}
{"level":"info","message":"Processing 5 events","service":"mindrune-api","timestamp":"2025-03-28 22:16:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:16:38"}
{"level":"info","message":"Player node updated in 102ms","service":"mindrune-api","timestamp":"2025-03-28 22:16:38"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-28 22:16:38"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:16:38"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 576ms","service":"mindrune-api","timestamp":"2025-03-28 22:16:39"}
{"level":"info","message":"Processing batch of 1 REWARD events","service":"mindrune-api","timestamp":"2025-03-28 22:16:39"}
{"level":"info","message":"Processing 1 rewards","service":"mindrune-api","timestamp":"2025-03-28 22:16:39"}
{"level":"info","message":"Processing 1 items from rewards","service":"mindrune-api","timestamp":"2025-03-28 22:16:39"}
{"level":"error","message":"Error in Neo4j operations after 1038ms: WITH is required between CREATE and MATCH (line 18, column 11 (offset: 529))\n\"          MATCH (reward:Reward {rewardId: event.rewardId})\"\n           ^","service":"mindrune-api","timestamp":"2025-03-28 22:16:39"}
{"level":"info","message":"Neo4j session closed after 1039ms","service":"mindrune-api","timestamp":"2025-03-28 22:16:39"}
{"level":"error","message":"Error processing create request after 1041ms: WITH is required between CREATE and MATCH (line 18, column 11 (offset: 529))\n\"          MATCH (reward:Reward {rewardId: event.rewardId})\"\n           ^","service":"mindrune-api","timestamp":"2025-03-28 22:16:39"}
{"level":"error","message":"500 - WITH is required between CREATE and MATCH (line 18, column 11 (offset: 529))\n\"          MATCH (reward:Reward {rewardId: event.rewardId})\"\n           ^ - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-28 22:16:39"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:17:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:17:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:17:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:17:38"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 22:17:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:17:38"}
{"level":"info","message":"Data size: 285 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:17:38"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-28 22:17:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:17:38"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-28 22:17:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:17:38"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-28 22:17:38"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 22:17:38"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:17:38"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 767ms","service":"mindrune-api","timestamp":"2025-03-28 22:17:39"}
{"level":"info","message":"All events processed in 768ms","service":"mindrune-api","timestamp":"2025-03-28 22:17:39"}
{"level":"info","message":"Total Neo4j operation time: 870ms","service":"mindrune-api","timestamp":"2025-03-28 22:17:39"}
{"level":"info","message":"Neo4j session closed after 870ms","service":"mindrune-api","timestamp":"2025-03-28 22:17:39"}
{"level":"info","message":"Neo4j insertion completed in 870ms","service":"mindrune-api","timestamp":"2025-03-28 22:17:39"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:17:39"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-28 22:17:39"}
{"level":"info","message":"Total request processing time: 883ms","service":"mindrune-api","timestamp":"2025-03-28 22:17:39"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:20:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:20:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:20:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:20:38"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 22:20:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:20:38"}
{"level":"info","message":"Data size: 457 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:20:38"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-28 22:20:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:20:38"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-28 22:20:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:20:38"}
{"level":"info","message":"Player node updated in 130ms","service":"mindrune-api","timestamp":"2025-03-28 22:20:38"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 22:20:38"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:20:38"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 517ms","service":"mindrune-api","timestamp":"2025-03-28 22:20:39"}
{"level":"info","message":"All events processed in 517ms","service":"mindrune-api","timestamp":"2025-03-28 22:20:39"}
{"level":"info","message":"Total Neo4j operation time: 651ms","service":"mindrune-api","timestamp":"2025-03-28 22:20:39"}
{"level":"info","message":"Neo4j session closed after 651ms","service":"mindrune-api","timestamp":"2025-03-28 22:20:39"}
{"level":"info","message":"Neo4j insertion completed in 651ms","service":"mindrune-api","timestamp":"2025-03-28 22:20:39"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:20:39"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-28 22:20:39"}
{"level":"info","message":"Total request processing time: 664ms","service":"mindrune-api","timestamp":"2025-03-28 22:20:39"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:21:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:21:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:21:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:21:38"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 22:21:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:21:38"}
{"level":"info","message":"Data size: 454 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:21:38"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-28 22:21:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:21:38"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-28 22:21:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:21:38"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-28 22:21:38"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 22:21:38"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:21:38"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 480ms","service":"mindrune-api","timestamp":"2025-03-28 22:21:39"}
{"level":"info","message":"All events processed in 480ms","service":"mindrune-api","timestamp":"2025-03-28 22:21:39"}
{"level":"info","message":"Total Neo4j operation time: 574ms","service":"mindrune-api","timestamp":"2025-03-28 22:21:39"}
{"level":"info","message":"Neo4j session closed after 574ms","service":"mindrune-api","timestamp":"2025-03-28 22:21:39"}
{"level":"info","message":"Neo4j insertion completed in 575ms","service":"mindrune-api","timestamp":"2025-03-28 22:21:39"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:21:39"}
{"level":"info","message":"SQL insertion completed in 8ms","service":"mindrune-api","timestamp":"2025-03-28 22:21:39"}
{"level":"info","message":"Total request processing time: 585ms","service":"mindrune-api","timestamp":"2025-03-28 22:21:39"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Data size: 1337 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Event count: 7","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Processing 7 events","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Player node updated in 126ms","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Processing batch of 7 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Completed batch of 7 MENU_CLICK events in 708ms","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"All events processed in 708ms","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Total Neo4j operation time: 834ms","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Neo4j session closed after 834ms","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Neo4j insertion completed in 835ms","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Total request processing time: 850ms","service":"mindrune-api","timestamp":"2025-03-28 22:43:27"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Data size: 5070 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Event count: 27","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Processing 27 events","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Player node updated in 113ms","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Processing batch of 19 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Completed batch of 19 MENU_CLICK events in 416ms","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Processing batch of 4 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Completed batch of 4 XP_GAIN events in 207ms","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Processing batch of 4 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-28 22:44:27"}
{"level":"info","message":"Completed batch of 4 INVENTORY_CHANGE events in 357ms","service":"mindrune-api","timestamp":"2025-03-28 22:44:28"}
{"level":"info","message":"All events processed in 982ms","service":"mindrune-api","timestamp":"2025-03-28 22:44:28"}
{"level":"info","message":"Total Neo4j operation time: 1097ms","service":"mindrune-api","timestamp":"2025-03-28 22:44:28"}
{"level":"info","message":"Neo4j session closed after 1098ms","service":"mindrune-api","timestamp":"2025-03-28 22:44:28"}
{"level":"info","message":"Neo4j insertion completed in 1098ms","service":"mindrune-api","timestamp":"2025-03-28 22:44:28"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:44:28"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-28 22:44:28"}
{"level":"info","message":"Total request processing time: 1117ms","service":"mindrune-api","timestamp":"2025-03-28 22:44:28"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Data size: 7430 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Event count: 38","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Processing 38 events","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Processing batch of 21 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Completed batch of 21 MENU_CLICK events in 629ms","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Processing batch of 12 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-28 22:45:27"}
{"level":"info","message":"Completed batch of 12 INVENTORY_CHANGE events in 316ms","service":"mindrune-api","timestamp":"2025-03-28 22:45:28"}
{"level":"info","message":"Processing batch of 5 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 22:45:28"}
{"level":"info","message":"Completed batch of 5 XP_GAIN events in 201ms","service":"mindrune-api","timestamp":"2025-03-28 22:45:28"}
{"level":"info","message":"All events processed in 1148ms","service":"mindrune-api","timestamp":"2025-03-28 22:45:28"}
{"level":"info","message":"Total Neo4j operation time: 1241ms","service":"mindrune-api","timestamp":"2025-03-28 22:45:28"}
{"level":"info","message":"Neo4j session closed after 1241ms","service":"mindrune-api","timestamp":"2025-03-28 22:45:28"}
{"level":"info","message":"Neo4j insertion completed in 1241ms","service":"mindrune-api","timestamp":"2025-03-28 22:45:28"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:45:28"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-28 22:45:28"}
{"level":"info","message":"Total request processing time: 1259ms","service":"mindrune-api","timestamp":"2025-03-28 22:45:28"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Data size: 18967 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Event count: 92","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Processing 92 events","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Player node updated in 102ms","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Grouped events into 5 types","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Processing batch of 33 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Completed batch of 33 MENU_CLICK events in 492ms","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-28 22:46:27"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 357ms","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Processing batch of 22 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Completed batch of 22 XP_GAIN events in 126ms","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Processing batch of 35 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Cracked ice</col>\",\"damage\":10,\"type\":43,\"typeString\":\"Max Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Max Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Processing 35 HIT_SPLAT events: 17 incoming, 18 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"1ae32b16-c9dd-426a-b397-b9ff263b3f3e_34\",\"timestamp\":\"2025-03-29T02:46:01.033808600Z\",\"damage\":1,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1441,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Completed batch of 35 HIT_SPLAT events in 239ms","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 231ms","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"All events processed in 1446ms","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Total Neo4j operation time: 1550ms","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Neo4j session closed after 1550ms","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Neo4j insertion completed in 1551ms","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Total request processing time: 1566ms","service":"mindrune-api","timestamp":"2025-03-28 22:46:28"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Data size: 15743 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Event count: 77","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Processing 77 events","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Player node updated in 95ms","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Processing batch of 29 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Completed batch of 29 MENU_CLICK events in 608ms","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Processing batch of 32 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":8,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Damage\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Processing 32 HIT_SPLAT events: 18 incoming, 14 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"e1301823-8bef-4239-a00b-da7a7b412149_9\",\"timestamp\":\"2025-03-29T02:46:36.432354200Z\",\"damage\":8,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1446,\"locationY\":9679,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-28 22:47:27"}
{"level":"info","message":"Completed batch of 32 HIT_SPLAT events in 195ms","service":"mindrune-api","timestamp":"2025-03-28 22:47:28"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-28 22:47:28"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 98ms","service":"mindrune-api","timestamp":"2025-03-28 22:47:28"}
{"level":"info","message":"All events processed in 903ms","service":"mindrune-api","timestamp":"2025-03-28 22:47:28"}
{"level":"info","message":"Total Neo4j operation time: 1000ms","service":"mindrune-api","timestamp":"2025-03-28 22:47:28"}
{"level":"info","message":"Neo4j session closed after 1000ms","service":"mindrune-api","timestamp":"2025-03-28 22:47:28"}
{"level":"info","message":"Neo4j insertion completed in 1000ms","service":"mindrune-api","timestamp":"2025-03-28 22:47:28"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:47:28"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-28 22:47:28"}
{"level":"info","message":"Total request processing time: 1017ms","service":"mindrune-api","timestamp":"2025-03-28 22:47:28"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Data size: 1150 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Event count: 6","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Processing 6 events","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Processing batch of 6 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Completed batch of 6 MENU_CLICK events in 571ms","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"All events processed in 572ms","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Total Neo4j operation time: 666ms","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Neo4j session closed after 666ms","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Neo4j insertion completed in 666ms","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Total request processing time: 681ms","service":"mindrune-api","timestamp":"2025-03-28 22:48:27"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Data size: 619 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 645ms","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"All events processed in 645ms","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Total Neo4j operation time: 739ms","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Neo4j session closed after 739ms","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Neo4j insertion completed in 740ms","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Total request processing time: 755ms","service":"mindrune-api","timestamp":"2025-03-28 22:52:27"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Data size: 286 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Player node updated in 131ms","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 737ms","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"All events processed in 737ms","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Total Neo4j operation time: 869ms","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Neo4j session closed after 869ms","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Neo4j insertion completed in 869ms","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Total request processing time: 882ms","service":"mindrune-api","timestamp":"2025-03-28 22:54:27"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:55:27"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:55:27"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:55:27"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:55:27"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 22:55:27"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:55:27"}
{"level":"info","message":"Data size: 467 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:55:27"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-28 22:55:27"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:55:27"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-28 22:55:27"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:55:27"}
{"level":"info","message":"Player node updated in 110ms","service":"mindrune-api","timestamp":"2025-03-28 22:55:27"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 22:55:27"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:55:27"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 821ms","service":"mindrune-api","timestamp":"2025-03-28 22:55:28"}
{"level":"info","message":"All events processed in 821ms","service":"mindrune-api","timestamp":"2025-03-28 22:55:28"}
{"level":"info","message":"Total Neo4j operation time: 932ms","service":"mindrune-api","timestamp":"2025-03-28 22:55:28"}
{"level":"info","message":"Neo4j session closed after 932ms","service":"mindrune-api","timestamp":"2025-03-28 22:55:28"}
{"level":"info","message":"Neo4j insertion completed in 933ms","service":"mindrune-api","timestamp":"2025-03-28 22:55:28"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:55:28"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-28 22:55:28"}
{"level":"info","message":"Total request processing time: 945ms","service":"mindrune-api","timestamp":"2025-03-28 22:55:28"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Data size: 283 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Player node updated in 97ms","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 527ms","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"All events processed in 527ms","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Total Neo4j operation time: 626ms","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Neo4j session closed after 627ms","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Neo4j insertion completed in 627ms","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Total request processing time: 642ms","service":"mindrune-api","timestamp":"2025-03-28 22:56:27"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Data size: 297 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 494ms","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"All events processed in 494ms","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Total Neo4j operation time: 587ms","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Neo4j session closed after 587ms","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Neo4j insertion completed in 588ms","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Total request processing time: 603ms","service":"mindrune-api","timestamp":"2025-03-28 22:57:27"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Data size: 286 bytes","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Player node updated in 99ms","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 509ms","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"All events processed in 510ms","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Total Neo4j operation time: 609ms","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Neo4j session closed after 609ms","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Neo4j insertion completed in 610ms","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Total request processing time: 625ms","service":"mindrune-api","timestamp":"2025-03-28 22:58:27"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:36:27"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:36:27"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 07:36:27"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:36:27"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 07:36:27"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:36:27"}
{"level":"info","message":"Data size: 281 bytes","service":"mindrune-api","timestamp":"2025-03-29 07:36:27"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-29 07:36:27"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:36:27"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-29 07:36:27"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 07:36:27"}
{"level":"info","message":"Player node updated in 347ms","service":"mindrune-api","timestamp":"2025-03-29 07:36:27"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 07:36:27"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 07:36:27"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 819ms","service":"mindrune-api","timestamp":"2025-03-29 07:36:28"}
{"level":"info","message":"All events processed in 819ms","service":"mindrune-api","timestamp":"2025-03-29 07:36:28"}
{"level":"info","message":"Total Neo4j operation time: 1166ms","service":"mindrune-api","timestamp":"2025-03-29 07:36:28"}
{"level":"info","message":"Neo4j session closed after 1166ms","service":"mindrune-api","timestamp":"2025-03-29 07:36:28"}
{"level":"info","message":"Neo4j insertion completed in 1168ms","service":"mindrune-api","timestamp":"2025-03-29 07:36:28"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 07:36:28"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-29 07:36:28"}
{"level":"info","message":"Total request processing time: 1182ms","service":"mindrune-api","timestamp":"2025-03-29 07:36:28"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Data size: 452 bytes","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 519ms","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"All events processed in 519ms","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Total Neo4j operation time: 614ms","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Neo4j session closed after 614ms","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Neo4j insertion completed in 614ms","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Total request processing time: 629ms","service":"mindrune-api","timestamp":"2025-03-29 07:39:38"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Data size: 301 bytes","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Player node updated in 134ms","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 754ms","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"All events processed in 754ms","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Total Neo4j operation time: 889ms","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Neo4j session closed after 889ms","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Neo4j insertion completed in 891ms","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Total request processing time: 908ms","service":"mindrune-api","timestamp":"2025-03-29 07:41:38"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Data size: 6084 bytes","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Event count: 32","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Processing 32 events","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Processing batch of 23 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Completed batch of 23 MENU_CLICK events in 424ms","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Processing batch of 5 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Completed batch of 5 XP_GAIN events in 213ms","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":7,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 0 incoming, 3 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 200ms","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 07:42:38"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 375ms","service":"mindrune-api","timestamp":"2025-03-29 07:42:39"}
{"level":"info","message":"All events processed in 1213ms","service":"mindrune-api","timestamp":"2025-03-29 07:42:39"}
{"level":"info","message":"Total Neo4j operation time: 1308ms","service":"mindrune-api","timestamp":"2025-03-29 07:42:39"}
{"level":"info","message":"Neo4j session closed after 1308ms","service":"mindrune-api","timestamp":"2025-03-29 07:42:39"}
{"level":"info","message":"Neo4j insertion completed in 1309ms","service":"mindrune-api","timestamp":"2025-03-29 07:42:39"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 07:42:39"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-29 07:42:39"}
{"level":"info","message":"Total request processing time: 1327ms","service":"mindrune-api","timestamp":"2025-03-29 07:42:39"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Data size: 23520 bytes","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Event count: 112","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Processing 112 events","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Processing batch of 40 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Completed batch of 40 XP_GAIN events in 128ms","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Processing batch of 48 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blue Moon\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Processing 48 HIT_SPLAT events: 22 incoming, 26 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"6fc0e06f-cc8d-4231-af95-1b33b1b0d88d_2\",\"timestamp\":\"2025-03-29T11:42:38.881648400Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Completed batch of 48 HIT_SPLAT events in 267ms","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Processing batch of 23 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 07:43:38"}
{"level":"info","message":"Completed batch of 23 MENU_CLICK events in 684ms","service":"mindrune-api","timestamp":"2025-03-29 07:43:39"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-29 07:43:39"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-29 07:43:39"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 234ms","service":"mindrune-api","timestamp":"2025-03-29 07:43:39"}
{"level":"info","message":"All events processed in 1316ms","service":"mindrune-api","timestamp":"2025-03-29 07:43:39"}
{"level":"info","message":"Total Neo4j operation time: 1419ms","service":"mindrune-api","timestamp":"2025-03-29 07:43:39"}
{"level":"info","message":"Neo4j session closed after 1419ms","service":"mindrune-api","timestamp":"2025-03-29 07:43:39"}
{"level":"info","message":"Neo4j insertion completed in 1420ms","service":"mindrune-api","timestamp":"2025-03-29 07:43:39"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 07:43:39"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-29 07:43:39"}
{"level":"info","message":"Total request processing time: 1437ms","service":"mindrune-api","timestamp":"2025-03-29 07:43:39"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Data size: 6014 bytes","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Event count: 29","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Processing 29 events","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Processing batch of 13 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":13,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Processing 13 HIT_SPLAT events: 9 incoming, 4 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"7540f995-acf9-4294-8790-646323b631b4_1\",\"timestamp\":\"2025-03-29T11:43:38.899873900Z\",\"damage\":2,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1441,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Completed batch of 13 HIT_SPLAT events in 319ms","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Processing batch of 14 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Completed batch of 14 MENU_CLICK events in 351ms","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Processing batch of 2 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 07:44:38"}
{"level":"info","message":"Completed batch of 2 XP_GAIN events in 192ms","service":"mindrune-api","timestamp":"2025-03-29 07:44:39"}
{"level":"info","message":"All events processed in 862ms","service":"mindrune-api","timestamp":"2025-03-29 07:44:39"}
{"level":"info","message":"Total Neo4j operation time: 955ms","service":"mindrune-api","timestamp":"2025-03-29 07:44:39"}
{"level":"info","message":"Neo4j session closed after 956ms","service":"mindrune-api","timestamp":"2025-03-29 07:44:39"}
{"level":"info","message":"Neo4j insertion completed in 957ms","service":"mindrune-api","timestamp":"2025-03-29 07:44:39"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 07:44:39"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 07:44:39"}
{"level":"info","message":"Total request processing time: 972ms","service":"mindrune-api","timestamp":"2025-03-29 07:44:39"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Data size: 297 bytes","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 755ms","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"All events processed in 756ms","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Total Neo4j operation time: 858ms","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Neo4j session closed after 858ms","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Neo4j insertion completed in 859ms","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Total request processing time: 873ms","service":"mindrune-api","timestamp":"2025-03-29 07:45:38"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Data size: 285 bytes","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 742ms","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"All events processed in 742ms","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Total Neo4j operation time: 843ms","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Neo4j session closed after 843ms","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Neo4j insertion completed in 844ms","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Total request processing time: 858ms","service":"mindrune-api","timestamp":"2025-03-29 07:46:38"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:51:04"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:51:04"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 07:51:04"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:51:04"}
{"level":"info","message":"Spam protection check completed in 4ms","service":"mindrune-api","timestamp":"2025-03-29 07:51:04"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:51:04"}
{"level":"info","message":"Data size: 1661 bytes","service":"mindrune-api","timestamp":"2025-03-29 07:51:04"}
{"level":"info","message":"Event count: 9","service":"mindrune-api","timestamp":"2025-03-29 07:51:04"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:51:04"}
{"level":"info","message":"Processing 9 events","service":"mindrune-api","timestamp":"2025-03-29 07:51:04"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 07:51:04"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-29 07:51:04"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 07:51:04"}
{"level":"info","message":"Processing batch of 9 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 07:51:04"}
{"level":"info","message":"Completed batch of 9 MENU_CLICK events in 520ms","service":"mindrune-api","timestamp":"2025-03-29 07:51:05"}
{"level":"info","message":"All events processed in 521ms","service":"mindrune-api","timestamp":"2025-03-29 07:51:05"}
{"level":"info","message":"Total Neo4j operation time: 614ms","service":"mindrune-api","timestamp":"2025-03-29 07:51:05"}
{"level":"info","message":"Neo4j session closed after 614ms","service":"mindrune-api","timestamp":"2025-03-29 07:51:05"}
{"level":"info","message":"Neo4j insertion completed in 614ms","service":"mindrune-api","timestamp":"2025-03-29 07:51:05"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 07:51:05"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-29 07:51:05"}
{"level":"info","message":"Total request processing time: 632ms","service":"mindrune-api","timestamp":"2025-03-29 07:51:05"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:52:04"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:52:04"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 07:52:04"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:52:04"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 07:52:04"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:52:04"}
{"level":"info","message":"Data size: 4835 bytes","service":"mindrune-api","timestamp":"2025-03-29 07:52:04"}
{"level":"info","message":"Event count: 25","service":"mindrune-api","timestamp":"2025-03-29 07:52:04"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:52:04"}
{"level":"info","message":"Processing 25 events","service":"mindrune-api","timestamp":"2025-03-29 07:52:04"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 07:52:04"}
{"level":"info","message":"Player node updated in 182ms","service":"mindrune-api","timestamp":"2025-03-29 07:52:04"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 07:52:04"}
{"level":"info","message":"Processing batch of 19 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 07:52:04"}
{"level":"info","message":"Completed batch of 19 MENU_CLICK events in 673ms","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 123ms","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 228ms","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 0 incoming, 4 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 165ms","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"All events processed in 1191ms","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"Total Neo4j operation time: 1373ms","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"Neo4j session closed after 1373ms","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"Neo4j insertion completed in 1373ms","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"Total request processing time: 1389ms","service":"mindrune-api","timestamp":"2025-03-29 07:52:05"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:53:04"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:53:04"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 07:53:04"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:53:04"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 07:53:04"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:53:04"}
{"level":"info","message":"Data size: 19461 bytes","service":"mindrune-api","timestamp":"2025-03-29 07:53:04"}
{"level":"info","message":"Event count: 93","service":"mindrune-api","timestamp":"2025-03-29 07:53:04"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:53:04"}
{"level":"info","message":"Processing 93 events","service":"mindrune-api","timestamp":"2025-03-29 07:53:04"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 07:53:04"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-29 07:53:04"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 07:53:04"}
{"level":"info","message":"Processing batch of 19 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 07:53:04"}
{"level":"info","message":"Completed batch of 19 MENU_CLICK events in 664ms","service":"mindrune-api","timestamp":"2025-03-29 07:53:05"}
{"level":"info","message":"Processing batch of 34 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 07:53:05"}
{"level":"info","message":"Completed batch of 34 XP_GAIN events in 96ms","service":"mindrune-api","timestamp":"2025-03-29 07:53:05"}
{"level":"info","message":"Processing batch of 40 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 07:53:05"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":10,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 07:53:05"}
{"level":"info","message":"Processing 40 HIT_SPLAT events: 19 incoming, 21 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 07:53:05"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"d8a59b20-4596-40e9-9a99-fcb12d54104e_13\",\"timestamp\":\"2025-03-29T11:52:21.369109Z\",\"damage\":3,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 07:53:05"}
{"level":"info","message":"Completed batch of 40 HIT_SPLAT events in 192ms","service":"mindrune-api","timestamp":"2025-03-29 07:53:05"}
{"level":"info","message":"All events processed in 955ms","service":"mindrune-api","timestamp":"2025-03-29 07:53:05"}
{"level":"info","message":"Total Neo4j operation time: 1056ms","service":"mindrune-api","timestamp":"2025-03-29 07:53:05"}
{"level":"info","message":"Neo4j session closed after 1056ms","service":"mindrune-api","timestamp":"2025-03-29 07:53:05"}
{"level":"info","message":"Neo4j insertion completed in 1058ms","service":"mindrune-api","timestamp":"2025-03-29 07:53:05"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 07:53:05"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 07:53:05"}
{"level":"info","message":"Total request processing time: 1072ms","service":"mindrune-api","timestamp":"2025-03-29 07:53:05"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:54:04"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:54:04"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 07:54:04"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:54:04"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 07:54:04"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:54:04"}
{"level":"info","message":"Data size: 11285 bytes","service":"mindrune-api","timestamp":"2025-03-29 07:54:04"}
{"level":"info","message":"Event count: 55","service":"mindrune-api","timestamp":"2025-03-29 07:54:04"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:54:04"}
{"level":"info","message":"Processing 55 events","service":"mindrune-api","timestamp":"2025-03-29 07:54:04"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 07:54:04"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-29 07:54:04"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 07:54:04"}
{"level":"info","message":"Processing batch of 22 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 07:54:04"}
{"level":"info","message":"Completed batch of 22 MENU_CLICK events in 640ms","service":"mindrune-api","timestamp":"2025-03-29 07:54:05"}
{"level":"info","message":"Processing batch of 10 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 07:54:05"}
{"level":"info","message":"Completed batch of 10 XP_GAIN events in 94ms","service":"mindrune-api","timestamp":"2025-03-29 07:54:05"}
{"level":"info","message":"Processing batch of 23 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 07:54:05"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":23,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 07:54:05"}
{"level":"info","message":"Processing 23 HIT_SPLAT events: 13 incoming, 10 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 07:54:05"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"52a771aa-8d06-4ad7-b0df-8d25d2d1916b_12\",\"timestamp\":\"2025-03-29T11:53:17.787402500Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1441,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 07:54:05"}
{"level":"info","message":"Completed batch of 23 HIT_SPLAT events in 220ms","service":"mindrune-api","timestamp":"2025-03-29 07:54:05"}
{"level":"info","message":"All events processed in 955ms","service":"mindrune-api","timestamp":"2025-03-29 07:54:05"}
{"level":"info","message":"Total Neo4j operation time: 1048ms","service":"mindrune-api","timestamp":"2025-03-29 07:54:05"}
{"level":"info","message":"Neo4j session closed after 1048ms","service":"mindrune-api","timestamp":"2025-03-29 07:54:05"}
{"level":"info","message":"Neo4j insertion completed in 1048ms","service":"mindrune-api","timestamp":"2025-03-29 07:54:05"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 07:54:05"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-29 07:54:05"}
{"level":"info","message":"Total request processing time: 1064ms","service":"mindrune-api","timestamp":"2025-03-29 07:54:05"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:55:04"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:55:04"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 07:55:04"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:55:04"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 07:55:04"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:55:04"}
{"level":"info","message":"Data size: 858 bytes","service":"mindrune-api","timestamp":"2025-03-29 07:55:04"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-29 07:55:04"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 07:55:04"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-29 07:55:04"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 07:55:04"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-29 07:55:04"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 07:55:04"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 07:55:04"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 798ms","service":"mindrune-api","timestamp":"2025-03-29 07:55:05"}
{"level":"info","message":"Processing batch of 1 REWARD events","service":"mindrune-api","timestamp":"2025-03-29 07:55:05"}
{"level":"info","message":"Processing 1 rewards","service":"mindrune-api","timestamp":"2025-03-29 07:55:05"}
{"level":"info","message":"Processing 1 items from rewards","service":"mindrune-api","timestamp":"2025-03-29 07:55:05"}
{"level":"error","message":"Error in Neo4j operations after 1230ms: WITH is required between CREATE and MATCH (line 18, column 11 (offset: 529))\n\"          MATCH (reward:Reward {rewardId: event.rewardId})\"\n           ^","service":"mindrune-api","timestamp":"2025-03-29 07:55:05"}
{"level":"info","message":"Neo4j session closed after 1231ms","service":"mindrune-api","timestamp":"2025-03-29 07:55:05"}
{"level":"error","message":"Error processing create request after 1233ms: WITH is required between CREATE and MATCH (line 18, column 11 (offset: 529))\n\"          MATCH (reward:Reward {rewardId: event.rewardId})\"\n           ^","service":"mindrune-api","timestamp":"2025-03-29 07:55:05"}
{"level":"error","message":"500 - WITH is required between CREATE and MATCH (line 18, column 11 (offset: 529))\n\"          MATCH (reward:Reward {rewardId: event.rewardId})\"\n           ^ - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-29 07:55:05"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-29 08:02:52"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-29 08:02:53"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Spam protection check completed in 4ms","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Data size: 452 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Player node updated in 368ms","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:05:10"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 750ms","service":"mindrune-api","timestamp":"2025-03-29 08:05:11"}
{"level":"info","message":"All events processed in 750ms","service":"mindrune-api","timestamp":"2025-03-29 08:05:11"}
{"level":"info","message":"Total Neo4j operation time: 1121ms","service":"mindrune-api","timestamp":"2025-03-29 08:05:11"}
{"level":"info","message":"Neo4j session closed after 1122ms","service":"mindrune-api","timestamp":"2025-03-29 08:05:11"}
{"level":"info","message":"Neo4j insertion completed in 1123ms","service":"mindrune-api","timestamp":"2025-03-29 08:05:11"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:05:11"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 08:05:11"}
{"level":"info","message":"Total request processing time: 1140ms","service":"mindrune-api","timestamp":"2025-03-29 08:05:11"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Data size: 5531 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Event count: 31","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Processing 31 events","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Processing batch of 30 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Completed batch of 30 MENU_CLICK events in 409ms","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 08:06:10"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 94ms","service":"mindrune-api","timestamp":"2025-03-29 08:06:11"}
{"level":"info","message":"All events processed in 505ms","service":"mindrune-api","timestamp":"2025-03-29 08:06:11"}
{"level":"info","message":"Total Neo4j operation time: 601ms","service":"mindrune-api","timestamp":"2025-03-29 08:06:11"}
{"level":"info","message":"Neo4j session closed after 601ms","service":"mindrune-api","timestamp":"2025-03-29 08:06:11"}
{"level":"info","message":"Neo4j insertion completed in 601ms","service":"mindrune-api","timestamp":"2025-03-29 08:06:11"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:06:11"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-29 08:06:11"}
{"level":"info","message":"Total request processing time: 618ms","service":"mindrune-api","timestamp":"2025-03-29 08:06:11"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:07:10"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:07:10"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:07:10"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:07:10"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 08:07:10"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:07:10"}
{"level":"info","message":"Data size: 15640 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:07:10"}
{"level":"info","message":"Event count: 73","service":"mindrune-api","timestamp":"2025-03-29 08:07:10"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:07:10"}
{"level":"info","message":"Processing 73 events","service":"mindrune-api","timestamp":"2025-03-29 08:07:10"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:07:10"}
{"level":"info","message":"Player node updated in 104ms","service":"mindrune-api","timestamp":"2025-03-29 08:07:10"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 08:07:10"}
{"level":"info","message":"Processing batch of 12 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:07:10"}
{"level":"info","message":"Completed batch of 12 MENU_CLICK events in 678ms","service":"mindrune-api","timestamp":"2025-03-29 08:07:11"}
{"level":"info","message":"Processing batch of 22 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 08:07:11"}
{"level":"info","message":"Completed batch of 22 XP_GAIN events in 99ms","service":"mindrune-api","timestamp":"2025-03-29 08:07:11"}
{"level":"info","message":"Processing batch of 39 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 08:07:11"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":16,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 08:07:11"}
{"level":"info","message":"Processing 39 HIT_SPLAT events: 18 incoming, 21 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 08:07:11"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"815abfb8-794f-44ca-ad21-2be00c3756f4_13\",\"timestamp\":\"2025-03-29T12:06:44.209438500Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 08:07:11"}
{"level":"info","message":"Completed batch of 39 HIT_SPLAT events in 198ms","service":"mindrune-api","timestamp":"2025-03-29 08:07:11"}
{"level":"info","message":"All events processed in 978ms","service":"mindrune-api","timestamp":"2025-03-29 08:07:11"}
{"level":"info","message":"Total Neo4j operation time: 1083ms","service":"mindrune-api","timestamp":"2025-03-29 08:07:11"}
{"level":"info","message":"Neo4j session closed after 1084ms","service":"mindrune-api","timestamp":"2025-03-29 08:07:11"}
{"level":"info","message":"Neo4j insertion completed in 1085ms","service":"mindrune-api","timestamp":"2025-03-29 08:07:11"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:07:11"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-29 08:07:11"}
{"level":"info","message":"Total request processing time: 1104ms","service":"mindrune-api","timestamp":"2025-03-29 08:07:11"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Data size: 13295 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Event count: 65","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Processing 65 events","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Processing batch of 22 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Completed batch of 22 XP_GAIN events in 127ms","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Processing batch of 23 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Frozen weapons</col>\",\"damage\":10,\"type\":43,\"typeString\":\"Max Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Max Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Processing 23 HIT_SPLAT events: 12 incoming, 11 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"a3a84ab3-2897-40ef-943f-fe689d599c41_32\",\"timestamp\":\"2025-03-29T12:07:40.588975200Z\",\"damage\":2,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1441,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Completed batch of 23 HIT_SPLAT events in 195ms","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Processing batch of 20 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:08:10"}
{"level":"info","message":"Completed batch of 20 MENU_CLICK events in 635ms","service":"mindrune-api","timestamp":"2025-03-29 08:08:11"}
{"level":"info","message":"All events processed in 958ms","service":"mindrune-api","timestamp":"2025-03-29 08:08:11"}
{"level":"info","message":"Total Neo4j operation time: 1052ms","service":"mindrune-api","timestamp":"2025-03-29 08:08:11"}
{"level":"info","message":"Neo4j session closed after 1052ms","service":"mindrune-api","timestamp":"2025-03-29 08:08:11"}
{"level":"info","message":"Neo4j insertion completed in 1053ms","service":"mindrune-api","timestamp":"2025-03-29 08:08:11"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:08:11"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 08:08:11"}
{"level":"info","message":"Total request processing time: 1069ms","service":"mindrune-api","timestamp":"2025-03-29 08:08:11"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:09:10"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:09:10"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:09:10"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:09:10"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 08:09:10"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:09:10"}
{"level":"info","message":"Data size: 1322 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:09:10"}
{"level":"info","message":"Event count: 7","service":"mindrune-api","timestamp":"2025-03-29 08:09:10"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:09:10"}
{"level":"info","message":"Processing 7 events","service":"mindrune-api","timestamp":"2025-03-29 08:09:10"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:09:10"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-29 08:09:10"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 08:09:10"}
{"level":"info","message":"Processing batch of 7 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:09:10"}
{"level":"info","message":"Completed batch of 7 MENU_CLICK events in 751ms","service":"mindrune-api","timestamp":"2025-03-29 08:09:11"}
{"level":"info","message":"All events processed in 751ms","service":"mindrune-api","timestamp":"2025-03-29 08:09:11"}
{"level":"info","message":"Total Neo4j operation time: 854ms","service":"mindrune-api","timestamp":"2025-03-29 08:09:11"}
{"level":"info","message":"Neo4j session closed after 854ms","service":"mindrune-api","timestamp":"2025-03-29 08:09:11"}
{"level":"info","message":"Neo4j insertion completed in 855ms","service":"mindrune-api","timestamp":"2025-03-29 08:09:11"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:09:11"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 08:09:11"}
{"level":"info","message":"Total request processing time: 869ms","service":"mindrune-api","timestamp":"2025-03-29 08:09:11"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:12:09"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:12:09"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:12:09"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:12:09"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 08:12:09"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:12:09"}
{"level":"info","message":"Data size: 2186 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:12:09"}
{"level":"info","message":"Event count: 12","service":"mindrune-api","timestamp":"2025-03-29 08:12:09"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:12:09"}
{"level":"info","message":"Processing 12 events","service":"mindrune-api","timestamp":"2025-03-29 08:12:09"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:12:09"}
{"level":"info","message":"Player node updated in 130ms","service":"mindrune-api","timestamp":"2025-03-29 08:12:09"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 08:12:09"}
{"level":"info","message":"Processing batch of 12 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:12:09"}
{"level":"info","message":"Completed batch of 12 MENU_CLICK events in 668ms","service":"mindrune-api","timestamp":"2025-03-29 08:12:10"}
{"level":"info","message":"All events processed in 669ms","service":"mindrune-api","timestamp":"2025-03-29 08:12:10"}
{"level":"info","message":"Total Neo4j operation time: 800ms","service":"mindrune-api","timestamp":"2025-03-29 08:12:10"}
{"level":"info","message":"Neo4j session closed after 800ms","service":"mindrune-api","timestamp":"2025-03-29 08:12:10"}
{"level":"info","message":"Neo4j insertion completed in 801ms","service":"mindrune-api","timestamp":"2025-03-29 08:12:10"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:12:10"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-29 08:12:10"}
{"level":"info","message":"Total request processing time: 818ms","service":"mindrune-api","timestamp":"2025-03-29 08:12:10"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Data size: 18518 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Event count: 89","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Processing 89 events","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Processing batch of 22 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Completed batch of 22 MENU_CLICK events in 351ms","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Processing batch of 29 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Completed batch of 29 XP_GAIN events in 128ms","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 08:13:09"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 267ms","service":"mindrune-api","timestamp":"2025-03-29 08:13:10"}
{"level":"info","message":"Processing batch of 37 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 08:13:10"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":11,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 08:13:10"}
{"level":"info","message":"Processing 37 HIT_SPLAT events: 18 incoming, 19 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 08:13:10"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"bcfd1474-81a5-4d83-9111-47c00a688af5_24\",\"timestamp\":\"2025-03-29T12:12:39.946078100Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 08:13:10"}
{"level":"info","message":"Completed batch of 37 HIT_SPLAT events in 204ms","service":"mindrune-api","timestamp":"2025-03-29 08:13:10"}
{"level":"info","message":"All events processed in 951ms","service":"mindrune-api","timestamp":"2025-03-29 08:13:10"}
{"level":"info","message":"Total Neo4j operation time: 1045ms","service":"mindrune-api","timestamp":"2025-03-29 08:13:10"}
{"level":"info","message":"Neo4j session closed after 1046ms","service":"mindrune-api","timestamp":"2025-03-29 08:13:10"}
{"level":"info","message":"Neo4j insertion completed in 1046ms","service":"mindrune-api","timestamp":"2025-03-29 08:13:10"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:13:10"}
{"level":"info","message":"SQL insertion completed in 16ms","service":"mindrune-api","timestamp":"2025-03-29 08:13:10"}
{"level":"info","message":"Total request processing time: 1065ms","service":"mindrune-api","timestamp":"2025-03-29 08:13:10"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:14:09"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:14:09"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:14:09"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:14:09"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 08:14:09"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:14:09"}
{"level":"info","message":"Data size: 15174 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:14:09"}
{"level":"info","message":"Event count: 73","service":"mindrune-api","timestamp":"2025-03-29 08:14:09"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:14:09"}
{"level":"info","message":"Processing 73 events","service":"mindrune-api","timestamp":"2025-03-29 08:14:09"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:14:09"}
{"level":"info","message":"Player node updated in 104ms","service":"mindrune-api","timestamp":"2025-03-29 08:14:09"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 08:14:09"}
{"level":"info","message":"Processing batch of 20 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:14:09"}
{"level":"info","message":"Completed batch of 20 MENU_CLICK events in 714ms","service":"mindrune-api","timestamp":"2025-03-29 08:14:10"}
{"level":"info","message":"Processing batch of 22 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 08:14:10"}
{"level":"info","message":"Completed batch of 22 XP_GAIN events in 125ms","service":"mindrune-api","timestamp":"2025-03-29 08:14:10"}
{"level":"info","message":"Processing batch of 31 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 08:14:10"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Frozen weapons</col>\",\"damage\":10,\"type\":43,\"typeString\":\"Max Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Max Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 08:14:10"}
{"level":"info","message":"Processing 31 HIT_SPLAT events: 15 incoming, 16 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 08:14:10"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"2c2aaae7-43d4-4f4f-897c-61352e462dbc_27\",\"timestamp\":\"2025-03-29T12:13:36.348003500Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1441,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 08:14:10"}
{"level":"info","message":"Completed batch of 31 HIT_SPLAT events in 200ms","service":"mindrune-api","timestamp":"2025-03-29 08:14:10"}
{"level":"info","message":"All events processed in 1041ms","service":"mindrune-api","timestamp":"2025-03-29 08:14:10"}
{"level":"info","message":"Total Neo4j operation time: 1145ms","service":"mindrune-api","timestamp":"2025-03-29 08:14:10"}
{"level":"info","message":"Neo4j session closed after 1145ms","service":"mindrune-api","timestamp":"2025-03-29 08:14:10"}
{"level":"info","message":"Neo4j insertion completed in 1146ms","service":"mindrune-api","timestamp":"2025-03-29 08:14:10"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:14:10"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-29 08:14:10"}
{"level":"info","message":"Total request processing time: 1164ms","service":"mindrune-api","timestamp":"2025-03-29 08:14:10"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:15:09"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:15:09"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:15:09"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:15:09"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 08:15:09"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:15:09"}
{"level":"info","message":"Data size: 1719 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:15:09"}
{"level":"info","message":"Event count: 7","service":"mindrune-api","timestamp":"2025-03-29 08:15:09"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:15:09"}
{"level":"info","message":"Processing 7 events","service":"mindrune-api","timestamp":"2025-03-29 08:15:09"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:15:09"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-29 08:15:09"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 08:15:09"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:15:09"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 606ms","service":"mindrune-api","timestamp":"2025-03-29 08:15:10"}
{"level":"info","message":"Processing batch of 2 REWARD events","service":"mindrune-api","timestamp":"2025-03-29 08:15:10"}
{"level":"info","message":"Processing 2 rewards","service":"mindrune-api","timestamp":"2025-03-29 08:15:10"}
{"level":"info","message":"Processing 2 items from rewards","service":"mindrune-api","timestamp":"2025-03-29 08:15:10"}
{"level":"info","message":"Completed batch of 2 REWARD events in 330ms","service":"mindrune-api","timestamp":"2025-03-29 08:15:10"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 08:15:10"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 318ms","service":"mindrune-api","timestamp":"2025-03-29 08:15:10"}
{"level":"info","message":"All events processed in 1255ms","service":"mindrune-api","timestamp":"2025-03-29 08:15:10"}
{"level":"info","message":"Total Neo4j operation time: 1348ms","service":"mindrune-api","timestamp":"2025-03-29 08:15:10"}
{"level":"info","message":"Neo4j session closed after 1348ms","service":"mindrune-api","timestamp":"2025-03-29 08:15:10"}
{"level":"info","message":"Neo4j insertion completed in 1349ms","service":"mindrune-api","timestamp":"2025-03-29 08:15:10"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:15:10"}
{"level":"info","message":"SQL insertion completed in 16ms","service":"mindrune-api","timestamp":"2025-03-29 08:15:10"}
{"level":"info","message":"Total request processing time: 1367ms","service":"mindrune-api","timestamp":"2025-03-29 08:15:10"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:24:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:24:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:24:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:24:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 08:24:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:24:03"}
{"level":"info","message":"Data size: 2391 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:24:03"}
{"level":"info","message":"Event count: 13","service":"mindrune-api","timestamp":"2025-03-29 08:24:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:24:03"}
{"level":"info","message":"Processing 13 events","service":"mindrune-api","timestamp":"2025-03-29 08:24:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:24:03"}
{"level":"info","message":"Player node updated in 136ms","service":"mindrune-api","timestamp":"2025-03-29 08:24:03"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 08:24:03"}
{"level":"info","message":"Processing batch of 12 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:24:03"}
{"level":"info","message":"Completed batch of 12 MENU_CLICK events in 665ms","service":"mindrune-api","timestamp":"2025-03-29 08:24:04"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 08:24:04"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 124ms","service":"mindrune-api","timestamp":"2025-03-29 08:24:04"}
{"level":"info","message":"All events processed in 790ms","service":"mindrune-api","timestamp":"2025-03-29 08:24:04"}
{"level":"info","message":"Total Neo4j operation time: 926ms","service":"mindrune-api","timestamp":"2025-03-29 08:24:04"}
{"level":"info","message":"Neo4j session closed after 927ms","service":"mindrune-api","timestamp":"2025-03-29 08:24:04"}
{"level":"info","message":"Neo4j insertion completed in 928ms","service":"mindrune-api","timestamp":"2025-03-29 08:24:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:24:04"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-29 08:24:04"}
{"level":"info","message":"Total request processing time: 943ms","service":"mindrune-api","timestamp":"2025-03-29 08:24:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:25:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:25:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:25:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:25:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 08:25:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:25:03"}
{"level":"info","message":"Data size: 15302 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:25:03"}
{"level":"info","message":"Event count: 76","service":"mindrune-api","timestamp":"2025-03-29 08:25:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:25:03"}
{"level":"info","message":"Processing 76 events","service":"mindrune-api","timestamp":"2025-03-29 08:25:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:25:03"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-29 08:25:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 08:25:03"}
{"level":"info","message":"Processing batch of 30 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:25:03"}
{"level":"info","message":"Completed batch of 30 MENU_CLICK events in 653ms","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"Processing batch of 24 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"Completed batch of 24 XP_GAIN events in 96ms","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"Processing batch of 21 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":20,\"type\":43,\"typeString\":\"Max Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Max Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"Processing 21 HIT_SPLAT events: 7 incoming, 14 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"89020465-3d83-414a-857d-059fd088b24a_18\",\"timestamp\":\"2025-03-29T12:24:21.430379Z\",\"damage\":1,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1437,\"locationY\":9680,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"Completed batch of 21 HIT_SPLAT events in 275ms","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 231ms","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"All events processed in 1257ms","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"Total Neo4j operation time: 1359ms","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"Neo4j session closed after 1359ms","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"Neo4j insertion completed in 1361ms","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"SQL insertion completed in 24ms","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"Total request processing time: 1387ms","service":"mindrune-api","timestamp":"2025-03-29 08:25:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Data size: 17107 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Event count: 82","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Processing 82 events","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Player node updated in 106ms","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Processing batch of 38 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":14,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Processing 38 HIT_SPLAT events: 20 incoming, 18 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"0db69dc7-15ef-4d22-8096-c54a4d13a6c9_1\",\"timestamp\":\"2025-03-29T12:25:04.030186800Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1441,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Completed batch of 38 HIT_SPLAT events in 197ms","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 97ms","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Processing batch of 28 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:26:03"}
{"level":"info","message":"Completed batch of 28 MENU_CLICK events in 694ms","service":"mindrune-api","timestamp":"2025-03-29 08:26:04"}
{"level":"info","message":"All events processed in 990ms","service":"mindrune-api","timestamp":"2025-03-29 08:26:04"}
{"level":"info","message":"Total Neo4j operation time: 1096ms","service":"mindrune-api","timestamp":"2025-03-29 08:26:04"}
{"level":"info","message":"Neo4j session closed after 1096ms","service":"mindrune-api","timestamp":"2025-03-29 08:26:04"}
{"level":"info","message":"Neo4j insertion completed in 1097ms","service":"mindrune-api","timestamp":"2025-03-29 08:26:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:26:04"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-29 08:26:04"}
{"level":"info","message":"Total request processing time: 1114ms","service":"mindrune-api","timestamp":"2025-03-29 08:26:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Data size: 10471 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Event count: 49","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Processing 49 events","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Grouped events into 5 types","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Processing batch of 24 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blue Moon\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Processing 24 HIT_SPLAT events: 16 incoming, 8 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"4a7084e2-3ebf-46bc-9af5-efefbc5ae7d7_0\",\"timestamp\":\"2025-03-29T12:26:03.431236300Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Completed batch of 24 HIT_SPLAT events in 241ms","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Processing batch of 8 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Completed batch of 8 XP_GAIN events in 95ms","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Processing batch of 15 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:27:03"}
{"level":"info","message":"Completed batch of 15 MENU_CLICK events in 354ms","service":"mindrune-api","timestamp":"2025-03-29 08:27:04"}
{"level":"info","message":"Processing batch of 1 REWARD events","service":"mindrune-api","timestamp":"2025-03-29 08:27:04"}
{"level":"info","message":"Processing 1 rewards","service":"mindrune-api","timestamp":"2025-03-29 08:27:04"}
{"level":"info","message":"Processing 1 items from rewards","service":"mindrune-api","timestamp":"2025-03-29 08:27:04"}
{"level":"info","message":"Completed batch of 1 REWARD events in 319ms","service":"mindrune-api","timestamp":"2025-03-29 08:27:04"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 08:27:04"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 262ms","service":"mindrune-api","timestamp":"2025-03-29 08:27:04"}
{"level":"info","message":"All events processed in 1273ms","service":"mindrune-api","timestamp":"2025-03-29 08:27:04"}
{"level":"info","message":"Total Neo4j operation time: 1367ms","service":"mindrune-api","timestamp":"2025-03-29 08:27:04"}
{"level":"info","message":"Neo4j session closed after 1367ms","service":"mindrune-api","timestamp":"2025-03-29 08:27:04"}
{"level":"info","message":"Neo4j insertion completed in 1368ms","service":"mindrune-api","timestamp":"2025-03-29 08:27:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:27:04"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-29 08:27:04"}
{"level":"info","message":"Total request processing time: 1384ms","service":"mindrune-api","timestamp":"2025-03-29 08:27:04"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-29 08:45:02"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-29 08:45:02"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Spam protection check completed in 4ms","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Data size: 4325 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Event count: 22","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Processing 22 events","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Player node updated in 366ms","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Processing batch of 15 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:46:03"}
{"level":"info","message":"Completed batch of 15 MENU_CLICK events in 734ms","service":"mindrune-api","timestamp":"2025-03-29 08:46:04"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 08:46:04"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 359ms","service":"mindrune-api","timestamp":"2025-03-29 08:46:04"}
{"level":"info","message":"Processing batch of 6 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 08:46:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":1,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Damage\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 08:46:04"}
{"level":"info","message":"Processing 6 HIT_SPLAT events: 6 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 08:46:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"55c40f4c-568e-4356-ad72-8ad414205a63_8\",\"timestamp\":\"2025-03-29T12:45:44.352593300Z\",\"damage\":1,\"formattedDamage\":\"-1\",\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isCharacter\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1355,\"locationY\":9544,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 08:46:04"}
{"level":"info","message":"Completed batch of 6 HIT_SPLAT events in 158ms","service":"mindrune-api","timestamp":"2025-03-29 08:46:04"}
{"level":"info","message":"All events processed in 1253ms","service":"mindrune-api","timestamp":"2025-03-29 08:46:04"}
{"level":"info","message":"Total Neo4j operation time: 1624ms","service":"mindrune-api","timestamp":"2025-03-29 08:46:04"}
{"level":"info","message":"Neo4j session closed after 1624ms","service":"mindrune-api","timestamp":"2025-03-29 08:46:04"}
{"level":"info","message":"Neo4j insertion completed in 1625ms","service":"mindrune-api","timestamp":"2025-03-29 08:46:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:46:04"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-29 08:46:04"}
{"level":"info","message":"Total request processing time: 1645ms","service":"mindrune-api","timestamp":"2025-03-29 08:46:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:47:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:47:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:47:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:47:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 08:47:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:47:03"}
{"level":"info","message":"Data size: 25330 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:47:03"}
{"level":"info","message":"Event count: 126","service":"mindrune-api","timestamp":"2025-03-29 08:47:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:47:03"}
{"level":"info","message":"Processing 126 events","service":"mindrune-api","timestamp":"2025-03-29 08:47:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:47:03"}
{"level":"info","message":"Player node updated in 103ms","service":"mindrune-api","timestamp":"2025-03-29 08:47:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 08:47:03"}
{"level":"info","message":"Processing batch of 37 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:47:03"}
{"level":"info","message":"Completed batch of 37 MENU_CLICK events in 782ms","service":"mindrune-api","timestamp":"2025-03-29 08:47:04"}
{"level":"info","message":"Processing batch of 40 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 08:47:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blood jaguar\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blood jaguar\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-29 08:47:04"}
{"level":"info","message":"Processing 40 HIT_SPLAT events: 23 incoming, 17 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 08:47:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"b2f4724b-0eab-42d1-b65c-210d1bef69d2_6\",\"timestamp\":\"2025-03-29T12:46:12.551620900Z\",\"damage\":0,\"formattedDamage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blood jaguar\",\"isCharacter\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1392,\"locationY\":9630,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 08:47:04"}
{"level":"info","message":"Completed batch of 40 HIT_SPLAT events in 400ms","service":"mindrune-api","timestamp":"2025-03-29 08:47:04"}
{"level":"info","message":"Processing batch of 48 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 08:47:04"}
{"level":"info","message":"Completed batch of 48 XP_GAIN events in 140ms","service":"mindrune-api","timestamp":"2025-03-29 08:47:04"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 08:47:04"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 342ms","service":"mindrune-api","timestamp":"2025-03-29 08:47:05"}
{"level":"info","message":"All events processed in 1665ms","service":"mindrune-api","timestamp":"2025-03-29 08:47:05"}
{"level":"info","message":"Total Neo4j operation time: 1769ms","service":"mindrune-api","timestamp":"2025-03-29 08:47:05"}
{"level":"info","message":"Neo4j session closed after 1770ms","service":"mindrune-api","timestamp":"2025-03-29 08:47:05"}
{"level":"info","message":"Neo4j insertion completed in 1771ms","service":"mindrune-api","timestamp":"2025-03-29 08:47:05"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:47:05"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-29 08:47:05"}
{"level":"info","message":"Total request processing time: 1789ms","service":"mindrune-api","timestamp":"2025-03-29 08:47:05"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:48:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:48:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 08:48:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:48:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 08:48:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:48:03"}
{"level":"info","message":"Data size: 9261 bytes","service":"mindrune-api","timestamp":"2025-03-29 08:48:03"}
{"level":"info","message":"Event count: 46","service":"mindrune-api","timestamp":"2025-03-29 08:48:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 08:48:03"}
{"level":"info","message":"Processing 46 events","service":"mindrune-api","timestamp":"2025-03-29 08:48:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 08:48:03"}
{"level":"info","message":"Player node updated in 102ms","service":"mindrune-api","timestamp":"2025-03-29 08:48:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 08:48:03"}
{"level":"info","message":"Processing batch of 15 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 08:48:03"}
{"level":"info","message":"Completed batch of 15 MENU_CLICK events in 674ms","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"Processing batch of 13 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blood Moon\",\"damage\":20,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"Processing 13 HIT_SPLAT events: 8 incoming, 5 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"3cbb92ef-fc9e-4f96-9197-d77421e58482_2\",\"timestamp\":\"2025-03-29T12:47:05.371946700Z\",\"damage\":0,\"formattedDamage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blood Moon\",\"isCharacter\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1393,\"locationY\":9635,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"Completed batch of 13 HIT_SPLAT events in 352ms","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 139ms","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 421ms","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"All events processed in 1586ms","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"Total Neo4j operation time: 1690ms","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"Neo4j session closed after 1690ms","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"Neo4j insertion completed in 1691ms","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"Total request processing time: 1708ms","service":"mindrune-api","timestamp":"2025-03-29 08:48:04"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-29 08:59:00"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-29 08:59:01"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Data size: 17517 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Event count: 84","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Processing 84 events","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Player node updated in 363ms","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Processing batch of 23 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:02:03"}
{"level":"info","message":"Completed batch of 23 MENU_CLICK events in 770ms","service":"mindrune-api","timestamp":"2025-03-29 09:02:04"}
{"level":"info","message":"Processing batch of 22 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 09:02:04"}
{"level":"info","message":"Completed batch of 22 XP_GAIN events in 127ms","service":"mindrune-api","timestamp":"2025-03-29 09:02:04"}
{"level":"info","message":"Processing batch of 39 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 09:02:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Frozen weapons</col>\",\"damage\":9,\"type\":43,\"typeString\":\"Max Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Max Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 09:02:04"}
{"level":"info","message":"Processing 39 HIT_SPLAT events: 20 incoming, 19 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 09:02:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"adc85a00-50d5-4455-a71b-abc5f304dc4f_22\",\"timestamp\":\"2025-03-29T13:01:33.050910400Z\",\"damage\":3,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isCharacter\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1442,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 09:02:04"}
{"level":"info","message":"Completed batch of 39 HIT_SPLAT events in 320ms","service":"mindrune-api","timestamp":"2025-03-29 09:02:04"}
{"level":"info","message":"All events processed in 1219ms","service":"mindrune-api","timestamp":"2025-03-29 09:02:04"}
{"level":"info","message":"Total Neo4j operation time: 1586ms","service":"mindrune-api","timestamp":"2025-03-29 09:02:04"}
{"level":"info","message":"Neo4j session closed after 1586ms","service":"mindrune-api","timestamp":"2025-03-29 09:02:04"}
{"level":"info","message":"Neo4j insertion completed in 1588ms","service":"mindrune-api","timestamp":"2025-03-29 09:02:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:02:04"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-29 09:02:04"}
{"level":"info","message":"Total request processing time: 1609ms","service":"mindrune-api","timestamp":"2025-03-29 09:02:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:03:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:03:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:03:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:03:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 09:03:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:03:03"}
{"level":"info","message":"Data size: 13842 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:03:03"}
{"level":"info","message":"Event count: 67","service":"mindrune-api","timestamp":"2025-03-29 09:03:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:03:03"}
{"level":"info","message":"Processing 67 events","service":"mindrune-api","timestamp":"2025-03-29 09:03:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:03:03"}
{"level":"info","message":"Player node updated in 99ms","service":"mindrune-api","timestamp":"2025-03-29 09:03:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 09:03:03"}
{"level":"info","message":"Processing batch of 24 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:03:03"}
{"level":"info","message":"Completed batch of 24 MENU_CLICK events in 686ms","service":"mindrune-api","timestamp":"2025-03-29 09:03:04"}
{"level":"info","message":"Processing batch of 29 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 09:03:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":8,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Damage\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 09:03:04"}
{"level":"info","message":"Processing 29 HIT_SPLAT events: 15 incoming, 14 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 09:03:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"99a3c784-85cb-4dfd-b237-208d4c491ba6_4\",\"timestamp\":\"2025-03-29T13:02:10.872645800Z\",\"damage\":8,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isCharacter\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1452,\"locationY\":9679,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 09:03:04"}
{"level":"info","message":"Completed batch of 29 HIT_SPLAT events in 206ms","service":"mindrune-api","timestamp":"2025-03-29 09:03:04"}
{"level":"info","message":"Processing batch of 14 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 09:03:04"}
{"level":"info","message":"Completed batch of 14 XP_GAIN events in 127ms","service":"mindrune-api","timestamp":"2025-03-29 09:03:04"}
{"level":"info","message":"All events processed in 1020ms","service":"mindrune-api","timestamp":"2025-03-29 09:03:04"}
{"level":"info","message":"Total Neo4j operation time: 1121ms","service":"mindrune-api","timestamp":"2025-03-29 09:03:04"}
{"level":"info","message":"Neo4j session closed after 1121ms","service":"mindrune-api","timestamp":"2025-03-29 09:03:04"}
{"level":"info","message":"Neo4j insertion completed in 1122ms","service":"mindrune-api","timestamp":"2025-03-29 09:03:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:03:04"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-29 09:03:04"}
{"level":"info","message":"Total request processing time: 1137ms","service":"mindrune-api","timestamp":"2025-03-29 09:03:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Data size: 1214 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Event count: 6","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Processing 6 events","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Completed batch of 5 MENU_CLICK events in 556ms","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 09:04:03"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 252ms","service":"mindrune-api","timestamp":"2025-03-29 09:04:04"}
{"level":"info","message":"All events processed in 809ms","service":"mindrune-api","timestamp":"2025-03-29 09:04:04"}
{"level":"info","message":"Total Neo4j operation time: 903ms","service":"mindrune-api","timestamp":"2025-03-29 09:04:04"}
{"level":"info","message":"Neo4j session closed after 903ms","service":"mindrune-api","timestamp":"2025-03-29 09:04:04"}
{"level":"info","message":"Neo4j insertion completed in 903ms","service":"mindrune-api","timestamp":"2025-03-29 09:04:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:04:04"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 09:04:04"}
{"level":"info","message":"Total request processing time: 918ms","service":"mindrune-api","timestamp":"2025-03-29 09:04:04"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-29 09:10:18"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-29 09:10:18"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Spam protection check completed in 9ms","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Data size: 2924 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Event count: 15","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Processing 15 events","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Player node updated in 378ms","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Processing batch of 11 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:11:03"}
{"level":"info","message":"Completed batch of 11 MENU_CLICK events in 692ms","service":"mindrune-api","timestamp":"2025-03-29 09:11:04"}
{"level":"info","message":"Processing batch of 2 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 09:11:04"}
{"level":"info","message":"Completed batch of 2 XP_GAIN events in 193ms","service":"mindrune-api","timestamp":"2025-03-29 09:11:04"}
{"level":"info","message":"Processing batch of 1 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 09:11:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Eclipse Moon\",\"damage\":4,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 09:11:04"}
{"level":"info","message":"Processing 1 HIT_SPLAT events: 0 incoming, 1 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 09:11:04"}
{"level":"error","message":"Error in Neo4j operations after 1438ms: Invalid input 'WHERE': expected 'FOREACH', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'WITH' or <EOF> (line 5, column 7 (offset: 113))\n\"      WHERE event.isTargetDamageType = false // Skip events where target is a damage type\"\n       ^","service":"mindrune-api","timestamp":"2025-03-29 09:11:04"}
{"level":"info","message":"Neo4j session closed after 1439ms","service":"mindrune-api","timestamp":"2025-03-29 09:11:04"}
{"level":"error","message":"Error processing create request after 1450ms: Invalid input 'WHERE': expected 'FOREACH', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'WITH' or <EOF> (line 5, column 7 (offset: 113))\n\"      WHERE event.isTargetDamageType = false // Skip events where target is a damage type\"\n       ^","service":"mindrune-api","timestamp":"2025-03-29 09:11:04"}
{"level":"error","message":"500 - Invalid input 'WHERE': expected 'FOREACH', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'WITH' or <EOF> (line 5, column 7 (offset: 113))\n\"      WHERE event.isTargetDamageType = false // Skip events where target is a damage type\"\n       ^ - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-29 09:11:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:12:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:12:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:12:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:12:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 09:12:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:12:03"}
{"level":"info","message":"Data size: 22157 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:12:03"}
{"level":"info","message":"Event count: 108","service":"mindrune-api","timestamp":"2025-03-29 09:12:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:12:03"}
{"level":"info","message":"Processing 108 events","service":"mindrune-api","timestamp":"2025-03-29 09:12:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:12:03"}
{"level":"info","message":"Player node updated in 105ms","service":"mindrune-api","timestamp":"2025-03-29 09:12:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 09:12:03"}
{"level":"info","message":"Processing batch of 29 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:12:03"}
{"level":"info","message":"Completed batch of 29 MENU_CLICK events in 659ms","service":"mindrune-api","timestamp":"2025-03-29 09:12:04"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 09:12:04"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 444ms","service":"mindrune-api","timestamp":"2025-03-29 09:12:04"}
{"level":"info","message":"Processing batch of 43 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 09:12:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Block\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Block\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-29 09:12:04"}
{"level":"info","message":"Processing 43 HIT_SPLAT events: 33 incoming, 10 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 09:12:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"d14a7f87-c566-4bf0-a0b7-f9fa2903b70c_4\",\"timestamp\":\"2025-03-29T13:11:07.925090200Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Block\",\"isAffliction\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1488,\"locationY\":9632,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 09:12:04"}
{"level":"error","message":"Error in Neo4j operations after 1469ms: Invalid input 'WHERE': expected 'FOREACH', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'WITH' or <EOF> (line 5, column 7 (offset: 113))\n\"      WHERE event.isTargetDamageType = false // Skip events where target is a damage type\"\n       ^","service":"mindrune-api","timestamp":"2025-03-29 09:12:04"}
{"level":"info","message":"Neo4j session closed after 1470ms","service":"mindrune-api","timestamp":"2025-03-29 09:12:04"}
{"level":"error","message":"Error processing create request after 1473ms: Invalid input 'WHERE': expected 'FOREACH', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'WITH' or <EOF> (line 5, column 7 (offset: 113))\n\"      WHERE event.isTargetDamageType = false // Skip events where target is a damage type\"\n       ^","service":"mindrune-api","timestamp":"2025-03-29 09:12:04"}
{"level":"error","message":"500 - Invalid input 'WHERE': expected 'FOREACH', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'WITH' or <EOF> (line 5, column 7 (offset: 113))\n\"      WHERE event.isTargetDamageType = false // Skip events where target is a damage type\"\n       ^ - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-29 09:12:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:13:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:13:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:13:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:13:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 09:13:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:13:03"}
{"level":"info","message":"Data size: 15397 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:13:03"}
{"level":"info","message":"Event count: 78","service":"mindrune-api","timestamp":"2025-03-29 09:13:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:13:03"}
{"level":"info","message":"Processing 78 events","service":"mindrune-api","timestamp":"2025-03-29 09:13:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:13:03"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-29 09:13:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 09:13:03"}
{"level":"info","message":"Processing batch of 44 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:13:03"}
{"level":"info","message":"Completed batch of 44 MENU_CLICK events in 680ms","service":"mindrune-api","timestamp":"2025-03-29 09:13:04"}
{"level":"info","message":"Processing batch of 24 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 09:13:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Eclipse Moon\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-29 09:13:04"}
{"level":"info","message":"Processing 24 HIT_SPLAT events: 16 incoming, 8 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 09:13:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"6912f316-d277-44cc-881d-bcc7e0e75453_34\",\"timestamp\":\"2025-03-29T13:12:32.524455500Z\",\"damage\":2,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isAffliction\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1487,\"locationY\":9629,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 09:13:04"}
{"level":"error","message":"Error in Neo4j operations after 1019ms: Invalid input 'WHERE': expected 'FOREACH', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'WITH' or <EOF> (line 5, column 7 (offset: 113))\n\"      WHERE event.isTargetDamageType = false // Skip events where target is a damage type\"\n       ^","service":"mindrune-api","timestamp":"2025-03-29 09:13:04"}
{"level":"info","message":"Neo4j session closed after 1020ms","service":"mindrune-api","timestamp":"2025-03-29 09:13:04"}
{"level":"error","message":"Error processing create request after 1022ms: Invalid input 'WHERE': expected 'FOREACH', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'WITH' or <EOF> (line 5, column 7 (offset: 113))\n\"      WHERE event.isTargetDamageType = false // Skip events where target is a damage type\"\n       ^","service":"mindrune-api","timestamp":"2025-03-29 09:13:04"}
{"level":"error","message":"500 - Invalid input 'WHERE': expected 'FOREACH', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'WITH' or <EOF> (line 5, column 7 (offset: 113))\n\"      WHERE event.isTargetDamageType = false // Skip events where target is a damage type\"\n       ^ - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-29 09:13:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Data size: 1032 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Event count: 5","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Processing 5 events","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 565ms","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 09:14:03"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 264ms","service":"mindrune-api","timestamp":"2025-03-29 09:14:04"}
{"level":"info","message":"All events processed in 830ms","service":"mindrune-api","timestamp":"2025-03-29 09:14:04"}
{"level":"info","message":"Total Neo4j operation time: 932ms","service":"mindrune-api","timestamp":"2025-03-29 09:14:04"}
{"level":"info","message":"Neo4j session closed after 932ms","service":"mindrune-api","timestamp":"2025-03-29 09:14:04"}
{"level":"info","message":"Neo4j insertion completed in 932ms","service":"mindrune-api","timestamp":"2025-03-29 09:14:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:14:04"}
{"level":"info","message":"SQL insertion completed in 16ms","service":"mindrune-api","timestamp":"2025-03-29 09:14:04"}
{"level":"info","message":"Total request processing time: 950ms","service":"mindrune-api","timestamp":"2025-03-29 09:14:04"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-29 09:15:52"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-29 09:15:52"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Data size: 286 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Player node updated in 355ms","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:16:03"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 614ms","service":"mindrune-api","timestamp":"2025-03-29 09:16:04"}
{"level":"info","message":"All events processed in 615ms","service":"mindrune-api","timestamp":"2025-03-29 09:16:04"}
{"level":"info","message":"Total Neo4j operation time: 975ms","service":"mindrune-api","timestamp":"2025-03-29 09:16:04"}
{"level":"info","message":"Neo4j session closed after 975ms","service":"mindrune-api","timestamp":"2025-03-29 09:16:04"}
{"level":"info","message":"Neo4j insertion completed in 977ms","service":"mindrune-api","timestamp":"2025-03-29 09:16:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:16:04"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 09:16:04"}
{"level":"info","message":"Total request processing time: 994ms","service":"mindrune-api","timestamp":"2025-03-29 09:16:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Data size: 1039 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 484ms","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Processing batch of 1 REWARD events","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Processing 1 rewards","service":"mindrune-api","timestamp":"2025-03-29 09:17:03"}
{"level":"info","message":"Processing 4 items from rewards","service":"mindrune-api","timestamp":"2025-03-29 09:17:04"}
{"level":"info","message":"Completed batch of 1 REWARD events in 260ms","service":"mindrune-api","timestamp":"2025-03-29 09:17:04"}
{"level":"info","message":"All events processed in 745ms","service":"mindrune-api","timestamp":"2025-03-29 09:17:04"}
{"level":"info","message":"Total Neo4j operation time: 840ms","service":"mindrune-api","timestamp":"2025-03-29 09:17:04"}
{"level":"info","message":"Neo4j session closed after 841ms","service":"mindrune-api","timestamp":"2025-03-29 09:17:04"}
{"level":"info","message":"Neo4j insertion completed in 841ms","service":"mindrune-api","timestamp":"2025-03-29 09:17:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:17:04"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 09:17:04"}
{"level":"info","message":"Total request processing time: 857ms","service":"mindrune-api","timestamp":"2025-03-29 09:17:04"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-29 09:21:57"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-29 09:21:57"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Data size: 2457 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Event count: 13","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Processing 13 events","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Player node updated in 355ms","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Processing batch of 12 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:24:03"}
{"level":"info","message":"Completed batch of 12 MENU_CLICK events in 402ms","service":"mindrune-api","timestamp":"2025-03-29 09:24:04"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 09:24:04"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 268ms","service":"mindrune-api","timestamp":"2025-03-29 09:24:04"}
{"level":"info","message":"All events processed in 670ms","service":"mindrune-api","timestamp":"2025-03-29 09:24:04"}
{"level":"info","message":"Total Neo4j operation time: 1029ms","service":"mindrune-api","timestamp":"2025-03-29 09:24:04"}
{"level":"info","message":"Neo4j session closed after 1030ms","service":"mindrune-api","timestamp":"2025-03-29 09:24:04"}
{"level":"info","message":"Neo4j insertion completed in 1031ms","service":"mindrune-api","timestamp":"2025-03-29 09:24:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:24:04"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-29 09:24:04"}
{"level":"info","message":"Total request processing time: 1050ms","service":"mindrune-api","timestamp":"2025-03-29 09:24:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:25:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:25:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:25:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:25:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 09:25:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:25:03"}
{"level":"info","message":"Data size: 23731 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:25:03"}
{"level":"info","message":"Event count: 117","service":"mindrune-api","timestamp":"2025-03-29 09:25:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:25:03"}
{"level":"info","message":"Processing 117 events","service":"mindrune-api","timestamp":"2025-03-29 09:25:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:25:03"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-29 09:25:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 09:25:03"}
{"level":"info","message":"Processing batch of 39 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:25:03"}
{"level":"info","message":"Completed batch of 39 MENU_CLICK events in 646ms","service":"mindrune-api","timestamp":"2025-03-29 09:25:04"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 09:25:04"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 416ms","service":"mindrune-api","timestamp":"2025-03-29 09:25:04"}
{"level":"info","message":"Processing batch of 41 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 09:25:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":12,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Damage\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 09:25:04"}
{"level":"info","message":"Processing 41 HIT_SPLAT events: 33 incoming, 8 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 09:25:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"aa81119f-2fe0-4ec5-b773-a34f23ef8ee2_11\",\"timestamp\":\"2025-03-29T13:24:13.412449200Z\",\"damage\":12,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1488,\"locationY\":9632,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 09:25:04"}
{"level":"error","message":"Error in Neo4j operations after 1263ms: All sub queries in an UNION must have the same return column names (line 47, column 9 (offset: 1594))\n\"        UNION\"\n         ^","service":"mindrune-api","timestamp":"2025-03-29 09:25:04"}
{"level":"info","message":"Neo4j session closed after 1264ms","service":"mindrune-api","timestamp":"2025-03-29 09:25:04"}
{"level":"error","message":"Error processing create request after 1266ms: All sub queries in an UNION must have the same return column names (line 47, column 9 (offset: 1594))\n\"        UNION\"\n         ^","service":"mindrune-api","timestamp":"2025-03-29 09:25:04"}
{"level":"error","message":"500 - All sub queries in an UNION must have the same return column names (line 47, column 9 (offset: 1594))\n\"        UNION\"\n         ^ - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-29 09:25:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Data size: 18696 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Event count: 94","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Processing 94 events","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Processing batch of 47 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Completed batch of 47 MENU_CLICK events in 391ms","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Processing batch of 30 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":6,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Damage\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Processing 30 HIT_SPLAT events: 20 incoming, 10 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"c1f133f7-4c14-4a9f-89e6-e65d84b23527_18\",\"timestamp\":\"2025-03-29T13:25:15.813228200Z\",\"damage\":6,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1482,\"locationY\":9629,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"error","message":"Error in Neo4j operations after 589ms: All sub queries in an UNION must have the same return column names (line 47, column 9 (offset: 1594))\n\"        UNION\"\n         ^","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Neo4j session closed after 589ms","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"error","message":"Error processing create request after 591ms: All sub queries in an UNION must have the same return column names (line 47, column 9 (offset: 1594))\n\"        UNION\"\n         ^","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"error","message":"500 - All sub queries in an UNION must have the same return column names (line 47, column 9 (offset: 1594))\n\"        UNION\"\n         ^ - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-29 09:26:03"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Data size: 4701 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Event count: 24","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Processing 24 events","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Player node updated in 106ms","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Processing batch of 11 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Completed batch of 11 MENU_CLICK events in 387ms","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Processing batch of 8 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Completed batch of 8 XP_GAIN events in 147ms","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Processing batch of 5 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Block\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Block\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Processing 5 HIT_SPLAT events: 5 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"7a9fd8c3-4c1b-49a6-9efd-07813dd9ae2a_4\",\"timestamp\":\"2025-03-29T13:26:05.612437300Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Block\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1488,\"locationY\":9632,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 09:27:03"}
{"level":"error","message":"Error in Neo4j operations after 742ms: All sub queries in an UNION must have the same return column names (line 47, column 9 (offset: 1594))\n\"        UNION\"\n         ^","service":"mindrune-api","timestamp":"2025-03-29 09:27:04"}
{"level":"info","message":"Neo4j session closed after 743ms","service":"mindrune-api","timestamp":"2025-03-29 09:27:04"}
{"level":"error","message":"Error processing create request after 747ms: All sub queries in an UNION must have the same return column names (line 47, column 9 (offset: 1594))\n\"        UNION\"\n         ^","service":"mindrune-api","timestamp":"2025-03-29 09:27:04"}
{"level":"error","message":"500 - All sub queries in an UNION must have the same return column names (line 47, column 9 (offset: 1594))\n\"        UNION\"\n         ^ - /osrs/create - POST - ::ffff:127.0.0.1","service":"mindrune-api","timestamp":"2025-03-29 09:27:04"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-29 09:27:54"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-29 09:27:54"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Data size: 1492 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Event count: 7","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Processing 7 events","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Player node updated in 363ms","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:28:03"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 627ms","service":"mindrune-api","timestamp":"2025-03-29 09:28:04"}
{"level":"info","message":"Processing batch of 2 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 09:28:04"}
{"level":"info","message":"Completed batch of 2 XP_GAIN events in 165ms","service":"mindrune-api","timestamp":"2025-03-29 09:28:04"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 09:28:04"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 380ms","service":"mindrune-api","timestamp":"2025-03-29 09:28:04"}
{"level":"info","message":"All events processed in 1174ms","service":"mindrune-api","timestamp":"2025-03-29 09:28:04"}
{"level":"info","message":"Total Neo4j operation time: 1540ms","service":"mindrune-api","timestamp":"2025-03-29 09:28:04"}
{"level":"info","message":"Neo4j session closed after 1540ms","service":"mindrune-api","timestamp":"2025-03-29 09:28:04"}
{"level":"info","message":"Neo4j insertion completed in 1542ms","service":"mindrune-api","timestamp":"2025-03-29 09:28:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:28:04"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 09:28:04"}
{"level":"info","message":"Total request processing time: 1558ms","service":"mindrune-api","timestamp":"2025-03-29 09:28:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Data size: 9239 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Event count: 48","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Processing 48 events","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Processing batch of 12 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Completed batch of 12 INVENTORY_CHANGE events in 264ms","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Processing batch of 31 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:29:03"}
{"level":"info","message":"Completed batch of 31 MENU_CLICK events in 363ms","service":"mindrune-api","timestamp":"2025-03-29 09:29:04"}
{"level":"info","message":"Processing batch of 5 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 09:29:04"}
{"level":"info","message":"Completed batch of 5 XP_GAIN events in 170ms","service":"mindrune-api","timestamp":"2025-03-29 09:29:04"}
{"level":"info","message":"All events processed in 798ms","service":"mindrune-api","timestamp":"2025-03-29 09:29:04"}
{"level":"info","message":"Total Neo4j operation time: 893ms","service":"mindrune-api","timestamp":"2025-03-29 09:29:04"}
{"level":"info","message":"Neo4j session closed after 893ms","service":"mindrune-api","timestamp":"2025-03-29 09:29:04"}
{"level":"info","message":"Neo4j insertion completed in 894ms","service":"mindrune-api","timestamp":"2025-03-29 09:29:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:29:04"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 09:29:04"}
{"level":"info","message":"Total request processing time: 909ms","service":"mindrune-api","timestamp":"2025-03-29 09:29:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Data size: 2028 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Event count: 10","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Processing 10 events","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Player node updated in 97ms","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Completed batch of 5 MENU_CLICK events in 502ms","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Processing batch of 2 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 09:30:03"}
{"level":"info","message":"Completed batch of 2 XP_GAIN events in 166ms","service":"mindrune-api","timestamp":"2025-03-29 09:30:04"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 09:30:04"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 402ms","service":"mindrune-api","timestamp":"2025-03-29 09:30:04"}
{"level":"info","message":"All events processed in 1070ms","service":"mindrune-api","timestamp":"2025-03-29 09:30:04"}
{"level":"info","message":"Total Neo4j operation time: 1168ms","service":"mindrune-api","timestamp":"2025-03-29 09:30:04"}
{"level":"info","message":"Neo4j session closed after 1168ms","service":"mindrune-api","timestamp":"2025-03-29 09:30:04"}
{"level":"info","message":"Neo4j insertion completed in 1169ms","service":"mindrune-api","timestamp":"2025-03-29 09:30:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:30:04"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 09:30:04"}
{"level":"info","message":"Total request processing time: 1184ms","service":"mindrune-api","timestamp":"2025-03-29 09:30:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Data size: 5937 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Event count: 25","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Processing 25 events","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 564ms","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Processing batch of 5 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 09:31:03"}
{"level":"info","message":"Completed batch of 5 XP_GAIN events in 168ms","service":"mindrune-api","timestamp":"2025-03-29 09:31:04"}
{"level":"info","message":"Processing batch of 16 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 09:31:04"}
{"level":"info","message":"Completed batch of 16 INVENTORY_CHANGE events in 173ms","service":"mindrune-api","timestamp":"2025-03-29 09:31:04"}
{"level":"info","message":"All events processed in 907ms","service":"mindrune-api","timestamp":"2025-03-29 09:31:04"}
{"level":"info","message":"Total Neo4j operation time: 1002ms","service":"mindrune-api","timestamp":"2025-03-29 09:31:04"}
{"level":"info","message":"Neo4j session closed after 1002ms","service":"mindrune-api","timestamp":"2025-03-29 09:31:04"}
{"level":"info","message":"Neo4j insertion completed in 1004ms","service":"mindrune-api","timestamp":"2025-03-29 09:31:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:31:04"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-29 09:31:04"}
{"level":"info","message":"Total request processing time: 1022ms","service":"mindrune-api","timestamp":"2025-03-29 09:31:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:32:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:32:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:32:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:32:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 09:32:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:32:03"}
{"level":"info","message":"Data size: 16005 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:32:03"}
{"level":"info","message":"Event count: 79","service":"mindrune-api","timestamp":"2025-03-29 09:32:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:32:03"}
{"level":"info","message":"Processing 79 events","service":"mindrune-api","timestamp":"2025-03-29 09:32:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:32:03"}
{"level":"info","message":"Player node updated in 112ms","service":"mindrune-api","timestamp":"2025-03-29 09:32:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 09:32:03"}
{"level":"info","message":"Processing batch of 32 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:32:03"}
{"level":"info","message":"Completed batch of 32 MENU_CLICK events in 580ms","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"Processing batch of 22 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"Completed batch of 22 XP_GAIN events in 128ms","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 404ms","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"Processing batch of 22 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"Processing 22 HIT_SPLAT events: 8 incoming, 14 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"85d593b2-43af-4016-ba42-ba2b88d287ae_23\",\"timestamp\":\"2025-03-29T13:31:33.253339400Z\",\"damage\":1,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1437,\"locationY\":9680,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"Completed batch of 22 HIT_SPLAT events in 284ms","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"All events processed in 1399ms","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"Total Neo4j operation time: 1513ms","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"Neo4j session closed after 1513ms","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"Neo4j insertion completed in 1513ms","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"Total request processing time: 1530ms","service":"mindrune-api","timestamp":"2025-03-29 09:32:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Data size: 16035 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Event count: 75","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Processing 75 events","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 236ms","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Processing batch of 15 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:33:03"}
{"level":"info","message":"Completed batch of 15 MENU_CLICK events in 464ms","service":"mindrune-api","timestamp":"2025-03-29 09:33:04"}
{"level":"info","message":"Processing batch of 20 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 09:33:04"}
{"level":"info","message":"Completed batch of 20 XP_GAIN events in 98ms","service":"mindrune-api","timestamp":"2025-03-29 09:33:04"}
{"level":"info","message":"Processing batch of 39 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 09:33:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":20,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 09:33:04"}
{"level":"info","message":"Processing 39 HIT_SPLAT events: 18 incoming, 21 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 09:33:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"b6ba2ee9-573b-490a-80da-4d853f04a509_11\",\"timestamp\":\"2025-03-29T13:32:16.451832300Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1441,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 09:33:04"}
{"level":"info","message":"Completed batch of 39 HIT_SPLAT events in 260ms","service":"mindrune-api","timestamp":"2025-03-29 09:33:04"}
{"level":"info","message":"All events processed in 1060ms","service":"mindrune-api","timestamp":"2025-03-29 09:33:04"}
{"level":"info","message":"Total Neo4j operation time: 1156ms","service":"mindrune-api","timestamp":"2025-03-29 09:33:04"}
{"level":"info","message":"Neo4j session closed after 1156ms","service":"mindrune-api","timestamp":"2025-03-29 09:33:04"}
{"level":"info","message":"Neo4j insertion completed in 1157ms","service":"mindrune-api","timestamp":"2025-03-29 09:33:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:33:04"}
{"level":"info","message":"SQL insertion completed in 50ms","service":"mindrune-api","timestamp":"2025-03-29 09:33:04"}
{"level":"info","message":"Total request processing time: 1208ms","service":"mindrune-api","timestamp":"2025-03-29 09:33:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:34:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:34:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:34:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:34:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 09:34:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:34:03"}
{"level":"info","message":"Data size: 5413 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:34:03"}
{"level":"info","message":"Event count: 25","service":"mindrune-api","timestamp":"2025-03-29 09:34:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:34:03"}
{"level":"info","message":"Processing 25 events","service":"mindrune-api","timestamp":"2025-03-29 09:34:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:34:03"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-29 09:34:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 09:34:03"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:34:03"}
{"level":"info","message":"Completed batch of 5 MENU_CLICK events in 599ms","service":"mindrune-api","timestamp":"2025-03-29 09:34:04"}
{"level":"info","message":"Processing batch of 8 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 09:34:04"}
{"level":"info","message":"Completed batch of 8 XP_GAIN events in 97ms","service":"mindrune-api","timestamp":"2025-03-29 09:34:04"}
{"level":"info","message":"Processing batch of 12 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 09:34:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":18,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 09:34:04"}
{"level":"info","message":"Processing 12 HIT_SPLAT events: 4 incoming, 8 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 09:34:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"4206e95f-dea2-4dde-bb21-45b25d538ea5_10\",\"timestamp\":\"2025-03-29T13:33:15.272778400Z\",\"damage\":1,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 09:34:04"}
{"level":"info","message":"Completed batch of 12 HIT_SPLAT events in 320ms","service":"mindrune-api","timestamp":"2025-03-29 09:34:04"}
{"level":"info","message":"All events processed in 1017ms","service":"mindrune-api","timestamp":"2025-03-29 09:34:04"}
{"level":"info","message":"Total Neo4j operation time: 1113ms","service":"mindrune-api","timestamp":"2025-03-29 09:34:04"}
{"level":"info","message":"Neo4j session closed after 1113ms","service":"mindrune-api","timestamp":"2025-03-29 09:34:04"}
{"level":"info","message":"Neo4j insertion completed in 1113ms","service":"mindrune-api","timestamp":"2025-03-29 09:34:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:34:04"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-29 09:34:04"}
{"level":"info","message":"Total request processing time: 1129ms","service":"mindrune-api","timestamp":"2025-03-29 09:34:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:35:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:35:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:35:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:35:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 09:35:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:35:03"}
{"level":"info","message":"Data size: 19452 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:35:03"}
{"level":"info","message":"Event count: 96","service":"mindrune-api","timestamp":"2025-03-29 09:35:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:35:03"}
{"level":"info","message":"Processing 96 events","service":"mindrune-api","timestamp":"2025-03-29 09:35:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:35:03"}
{"level":"info","message":"Player node updated in 130ms","service":"mindrune-api","timestamp":"2025-03-29 09:35:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 09:35:03"}
{"level":"info","message":"Processing batch of 24 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:35:03"}
{"level":"info","message":"Completed batch of 24 MENU_CLICK events in 693ms","service":"mindrune-api","timestamp":"2025-03-29 09:35:04"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 09:35:04"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 449ms","service":"mindrune-api","timestamp":"2025-03-29 09:35:04"}
{"level":"info","message":"Processing batch of 40 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 09:35:04"}
{"level":"info","message":"Completed batch of 40 XP_GAIN events in 128ms","service":"mindrune-api","timestamp":"2025-03-29 09:35:04"}
{"level":"info","message":"Processing batch of 30 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 09:35:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blood Moon\",\"damage\":30,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 09:35:04"}
{"level":"info","message":"Processing 30 HIT_SPLAT events: 18 incoming, 12 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 09:35:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"760d7ba8-d106-4106-be40-173030faa5c7_27\",\"timestamp\":\"2025-03-29T13:34:43.474040900Z\",\"damage\":2,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blood Moon\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1390,\"locationY\":9629,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 09:35:04"}
{"level":"info","message":"Completed batch of 30 HIT_SPLAT events in 263ms","service":"mindrune-api","timestamp":"2025-03-29 09:35:04"}
{"level":"info","message":"All events processed in 1534ms","service":"mindrune-api","timestamp":"2025-03-29 09:35:04"}
{"level":"info","message":"Total Neo4j operation time: 1665ms","service":"mindrune-api","timestamp":"2025-03-29 09:35:04"}
{"level":"info","message":"Neo4j session closed after 1666ms","service":"mindrune-api","timestamp":"2025-03-29 09:35:04"}
{"level":"info","message":"Neo4j insertion completed in 1667ms","service":"mindrune-api","timestamp":"2025-03-29 09:35:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:35:04"}
{"level":"info","message":"SQL insertion completed in 26ms","service":"mindrune-api","timestamp":"2025-03-29 09:35:05"}
{"level":"info","message":"Total request processing time: 1696ms","service":"mindrune-api","timestamp":"2025-03-29 09:35:05"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:36:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:36:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:36:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:36:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 09:36:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:36:03"}
{"level":"info","message":"Data size: 17399 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:36:03"}
{"level":"info","message":"Event count: 86","service":"mindrune-api","timestamp":"2025-03-29 09:36:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:36:03"}
{"level":"info","message":"Processing 86 events","service":"mindrune-api","timestamp":"2025-03-29 09:36:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:36:03"}
{"level":"info","message":"Player node updated in 103ms","service":"mindrune-api","timestamp":"2025-03-29 09:36:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 09:36:03"}
{"level":"info","message":"Processing batch of 24 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:36:03"}
{"level":"info","message":"Completed batch of 24 MENU_CLICK events in 745ms","service":"mindrune-api","timestamp":"2025-03-29 09:36:04"}
{"level":"info","message":"Processing batch of 32 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 09:36:04"}
{"level":"info","message":"Completed batch of 32 XP_GAIN events in 126ms","service":"mindrune-api","timestamp":"2025-03-29 09:36:04"}
{"level":"info","message":"Processing batch of 30 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 09:36:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blood Moon\",\"damage\":8,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 09:36:04"}
{"level":"info","message":"Processing 30 HIT_SPLAT events: 19 incoming, 11 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 09:36:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"13899930-5e44-4ea8-90b1-2bad3d17a56c_19\",\"timestamp\":\"2025-03-29T13:35:23.672995700Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blood Moon\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1394,\"locationY\":9635,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 09:36:04"}
{"level":"info","message":"Completed batch of 30 HIT_SPLAT events in 193ms","service":"mindrune-api","timestamp":"2025-03-29 09:36:04"}
{"level":"info","message":"All events processed in 1064ms","service":"mindrune-api","timestamp":"2025-03-29 09:36:04"}
{"level":"info","message":"Total Neo4j operation time: 1168ms","service":"mindrune-api","timestamp":"2025-03-29 09:36:04"}
{"level":"info","message":"Neo4j session closed after 1169ms","service":"mindrune-api","timestamp":"2025-03-29 09:36:04"}
{"level":"info","message":"Neo4j insertion completed in 1169ms","service":"mindrune-api","timestamp":"2025-03-29 09:36:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:36:04"}
{"level":"info","message":"SQL insertion completed in 23ms","service":"mindrune-api","timestamp":"2025-03-29 09:36:04"}
{"level":"info","message":"Total request processing time: 1194ms","service":"mindrune-api","timestamp":"2025-03-29 09:36:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Data size: 1702 bytes","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Event count: 7","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Processing 7 events","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Player node updated in 126ms","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Processing batch of 6 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Completed batch of 6 MENU_CLICK events in 530ms","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Processing batch of 1 REWARD events","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Processing 1 rewards","service":"mindrune-api","timestamp":"2025-03-29 09:42:03"}
{"level":"info","message":"Processing 4 items from rewards","service":"mindrune-api","timestamp":"2025-03-29 09:42:04"}
{"level":"info","message":"Completed batch of 1 REWARD events in 258ms","service":"mindrune-api","timestamp":"2025-03-29 09:42:04"}
{"level":"info","message":"All events processed in 790ms","service":"mindrune-api","timestamp":"2025-03-29 09:42:04"}
{"level":"info","message":"Total Neo4j operation time: 917ms","service":"mindrune-api","timestamp":"2025-03-29 09:42:04"}
{"level":"info","message":"Neo4j session closed after 917ms","service":"mindrune-api","timestamp":"2025-03-29 09:42:04"}
{"level":"info","message":"Neo4j insertion completed in 918ms","service":"mindrune-api","timestamp":"2025-03-29 09:42:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 09:42:04"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-29 09:42:04"}
{"level":"info","message":"Total request processing time: 935ms","service":"mindrune-api","timestamp":"2025-03-29 09:42:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:15:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:15:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 10:15:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:15:03"}
{"level":"info","message":"Spam protection check completed in 4ms","service":"mindrune-api","timestamp":"2025-03-29 10:15:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:15:03"}
{"level":"info","message":"Data size: 2878 bytes","service":"mindrune-api","timestamp":"2025-03-29 10:15:03"}
{"level":"info","message":"Event count: 15","service":"mindrune-api","timestamp":"2025-03-29 10:15:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:15:03"}
{"level":"info","message":"Processing 15 events","service":"mindrune-api","timestamp":"2025-03-29 10:15:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 10:15:03"}
{"level":"info","message":"Player node updated in 137ms","service":"mindrune-api","timestamp":"2025-03-29 10:15:03"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 10:15:03"}
{"level":"info","message":"Processing batch of 12 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 10:15:03"}
{"level":"info","message":"Completed batch of 12 MENU_CLICK events in 671ms","service":"mindrune-api","timestamp":"2025-03-29 10:15:04"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 10:15:04"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 453ms","service":"mindrune-api","timestamp":"2025-03-29 10:15:04"}
{"level":"info","message":"All events processed in 1124ms","service":"mindrune-api","timestamp":"2025-03-29 10:15:04"}
{"level":"info","message":"Total Neo4j operation time: 1261ms","service":"mindrune-api","timestamp":"2025-03-29 10:15:04"}
{"level":"info","message":"Neo4j session closed after 1262ms","service":"mindrune-api","timestamp":"2025-03-29 10:15:04"}
{"level":"info","message":"Neo4j insertion completed in 1263ms","service":"mindrune-api","timestamp":"2025-03-29 10:15:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 10:15:04"}
{"level":"info","message":"SQL insertion completed in 27ms","service":"mindrune-api","timestamp":"2025-03-29 10:15:04"}
{"level":"info","message":"Total request processing time: 1295ms","service":"mindrune-api","timestamp":"2025-03-29 10:15:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Data size: 20361 bytes","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Event count: 97","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Processing 97 events","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Player node updated in 95ms","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Completed batch of 5 MENU_CLICK events in 540ms","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Processing batch of 60 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 10:16:03"}
{"level":"info","message":"Completed batch of 60 XP_GAIN events in 129ms","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"Processing batch of 29 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":29,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"Processing 29 HIT_SPLAT events: 13 incoming, 16 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"759bf625-5c28-4099-9dfe-618dcac2697e_8\",\"timestamp\":\"2025-03-29T14:15:07.121802100Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Grimy Lizard\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1508,\"locationY\":9715,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"Completed batch of 29 HIT_SPLAT events in 277ms","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"Processing batch of 3 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"Processing 3 monster kills","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"Completed batch of 3 MONSTER_KILL events in 200ms","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"All events processed in 1147ms","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"Total Neo4j operation time: 1243ms","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"Neo4j session closed after 1243ms","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"Neo4j insertion completed in 1244ms","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"SQL insertion completed in 27ms","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"Total request processing time: 1274ms","service":"mindrune-api","timestamp":"2025-03-29 10:16:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Data size: 802 bytes","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Player node updated in 105ms","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":3,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Poison\",\"typeString\":\"Poison\"}","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"983e8abb-3967-4762-b1fb-cb99a3105056_0\",\"timestamp\":\"2025-03-29T14:16:20.340939Z\",\"damage\":3,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"isAffliction\":true,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1498,\"locationY\":9712,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 223ms","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"All events processed in 224ms","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Total Neo4j operation time: 332ms","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Neo4j session closed after 332ms","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Neo4j insertion completed in 332ms","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Total request processing time: 347ms","service":"mindrune-api","timestamp":"2025-03-29 10:17:03"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Data size: 811 bytes","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Player node updated in 99ms","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":2,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Poison\",\"typeString\":\"Poison\"}","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"37e5e22b-3c12-4059-859f-af007ffe101b_0\",\"timestamp\":\"2025-03-29T14:17:14.341401700Z\",\"damage\":2,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"isAffliction\":true,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1498,\"locationY\":9712,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 188ms","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"All events processed in 188ms","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Total Neo4j operation time: 289ms","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Neo4j session closed after 289ms","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Neo4j insertion completed in 289ms","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Total request processing time: 302ms","service":"mindrune-api","timestamp":"2025-03-29 10:18:03"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Data size: 1043 bytes","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":1,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Poison\",\"typeString\":\"Poison\"}","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 4 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"8a11b68a-d050-4d56-82dc-e2b23f7431c2_0\",\"timestamp\":\"2025-03-29T14:18:08.341002600Z\",\"damage\":1,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"isAffliction\":true,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1498,\"locationY\":9712,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 165ms","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"All events processed in 165ms","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Total Neo4j operation time: 259ms","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Neo4j session closed after 260ms","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Neo4j insertion completed in 260ms","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Total request processing time: 273ms","service":"mindrune-api","timestamp":"2025-03-29 10:19:03"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Data size: 347 bytes","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Processing batch of 1 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":1,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Poison\",\"typeString\":\"Poison\"}","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Processing 1 HIT_SPLAT events: 1 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"1e3a3995-b36b-46bd-b170-76143050272c_0\",\"timestamp\":\"2025-03-29T14:19:20.340970800Z\",\"damage\":1,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"isAffliction\":true,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1498,\"locationY\":9712,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Completed batch of 1 HIT_SPLAT events in 250ms","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"All events processed in 250ms","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Total Neo4j operation time: 343ms","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Neo4j session closed after 343ms","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Neo4j insertion completed in 345ms","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"info","message":"Total request processing time: 357ms","service":"mindrune-api","timestamp":"2025-03-29 10:20:03"}
{"level":"error","message":"Neo4j error: Unknown function 'starts_with' (line 10, column 14 (offset: 332))\n\"          OR starts_with(type(r1), 'PERFORMED')\"\n              ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n        MATCH (p:Player {account: $account})\n        \n        // For multi-player, we'll get fewer events per player\n        WITH p\n        \n        // First get events where player is the target\n        OPTIONAL MATCH (e1)-[r1]->(p)\n        WHERE type(r1) IN ['PERFORMED_BY', 'GAINED_BY', 'RECEIVED_BY', 'TARGETED'] \n          OR starts_with(type(r1), 'PERFORMED') \n          OR starts_with(type(r1), 'TARGETED')\n        \n        // Also get events where player is the source\n        OPTIONAL MATCH (p)-[r2]->(e2)\n        WHERE type(r2) IN ['PERFORMED', 'KILLED'] \n          OR starts_with(type(r2), 'PERFORMED')\n        \n        // Group by player and collect events\n        WITH p, collect(distinct e1) + collect(distinct e2) as player_events\n        \n        // Limit events per player and collect all players\n        WITH p, player_events[0..500] as limited_events\n        ORDER BY p.playerId\n        \n        // Collect all players and their events\n        WITH collect({player: p, events: limited_events}) as player_data\n        \n        // Unwind and collect all events\n        UNWIND player_data as pd\n        UNWIND pd.events as event\n        WITH collect(distinct pd.player) as players, collect(distinct event) as events\n        \n        // Now process relationships for these events\n        UNWIND events as e\n        \n        // Get outgoing relationships from events\n        OPTIONAL MATCH (e)-[r1]->(n1)\n        WHERE NOT type(r1) IN ['PART_OF']\n        \n        // Get incoming relationships to events\n        OPTIONAL MATCH (n2)-[r2]->(e)\n        WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n        \n        RETURN \n          players,\n          events,\n          collect(distinct n1) + collect(distinct n2) as entities,\n          collect(distinct r1) + collect(distinct r2) as relationships\n        ","service":"mindrune-api","timestamp":"2025-03-29 14:15:36"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'starts_with' (line 10, column 14 (offset: 332))\n\"          OR starts_with(type(r1), 'PERFORMED')\"\n              ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 14:15:36"}
{"level":"error","message":"Neo4j error: Unknown function 'starts_with' (line 10, column 14 (offset: 332))\n\"          OR starts_with(type(r1), 'PERFORMED')\"\n              ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n        MATCH (p:Player {account: $account})\n        \n        // For multi-player, we'll get fewer events per player\n        WITH p\n        \n        // First get events where player is the target\n        OPTIONAL MATCH (e1)-[r1]->(p)\n        WHERE type(r1) IN ['PERFORMED_BY', 'GAINED_BY', 'RECEIVED_BY', 'TARGETED'] \n          OR starts_with(type(r1), 'PERFORMED') \n          OR starts_with(type(r1), 'TARGETED')\n        \n        // Also get events where player is the source\n        OPTIONAL MATCH (p)-[r2]->(e2)\n        WHERE type(r2) IN ['PERFORMED', 'KILLED'] \n          OR starts_with(type(r2), 'PERFORMED')\n        \n        // Group by player and collect events\n        WITH p, collect(distinct e1) + collect(distinct e2) as player_events\n        \n        // Limit events per player and collect all players\n        WITH p, player_events[0..500] as limited_events\n        ORDER BY p.playerId\n        \n        // Collect all players and their events\n        WITH collect({player: p, events: limited_events}) as player_data\n        \n        // Unwind and collect all events\n        UNWIND player_data as pd\n        UNWIND pd.events as event\n        WITH collect(distinct pd.player) as players, collect(distinct event) as events\n        \n        // Now process relationships for these events\n        UNWIND events as e\n        \n        // Get outgoing relationships from events\n        OPTIONAL MATCH (e)-[r1]->(n1)\n        WHERE NOT type(r1) IN ['PART_OF']\n        \n        // Get incoming relationships to events\n        OPTIONAL MATCH (n2)-[r2]->(e)\n        WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n        \n        RETURN \n          players,\n          events,\n          collect(distinct n1) + collect(distinct n2) as entities,\n          collect(distinct r1) + collect(distinct r2) as relationships\n        ","service":"mindrune-api","timestamp":"2025-03-29 14:15:36"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'starts_with' (line 10, column 14 (offset: 332))\n\"          OR starts_with(type(r1), 'PERFORMED')\"\n              ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 14:15:36"}
{"level":"error","message":"Neo4j error: Unknown function 'starts_with' (line 10, column 14 (offset: 332))\n\"          OR starts_with(type(r1), 'PERFORMED')\"\n              ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n        MATCH (p:Player {account: $account})\n        \n        // For multi-player, we'll get fewer events per player\n        WITH p\n        \n        // First get events where player is the target\n        OPTIONAL MATCH (e1)-[r1]->(p)\n        WHERE type(r1) IN ['PERFORMED_BY', 'GAINED_BY', 'RECEIVED_BY', 'TARGETED'] \n          OR starts_with(type(r1), 'PERFORMED') \n          OR starts_with(type(r1), 'TARGETED')\n        \n        // Also get events where player is the source\n        OPTIONAL MATCH (p)-[r2]->(e2)\n        WHERE type(r2) IN ['PERFORMED', 'KILLED'] \n          OR starts_with(type(r2), 'PERFORMED')\n        \n        // Group by player and collect events\n        WITH p, collect(distinct e1) + collect(distinct e2) as player_events\n        \n        // Limit events per player and collect all players\n        WITH p, player_events[0..500] as limited_events\n        ORDER BY p.playerId\n        \n        // Collect all players and their events\n        WITH collect({player: p, events: limited_events}) as player_data\n        \n        // Unwind and collect all events\n        UNWIND player_data as pd\n        UNWIND pd.events as event\n        WITH collect(distinct pd.player) as players, collect(distinct event) as events\n        \n        // Now process relationships for these events\n        UNWIND events as e\n        \n        // Get outgoing relationships from events\n        OPTIONAL MATCH (e)-[r1]->(n1)\n        WHERE NOT type(r1) IN ['PART_OF']\n        \n        // Get incoming relationships to events\n        OPTIONAL MATCH (n2)-[r2]->(e)\n        WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n        \n        RETURN \n          players,\n          events,\n          collect(distinct n1) + collect(distinct n2) as entities,\n          collect(distinct r1) + collect(distinct r2) as relationships\n        ","service":"mindrune-api","timestamp":"2025-03-29 14:15:42"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'starts_with' (line 10, column 14 (offset: 332))\n\"          OR starts_with(type(r1), 'PERFORMED')\"\n              ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 14:15:42"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:51:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:51:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 15:51:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:51:03"}
{"level":"info","message":"Spam protection check completed in 4ms","service":"mindrune-api","timestamp":"2025-03-29 15:51:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:51:03"}
{"level":"info","message":"Data size: 4376 bytes","service":"mindrune-api","timestamp":"2025-03-29 15:51:03"}
{"level":"info","message":"Event count: 23","service":"mindrune-api","timestamp":"2025-03-29 15:51:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:51:03"}
{"level":"info","message":"Processing 23 events","service":"mindrune-api","timestamp":"2025-03-29 15:51:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 15:51:03"}
{"level":"info","message":"Player node updated in 127ms","service":"mindrune-api","timestamp":"2025-03-29 15:51:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 15:51:03"}
{"level":"info","message":"Processing batch of 19 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 15:51:03"}
{"level":"info","message":"Completed batch of 19 MENU_CLICK events in 726ms","service":"mindrune-api","timestamp":"2025-03-29 15:51:04"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 15:51:04"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 449ms","service":"mindrune-api","timestamp":"2025-03-29 15:51:04"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-29 15:51:04"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-29 15:51:04"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 235ms","service":"mindrune-api","timestamp":"2025-03-29 15:51:05"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 15:51:05"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 125ms","service":"mindrune-api","timestamp":"2025-03-29 15:51:05"}
{"level":"info","message":"All events processed in 1538ms","service":"mindrune-api","timestamp":"2025-03-29 15:51:05"}
{"level":"info","message":"Total Neo4j operation time: 1666ms","service":"mindrune-api","timestamp":"2025-03-29 15:51:05"}
{"level":"info","message":"Neo4j session closed after 1667ms","service":"mindrune-api","timestamp":"2025-03-29 15:51:05"}
{"level":"info","message":"Neo4j insertion completed in 1667ms","service":"mindrune-api","timestamp":"2025-03-29 15:51:05"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 15:51:05"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-29 15:51:05"}
{"level":"info","message":"Total request processing time: 1686ms","service":"mindrune-api","timestamp":"2025-03-29 15:51:05"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:52:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:52:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 15:52:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:52:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 15:52:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:52:03"}
{"level":"info","message":"Data size: 18131 bytes","service":"mindrune-api","timestamp":"2025-03-29 15:52:03"}
{"level":"info","message":"Event count: 86","service":"mindrune-api","timestamp":"2025-03-29 15:52:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:52:03"}
{"level":"info","message":"Processing 86 events","service":"mindrune-api","timestamp":"2025-03-29 15:52:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 15:52:03"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-29 15:52:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 15:52:03"}
{"level":"info","message":"Processing batch of 19 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 15:52:03"}
{"level":"info","message":"Completed batch of 19 MENU_CLICK events in 750ms","service":"mindrune-api","timestamp":"2025-03-29 15:52:04"}
{"level":"info","message":"Processing batch of 26 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 15:52:04"}
{"level":"info","message":"Completed batch of 26 XP_GAIN events in 130ms","service":"mindrune-api","timestamp":"2025-03-29 15:52:04"}
{"level":"info","message":"Processing batch of 41 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 15:52:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":20,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 15:52:04"}
{"level":"info","message":"Processing 41 HIT_SPLAT events: 18 incoming, 23 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 15:52:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"bc6f0676-40d8-4e9c-9b2e-6e35f153b628_16\",\"timestamp\":\"2025-03-29T19:51:31.982147400Z\",\"damage\":4,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 15:52:04"}
{"level":"info","message":"Completed batch of 41 HIT_SPLAT events in 286ms","service":"mindrune-api","timestamp":"2025-03-29 15:52:04"}
{"level":"info","message":"All events processed in 1166ms","service":"mindrune-api","timestamp":"2025-03-29 15:52:04"}
{"level":"info","message":"Total Neo4j operation time: 1269ms","service":"mindrune-api","timestamp":"2025-03-29 15:52:04"}
{"level":"info","message":"Neo4j session closed after 1269ms","service":"mindrune-api","timestamp":"2025-03-29 15:52:04"}
{"level":"info","message":"Neo4j insertion completed in 1269ms","service":"mindrune-api","timestamp":"2025-03-29 15:52:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 15:52:04"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-29 15:52:04"}
{"level":"info","message":"Total request processing time: 1286ms","service":"mindrune-api","timestamp":"2025-03-29 15:52:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Data size: 15149 bytes","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Event count: 74","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Processing 74 events","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Processing batch of 20 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Completed batch of 20 XP_GAIN events in 98ms","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Processing batch of 28 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Frozen weapons</col>\",\"damage\":10,\"type\":43,\"typeString\":\"Max Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Max Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Processing 28 HIT_SPLAT events: 14 incoming, 14 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"e9806fbe-de23-4713-a909-f03901a79038_25\",\"timestamp\":\"2025-03-29T19:52:28.381260500Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1441,\"locationY\":9683,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Completed batch of 28 HIT_SPLAT events in 194ms","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Processing batch of 25 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 15:53:03"}
{"level":"info","message":"Completed batch of 25 MENU_CLICK events in 353ms","service":"mindrune-api","timestamp":"2025-03-29 15:53:04"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 15:53:04"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 318ms","service":"mindrune-api","timestamp":"2025-03-29 15:53:04"}
{"level":"info","message":"All events processed in 965ms","service":"mindrune-api","timestamp":"2025-03-29 15:53:04"}
{"level":"info","message":"Total Neo4j operation time: 1058ms","service":"mindrune-api","timestamp":"2025-03-29 15:53:04"}
{"level":"info","message":"Neo4j session closed after 1059ms","service":"mindrune-api","timestamp":"2025-03-29 15:53:04"}
{"level":"info","message":"Neo4j insertion completed in 1060ms","service":"mindrune-api","timestamp":"2025-03-29 15:53:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 15:53:04"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-29 15:53:04"}
{"level":"info","message":"Total request processing time: 1073ms","service":"mindrune-api","timestamp":"2025-03-29 15:53:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:54:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:54:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 15:54:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:54:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 15:54:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:54:03"}
{"level":"info","message":"Data size: 676 bytes","service":"mindrune-api","timestamp":"2025-03-29 15:54:03"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-29 15:54:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 15:54:03"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-29 15:54:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 15:54:03"}
{"level":"info","message":"Player node updated in 108ms","service":"mindrune-api","timestamp":"2025-03-29 15:54:03"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 15:54:03"}
{"level":"info","message":"Processing batch of 1 REWARD events","service":"mindrune-api","timestamp":"2025-03-29 15:54:03"}
{"level":"info","message":"Processing 1 rewards","service":"mindrune-api","timestamp":"2025-03-29 15:54:03"}
{"level":"info","message":"Processing 1 items from rewards","service":"mindrune-api","timestamp":"2025-03-29 15:54:04"}
{"level":"info","message":"Completed batch of 1 REWARD events in 800ms","service":"mindrune-api","timestamp":"2025-03-29 15:54:04"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 15:54:04"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 847ms","service":"mindrune-api","timestamp":"2025-03-29 15:54:05"}
{"level":"info","message":"All events processed in 1647ms","service":"mindrune-api","timestamp":"2025-03-29 15:54:05"}
{"level":"info","message":"Total Neo4j operation time: 1756ms","service":"mindrune-api","timestamp":"2025-03-29 15:54:05"}
{"level":"info","message":"Neo4j session closed after 1757ms","service":"mindrune-api","timestamp":"2025-03-29 15:54:05"}
{"level":"info","message":"Neo4j insertion completed in 1758ms","service":"mindrune-api","timestamp":"2025-03-29 15:54:05"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 15:54:05"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-29 15:54:05"}
{"level":"info","message":"Total request processing time: 1770ms","service":"mindrune-api","timestamp":"2025-03-29 15:54:05"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 9, column 16 (offset: 245))\n\"        RETURN p, e\"\n                ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      MATCH (p:Player {account: $account})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management\n      CALL {\n        WITH p\n        // Use UNION for better optimization\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN p, e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN p, e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN p, e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN p, e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN p, e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN p, e\n      }\n      \n      // Group events by player using WITH and collect for better memory management\n      WITH p, e ORDER BY e.timestamp DESC\n      WITH p, collect(e)[0..$eventsPerPlayer] as player_events\n      \n      // Collect all players and their events\n      WITH collect({player: p, events: player_events}) as player_data\n      \n      // Process the collected data more efficiently\n      UNWIND player_data as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten the events while maintaining the player association\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:26:12"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 9, column 16 (offset: 245))\n\"        RETURN p, e\"\n                ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:26:12"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 9, column 16 (offset: 245))\n\"        RETURN p, e\"\n                ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      MATCH (p:Player {account: $account})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management\n      CALL {\n        WITH p\n        // Use UNION for better optimization\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN p, e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN p, e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN p, e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN p, e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN p, e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN p, e\n      }\n      \n      // Group events by player using WITH and collect for better memory management\n      WITH p, e ORDER BY e.timestamp DESC\n      WITH p, collect(e)[0..$eventsPerPlayer] as player_events\n      \n      // Collect all players and their events\n      WITH collect({player: p, events: player_events}) as player_data\n      \n      // Process the collected data more efficiently\n      UNWIND player_data as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten the events while maintaining the player association\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:26:12"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 9, column 16 (offset: 245))\n\"        RETURN p, e\"\n                ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:26:12"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 9, column 16 (offset: 245))\n\"        RETURN p, e\"\n                ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      MATCH (p:Player {account: $account})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management\n      CALL {\n        WITH p\n        // Use UNION for better optimization\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN p, e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN p, e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN p, e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN p, e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN p, e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN p, e\n      }\n      \n      // Group events by player using WITH and collect for better memory management\n      WITH p, e ORDER BY e.timestamp DESC\n      WITH p, collect(e)[0..$eventsPerPlayer] as player_events\n      \n      // Collect all players and their events\n      WITH collect({player: p, events: player_events}) as player_data\n      \n      // Process the collected data more efficiently\n      UNWIND player_data as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten the events while maintaining the player association\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:29:12"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 9, column 16 (offset: 245))\n\"        RETURN p, e\"\n                ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:29:12"}
{"level":"error","message":"Neo4j error: Variable `player` already declared in outer scope (line 8, column 16 (offset: 235))\n\"        RETURN player, e\"\n                ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      MATCH (player:Player {account: $account})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with proper scoping\n      CALL {\n        WITH player\n        MATCH (e)-[:PERFORMED_BY]->(player) \n        RETURN player, e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(player) \n        RETURN player, e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(player) \n        RETURN player, e\n        UNION\n        MATCH (e)-[:TARGETED]->(player) \n        RETURN player, e\n        UNION\n        MATCH (player)-[:PERFORMED]->(e) \n        RETURN player, e\n        UNION\n        MATCH (player)-[:KILLED]->(e) \n        RETURN player, e\n      }\n      \n      // Group events by player using WITH and collect for better memory management\n      WITH player, e ORDER BY e.timestamp DESC\n      WITH player, collect(e)[0..$eventsPerPlayer] as player_events\n      \n      // Collect all players and their events\n      WITH collect({player: player, events: player_events}) as player_data\n      \n      // Process the collected data more efficiently\n      UNWIND player_data as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten the events while maintaining the player association\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:32:51"}
{"level":"error","message":"500 - Neo4j error: Variable `player` already declared in outer scope (line 8, column 16 (offset: 235))\n\"        RETURN player, e\"\n                ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:32:51"}
{"level":"error","message":"Neo4j error: Variable `player` already declared in outer scope (line 8, column 16 (offset: 235))\n\"        RETURN player, e\"\n                ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      MATCH (player:Player {account: $account})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with proper scoping\n      CALL {\n        WITH player\n        MATCH (e)-[:PERFORMED_BY]->(player) \n        RETURN player, e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(player) \n        RETURN player, e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(player) \n        RETURN player, e\n        UNION\n        MATCH (e)-[:TARGETED]->(player) \n        RETURN player, e\n        UNION\n        MATCH (player)-[:PERFORMED]->(e) \n        RETURN player, e\n        UNION\n        MATCH (player)-[:KILLED]->(e) \n        RETURN player, e\n      }\n      \n      // Group events by player using WITH and collect for better memory management\n      WITH player, e ORDER BY e.timestamp DESC\n      WITH player, collect(e)[0..$eventsPerPlayer] as player_events\n      \n      // Collect all players and their events\n      WITH collect({player: player, events: player_events}) as player_data\n      \n      // Process the collected data more efficiently\n      UNWIND player_data as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten the events while maintaining the player association\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:32:51"}
{"level":"error","message":"500 - Neo4j error: Variable `player` already declared in outer scope (line 8, column 16 (offset: 235))\n\"        RETURN player, e\"\n                ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:32:51"}
{"level":"error","message":"Neo4j error: Variable `player` already declared in outer scope (line 8, column 16 (offset: 235))\n\"        RETURN player, e\"\n                ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      MATCH (player:Player {account: $account})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with proper scoping\n      CALL {\n        WITH player\n        MATCH (e)-[:PERFORMED_BY]->(player) \n        RETURN player, e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(player) \n        RETURN player, e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(player) \n        RETURN player, e\n        UNION\n        MATCH (e)-[:TARGETED]->(player) \n        RETURN player, e\n        UNION\n        MATCH (player)-[:PERFORMED]->(e) \n        RETURN player, e\n        UNION\n        MATCH (player)-[:KILLED]->(e) \n        RETURN player, e\n      }\n      \n      // Group events by player using WITH and collect for better memory management\n      WITH player, e ORDER BY e.timestamp DESC\n      WITH player, collect(e)[0..$eventsPerPlayer] as player_events\n      \n      // Collect all players and their events\n      WITH collect({player: player, events: player_events}) as player_data\n      \n      // Process the collected data more efficiently\n      UNWIND player_data as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten the events while maintaining the player association\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:40:48"}
{"level":"error","message":"500 - Neo4j error: Variable `player` already declared in outer scope (line 8, column 16 (offset: 235))\n\"        RETURN player, e\"\n                ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:40:48"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 29 (offset: 1656))\n\"        WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                             ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n        // Get all players for this account\n        MATCH (players:Player {account: $account})\n        \n        // Collect the players first\n        WITH collect(players) as allPlayers\n        \n        // Process each player separately to get their events\n        UNWIND allPlayers as currentPlayer\n        \n        // For each player, find events with various relationships in batches\n        // This avoids variable scope issues with CALL blocks\n        MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n        WITH currentPlayer, collect(events) as type1Events\n        \n        MATCH (events)-[:GAINED_BY]->(currentPlayer)\n        WITH currentPlayer, type1Events, collect(events) as type2Events\n        \n        MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n        WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n        \n        MATCH (events)-[:TARGETED]->(currentPlayer)\n        WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n        \n        MATCH (currentPlayer)-[:PERFORMED]->(events)\n        WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n        \n        MATCH (currentPlayer)-[:KILLED]->(events)\n        WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n        \n        // Combine all event types and sort by timestamp\n        WITH currentPlayer, \n             type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n        \n        // To remove duplicates more efficiently\n        WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\n        \n        // Sort events by timestamp and take only the most recent ones\n        WITH currentPlayer, uniqueEvents\n        UNWIND uniqueEvents as event\n        WITH currentPlayer, event\n        ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n        \n        // Collect player-specific events\n        WITH currentPlayer, collect(event) as playerEvents\n        \n        // Add to our result collection of player-event pairs\n        WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n        \n        // Now process all the relationships for visualization\n        UNWIND playerData as pd\n        WITH pd.player as player, pd.events as events\n        \n        // Flatten events for relationship discovery\n        UNWIND events as event\n        \n        // Get outgoing relationships from events\n        OPTIONAL MATCH (event)-[r1]->(n1)\n        WHERE NOT type(r1) = \"PART_OF\"\n        \n        // Get incoming relationships to events\n        OPTIONAL MATCH (n2)-[r2]->(event)\n        WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n        \n        // Collect all the results\n        RETURN \n          collect(distinct player) as players,\n          collect(distinct event) as events,\n          collect(distinct n1) + collect(distinct n2) as entities,\n          collect(distinct r1) + collect(distinct r2) as relationships\n        ","service":"mindrune-api","timestamp":"2025-03-29 16:46:18"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 29 (offset: 1656))\n\"        WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                             ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:46:18"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 29 (offset: 1656))\n\"        WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                             ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n        // Get all players for this account\n        MATCH (players:Player {account: $account})\n        \n        // Collect the players first\n        WITH collect(players) as allPlayers\n        \n        // Process each player separately to get their events\n        UNWIND allPlayers as currentPlayer\n        \n        // For each player, find events with various relationships in batches\n        // This avoids variable scope issues with CALL blocks\n        MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n        WITH currentPlayer, collect(events) as type1Events\n        \n        MATCH (events)-[:GAINED_BY]->(currentPlayer)\n        WITH currentPlayer, type1Events, collect(events) as type2Events\n        \n        MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n        WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n        \n        MATCH (events)-[:TARGETED]->(currentPlayer)\n        WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n        \n        MATCH (currentPlayer)-[:PERFORMED]->(events)\n        WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n        \n        MATCH (currentPlayer)-[:KILLED]->(events)\n        WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n        \n        // Combine all event types and sort by timestamp\n        WITH currentPlayer, \n             type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n        \n        // To remove duplicates more efficiently\n        WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\n        \n        // Sort events by timestamp and take only the most recent ones\n        WITH currentPlayer, uniqueEvents\n        UNWIND uniqueEvents as event\n        WITH currentPlayer, event\n        ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n        \n        // Collect player-specific events\n        WITH currentPlayer, collect(event) as playerEvents\n        \n        // Add to our result collection of player-event pairs\n        WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n        \n        // Now process all the relationships for visualization\n        UNWIND playerData as pd\n        WITH pd.player as player, pd.events as events\n        \n        // Flatten events for relationship discovery\n        UNWIND events as event\n        \n        // Get outgoing relationships from events\n        OPTIONAL MATCH (event)-[r1]->(n1)\n        WHERE NOT type(r1) = \"PART_OF\"\n        \n        // Get incoming relationships to events\n        OPTIONAL MATCH (n2)-[r2]->(event)\n        WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n        \n        // Collect all the results\n        RETURN \n          collect(distinct player) as players,\n          collect(distinct event) as events,\n          collect(distinct n1) + collect(distinct n2) as entities,\n          collect(distinct r1) + collect(distinct r2) as relationships\n        ","service":"mindrune-api","timestamp":"2025-03-29 16:46:18"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 29 (offset: 1656))\n\"        WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                             ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:46:18"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 29 (offset: 1656))\n\"        WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                             ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n        // Get all players for this account\n        MATCH (players:Player {account: $account})\n        \n        // Collect the players first\n        WITH collect(players) as allPlayers\n        \n        // Process each player separately to get their events\n        UNWIND allPlayers as currentPlayer\n        \n        // For each player, find events with various relationships in batches\n        // This avoids variable scope issues with CALL blocks\n        MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n        WITH currentPlayer, collect(events) as type1Events\n        \n        MATCH (events)-[:GAINED_BY]->(currentPlayer)\n        WITH currentPlayer, type1Events, collect(events) as type2Events\n        \n        MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n        WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n        \n        MATCH (events)-[:TARGETED]->(currentPlayer)\n        WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n        \n        MATCH (currentPlayer)-[:PERFORMED]->(events)\n        WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n        \n        MATCH (currentPlayer)-[:KILLED]->(events)\n        WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n        \n        // Combine all event types and sort by timestamp\n        WITH currentPlayer, \n             type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n        \n        // To remove duplicates more efficiently\n        WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\n        \n        // Sort events by timestamp and take only the most recent ones\n        WITH currentPlayer, uniqueEvents\n        UNWIND uniqueEvents as event\n        WITH currentPlayer, event\n        ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n        \n        // Collect player-specific events\n        WITH currentPlayer, collect(event) as playerEvents\n        \n        // Add to our result collection of player-event pairs\n        WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n        \n        // Now process all the relationships for visualization\n        UNWIND playerData as pd\n        WITH pd.player as player, pd.events as events\n        \n        // Flatten events for relationship discovery\n        UNWIND events as event\n        \n        // Get outgoing relationships from events\n        OPTIONAL MATCH (event)-[r1]->(n1)\n        WHERE NOT type(r1) = \"PART_OF\"\n        \n        // Get incoming relationships to events\n        OPTIONAL MATCH (n2)-[r2]->(event)\n        WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n        \n        // Collect all the results\n        RETURN \n          collect(distinct player) as players,\n          collect(distinct event) as events,\n          collect(distinct n1) + collect(distinct n2) as entities,\n          collect(distinct r1) + collect(distinct r2) as relationships\n        ","service":"mindrune-api","timestamp":"2025-03-29 16:46:21"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 29 (offset: 1656))\n\"        WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                             ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:46:21"}
{"level":"error","message":"Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer.","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n        // Get all players for this account\n        MATCH (players:Player {account: $account})\n        \n        // Collect the players first\n        WITH collect(players) as allPlayers\n        \n        // Process each player separately to get their events\n        UNWIND allPlayers as currentPlayer\n        \n        // For each player, find events with various relationships in batches\n        // This avoids variable scope issues with CALL blocks\n        MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n        WITH currentPlayer, collect(events) as type1Events\n        \n        MATCH (events)-[:GAINED_BY]->(currentPlayer)\n        WITH currentPlayer, type1Events, collect(events) as type2Events\n        \n        MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n        WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n        \n        MATCH (events)-[:TARGETED]->(currentPlayer)\n        WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n        \n        MATCH (currentPlayer)-[:PERFORMED]->(events)\n        WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n        \n        MATCH (currentPlayer)-[:KILLED]->(events)\n        WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n        \n        // Combine all event types and sort by timestamp\n        WITH currentPlayer, \n             type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n        \n        // To remove duplicates more efficiently\n        WITH currentPlayer, combinedEvents as events\nUNWIND events as event\nWITH currentPlayer, event\nWHERE event IS NOT NULL\nWITH currentPlayer, collect(DISTINCT event) as uniqueEvents\n        \n        // Sort events by timestamp and take only the most recent ones\n        WITH currentPlayer, uniqueEvents\n        UNWIND uniqueEvents as event\n        WITH currentPlayer, event\n        ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n        \n        // Collect player-specific events\n        WITH currentPlayer, collect(event) as playerEvents\n        \n        // Add to our result collection of player-event pairs\n        WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n        \n        // Now process all the relationships for visualization\n        UNWIND playerData as pd\n        WITH pd.player as player, pd.events as events\n        \n        // Flatten events for relationship discovery\n        UNWIND events as event\n        \n        // Get outgoing relationships from events\n        OPTIONAL MATCH (event)-[r1]->(n1)\n        WHERE NOT type(r1) = \"PART_OF\"\n        \n        // Get incoming relationships to events\n        OPTIONAL MATCH (n2)-[r2]->(event)\n        WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n        \n        // Collect all the results\n        RETURN \n          collect(distinct player) as players,\n          collect(distinct event) as events,\n          collect(distinct n1) + collect(distinct n2) as entities,\n          collect(distinct r1) + collect(distinct r2) as relationships\n        ","service":"mindrune-api","timestamp":"2025-03-29 16:46:55"}
{"level":"error","message":"500 - Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer. - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:46:55"}
{"level":"error","message":"Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer.","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n        // Get all players for this account\n        MATCH (players:Player {account: $account})\n        \n        // Collect the players first\n        WITH collect(players) as allPlayers\n        \n        // Process each player separately to get their events\n        UNWIND allPlayers as currentPlayer\n        \n        // For each player, find events with various relationships in batches\n        // This avoids variable scope issues with CALL blocks\n        MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n        WITH currentPlayer, collect(events) as type1Events\n        \n        MATCH (events)-[:GAINED_BY]->(currentPlayer)\n        WITH currentPlayer, type1Events, collect(events) as type2Events\n        \n        MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n        WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n        \n        MATCH (events)-[:TARGETED]->(currentPlayer)\n        WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n        \n        MATCH (currentPlayer)-[:PERFORMED]->(events)\n        WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n        \n        MATCH (currentPlayer)-[:KILLED]->(events)\n        WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n        \n        // Combine all event types and sort by timestamp\n        WITH currentPlayer, \n             type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n        \n        // To remove duplicates more efficiently\n        WITH currentPlayer, combinedEvents as events\nUNWIND events as event\nWITH currentPlayer, event\nWHERE event IS NOT NULL\nWITH currentPlayer, collect(DISTINCT event) as uniqueEvents\n        \n        // Sort events by timestamp and take only the most recent ones\n        WITH currentPlayer, uniqueEvents\n        UNWIND uniqueEvents as event\n        WITH currentPlayer, event\n        ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n        \n        // Collect player-specific events\n        WITH currentPlayer, collect(event) as playerEvents\n        \n        // Add to our result collection of player-event pairs\n        WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n        \n        // Now process all the relationships for visualization\n        UNWIND playerData as pd\n        WITH pd.player as player, pd.events as events\n        \n        // Flatten events for relationship discovery\n        UNWIND events as event\n        \n        // Get outgoing relationships from events\n        OPTIONAL MATCH (event)-[r1]->(n1)\n        WHERE NOT type(r1) = \"PART_OF\"\n        \n        // Get incoming relationships to events\n        OPTIONAL MATCH (n2)-[r2]->(event)\n        WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n        \n        // Collect all the results\n        RETURN \n          collect(distinct player) as players,\n          collect(distinct event) as events,\n          collect(distinct n1) + collect(distinct n2) as entities,\n          collect(distinct r1) + collect(distinct r2) as relationships\n        ","service":"mindrune-api","timestamp":"2025-03-29 16:46:55"}
{"level":"error","message":"500 - Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer. - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:46:55"}
{"level":"error","message":"Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer.","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n        // Get all players for this account\n        MATCH (players:Player {account: $account})\n        \n        // Collect the players first\n        WITH collect(players) as allPlayers\n        \n        // Process each player separately to get their events\n        UNWIND allPlayers as currentPlayer\n        \n        // For each player, find events with various relationships in batches\n        // This avoids variable scope issues with CALL blocks\n        MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n        WITH currentPlayer, collect(events) as type1Events\n        \n        MATCH (events)-[:GAINED_BY]->(currentPlayer)\n        WITH currentPlayer, type1Events, collect(events) as type2Events\n        \n        MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n        WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n        \n        MATCH (events)-[:TARGETED]->(currentPlayer)\n        WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n        \n        MATCH (currentPlayer)-[:PERFORMED]->(events)\n        WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n        \n        MATCH (currentPlayer)-[:KILLED]->(events)\n        WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n        \n        // Combine all event types and sort by timestamp\n        WITH currentPlayer, \n             type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n        \n        // To remove duplicates more efficiently\n        WITH currentPlayer, combinedEvents as events\nUNWIND events as event\nWITH currentPlayer, event\nWHERE event IS NOT NULL\nWITH currentPlayer, collect(DISTINCT event) as uniqueEvents\n        \n        // Sort events by timestamp and take only the most recent ones\n        WITH currentPlayer, uniqueEvents\n        UNWIND uniqueEvents as event\n        WITH currentPlayer, event\n        ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n        \n        // Collect player-specific events\n        WITH currentPlayer, collect(event) as playerEvents\n        \n        // Add to our result collection of player-event pairs\n        WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n        \n        // Now process all the relationships for visualization\n        UNWIND playerData as pd\n        WITH pd.player as player, pd.events as events\n        \n        // Flatten events for relationship discovery\n        UNWIND events as event\n        \n        // Get outgoing relationships from events\n        OPTIONAL MATCH (event)-[r1]->(n1)\n        WHERE NOT type(r1) = \"PART_OF\"\n        \n        // Get incoming relationships to events\n        OPTIONAL MATCH (n2)-[r2]->(event)\n        WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n        \n        // Collect all the results\n        RETURN \n          collect(distinct player) as players,\n          collect(distinct event) as events,\n          collect(distinct n1) + collect(distinct n2) as entities,\n          collect(distinct r1) + collect(distinct r2) as relationships\n        ","service":"mindrune-api","timestamp":"2025-03-29 16:46:58"}
{"level":"error","message":"500 - Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer. - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:46:58"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 27 (offset: 1586))\n\"      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                           ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      // Get all players for this account\n      MATCH (players:Player {account: $account})\n      \n      // Collect the players first\n      WITH collect(players) as allPlayers\n      \n      // Process each player separately to get their events\n      UNWIND allPlayers as currentPlayer\n      \n      // For each player, find events with various relationships in batches\n      // This avoids variable scope issues with CALL blocks\n      MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n      WITH currentPlayer, collect(events) as type1Events\n      \n      MATCH (events)-[:GAINED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, collect(events) as type2Events\n      \n      MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n      \n      MATCH (events)-[:TARGETED]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n      \n      MATCH (currentPlayer)-[:PERFORMED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n      \n      MATCH (currentPlayer)-[:KILLED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n      \n      // Combine all event types and sort by timestamp\n      WITH currentPlayer, \n           type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n      \n      // To remove duplicates more efficiently\n      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\n      \n      // Sort events by timestamp and take only the most recent ones\n      WITH currentPlayer, uniqueEvents\n      UNWIND uniqueEvents as event\n      WITH currentPlayer, event\n      ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n      \n      // Collect player-specific events\n      WITH currentPlayer, collect(event) as playerEvents\n      \n      // Add to our result collection of player-event pairs\n      WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n      \n      // Now process all the relationships for visualization\n      UNWIND playerData as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten events for relationship discovery\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      // Collect all the results\n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:48:18"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 27 (offset: 1586))\n\"      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                           ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:48:18"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 27 (offset: 1586))\n\"      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                           ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      // Get all players for this account\n      MATCH (players:Player {account: $account})\n      \n      // Collect the players first\n      WITH collect(players) as allPlayers\n      \n      // Process each player separately to get their events\n      UNWIND allPlayers as currentPlayer\n      \n      // For each player, find events with various relationships in batches\n      // This avoids variable scope issues with CALL blocks\n      MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n      WITH currentPlayer, collect(events) as type1Events\n      \n      MATCH (events)-[:GAINED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, collect(events) as type2Events\n      \n      MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n      \n      MATCH (events)-[:TARGETED]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n      \n      MATCH (currentPlayer)-[:PERFORMED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n      \n      MATCH (currentPlayer)-[:KILLED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n      \n      // Combine all event types and sort by timestamp\n      WITH currentPlayer, \n           type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n      \n      // To remove duplicates more efficiently\n      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\n      \n      // Sort events by timestamp and take only the most recent ones\n      WITH currentPlayer, uniqueEvents\n      UNWIND uniqueEvents as event\n      WITH currentPlayer, event\n      ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n      \n      // Collect player-specific events\n      WITH currentPlayer, collect(event) as playerEvents\n      \n      // Add to our result collection of player-event pairs\n      WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n      \n      // Now process all the relationships for visualization\n      UNWIND playerData as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten events for relationship discovery\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      // Collect all the results\n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:48:18"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 27 (offset: 1586))\n\"      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                           ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:48:18"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 27 (offset: 1586))\n\"      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                           ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      // Get all players for this account\n      MATCH (players:Player {account: $account})\n      \n      // Collect the players first\n      WITH collect(players) as allPlayers\n      \n      // Process each player separately to get their events\n      UNWIND allPlayers as currentPlayer\n      \n      // For each player, find events with various relationships in batches\n      // This avoids variable scope issues with CALL blocks\n      MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n      WITH currentPlayer, collect(events) as type1Events\n      \n      MATCH (events)-[:GAINED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, collect(events) as type2Events\n      \n      MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n      \n      MATCH (events)-[:TARGETED]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n      \n      MATCH (currentPlayer)-[:PERFORMED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n      \n      MATCH (currentPlayer)-[:KILLED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n      \n      // Combine all event types and sort by timestamp\n      WITH currentPlayer, \n           type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n      \n      // To remove duplicates more efficiently\n      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\n      \n      // Sort events by timestamp and take only the most recent ones\n      WITH currentPlayer, uniqueEvents\n      UNWIND uniqueEvents as event\n      WITH currentPlayer, event\n      ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n      \n      // Collect player-specific events\n      WITH currentPlayer, collect(event) as playerEvents\n      \n      // Add to our result collection of player-event pairs\n      WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n      \n      // Now process all the relationships for visualization\n      UNWIND playerData as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten events for relationship discovery\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      // Collect all the results\n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:48:20"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 27 (offset: 1586))\n\"      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                           ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:48:20"}
{"level":"error","message":"Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer.","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      // Get all players for this account\n      MATCH (players:Player {account: $account})\n      \n      // Collect the players first\n      WITH collect(players) as allPlayers\n      \n      // Process each player separately to get their events\n      UNWIND allPlayers as currentPlayer\n      \n      // For each player, find events with various relationships in batches\n      // This avoids variable scope issues with CALL blocks\n      MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n      WITH currentPlayer, collect(events) as type1Events\n      \n      MATCH (events)-[:GAINED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, collect(events) as type2Events\n      \n      MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n      \n      MATCH (events)-[:TARGETED]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n      \n      MATCH (currentPlayer)-[:PERFORMED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n      \n      MATCH (currentPlayer)-[:KILLED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n      \n      // Combine all event types and sort by timestamp\n      WITH currentPlayer, \n           type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n      \n      // To remove duplicates more efficiently\n      WITH currentPlayer, combinedEvents as events\nUNWIND events as event\nWITH currentPlayer, event\nWHERE event IS NOT NULL\nWITH currentPlayer, collect(DISTINCT event) as uniqueEvents\n      \n      // Sort events by timestamp and take only the most recent ones\n      WITH currentPlayer, uniqueEvents\n      UNWIND uniqueEvents as event\n      WITH currentPlayer, event\n      ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n      \n      // Collect player-specific events\n      WITH currentPlayer, collect(event) as playerEvents\n      \n      // Add to our result collection of player-event pairs\n      WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n      \n      // Now process all the relationships for visualization\n      UNWIND playerData as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten events for relationship discovery\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      // Collect all the results\n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:49:03"}
{"level":"error","message":"500 - Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer. - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:49:03"}
{"level":"error","message":"Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer.","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      // Get all players for this account\n      MATCH (players:Player {account: $account})\n      \n      // Collect the players first\n      WITH collect(players) as allPlayers\n      \n      // Process each player separately to get their events\n      UNWIND allPlayers as currentPlayer\n      \n      // For each player, find events with various relationships in batches\n      // This avoids variable scope issues with CALL blocks\n      MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n      WITH currentPlayer, collect(events) as type1Events\n      \n      MATCH (events)-[:GAINED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, collect(events) as type2Events\n      \n      MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n      \n      MATCH (events)-[:TARGETED]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n      \n      MATCH (currentPlayer)-[:PERFORMED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n      \n      MATCH (currentPlayer)-[:KILLED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n      \n      // Combine all event types and sort by timestamp\n      WITH currentPlayer, \n           type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n      \n      // To remove duplicates more efficiently\n      WITH currentPlayer, combinedEvents as events\nUNWIND events as event\nWITH currentPlayer, event\nWHERE event IS NOT NULL\nWITH currentPlayer, collect(DISTINCT event) as uniqueEvents\n      \n      // Sort events by timestamp and take only the most recent ones\n      WITH currentPlayer, uniqueEvents\n      UNWIND uniqueEvents as event\n      WITH currentPlayer, event\n      ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n      \n      // Collect player-specific events\n      WITH currentPlayer, collect(event) as playerEvents\n      \n      // Add to our result collection of player-event pairs\n      WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n      \n      // Now process all the relationships for visualization\n      UNWIND playerData as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten events for relationship discovery\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      // Collect all the results\n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:49:03"}
{"level":"error","message":"500 - Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer. - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:49:03"}
{"level":"error","message":"Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer.","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      // Get all players for this account\n      MATCH (players:Player {account: $account})\n      \n      // Collect the players first\n      WITH collect(players) as allPlayers\n      \n      // Process each player separately to get their events\n      UNWIND allPlayers as currentPlayer\n      \n      // For each player, find events with various relationships in batches\n      // This avoids variable scope issues with CALL blocks\n      MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n      WITH currentPlayer, collect(events) as type1Events\n      \n      MATCH (events)-[:GAINED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, collect(events) as type2Events\n      \n      MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n      \n      MATCH (events)-[:TARGETED]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n      \n      MATCH (currentPlayer)-[:PERFORMED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n      \n      MATCH (currentPlayer)-[:KILLED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n      \n      // Combine all event types and sort by timestamp\n      WITH currentPlayer, \n           type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n      \n      // To remove duplicates more efficiently\n      WITH currentPlayer, combinedEvents as events\nUNWIND events as event\nWITH currentPlayer, event\nWHERE event IS NOT NULL\nWITH currentPlayer, collect(DISTINCT event) as uniqueEvents\n      \n      // Sort events by timestamp and take only the most recent ones\n      WITH currentPlayer, uniqueEvents\n      UNWIND uniqueEvents as event\n      WITH currentPlayer, event\n      ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n      \n      // Collect player-specific events\n      WITH currentPlayer, collect(event) as playerEvents\n      \n      // Add to our result collection of player-event pairs\n      WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n      \n      // Now process all the relationships for visualization\n      UNWIND playerData as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten events for relationship discovery\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      // Collect all the results\n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:49:06"}
{"level":"error","message":"500 - Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer. - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:49:06"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 27 (offset: 1586))\n\"      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                           ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      // Get all players for this account\n      MATCH (players:Player {account: $account})\n      \n      // Collect the players first\n      WITH collect(players) as allPlayers\n      \n      // Process each player separately to get their events\n      UNWIND allPlayers as currentPlayer\n      \n      // For each player, find events with various relationships in batches\n      // This avoids variable scope issues with CALL blocks\n      MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n      WITH currentPlayer, collect(events) as type1Events\n      \n      MATCH (events)-[:GAINED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, collect(events) as type2Events\n      \n      MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n      \n      MATCH (events)-[:TARGETED]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n      \n      MATCH (currentPlayer)-[:PERFORMED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n      \n      MATCH (currentPlayer)-[:KILLED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n      \n      // Combine all event types and sort by timestamp\n      WITH currentPlayer, \n           type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n      \n      // To remove duplicates more efficiently\n      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\n      \n      // Sort events by timestamp and take only the most recent ones\n      WITH currentPlayer, uniqueEvents\n      UNWIND uniqueEvents as event\n      WITH currentPlayer, event\n      ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n      \n      // Collect player-specific events\n      WITH currentPlayer, collect(event) as playerEvents\n      \n      // Add to our result collection of player-event pairs\n      WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n      \n      // Now process all the relationships for visualization\n      UNWIND playerData as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten events for relationship discovery\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      // Collect all the results\n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:49:13"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 27 (offset: 1586))\n\"      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                           ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:49:13"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 27 (offset: 1586))\n\"      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                           ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      // Get all players for this account\n      MATCH (players:Player {account: $account})\n      \n      // Collect the players first\n      WITH collect(players) as allPlayers\n      \n      // Process each player separately to get their events\n      UNWIND allPlayers as currentPlayer\n      \n      // For each player, find events with various relationships in batches\n      // This avoids variable scope issues with CALL blocks\n      MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n      WITH currentPlayer, collect(events) as type1Events\n      \n      MATCH (events)-[:GAINED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, collect(events) as type2Events\n      \n      MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n      \n      MATCH (events)-[:TARGETED]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n      \n      MATCH (currentPlayer)-[:PERFORMED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n      \n      MATCH (currentPlayer)-[:KILLED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n      \n      // Combine all event types and sort by timestamp\n      WITH currentPlayer, \n           type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n      \n      // To remove duplicates more efficiently\n      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\n      \n      // Sort events by timestamp and take only the most recent ones\n      WITH currentPlayer, uniqueEvents\n      UNWIND uniqueEvents as event\n      WITH currentPlayer, event\n      ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n      \n      // Collect player-specific events\n      WITH currentPlayer, collect(event) as playerEvents\n      \n      // Add to our result collection of player-event pairs\n      WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n      \n      // Now process all the relationships for visualization\n      UNWIND playerData as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten events for relationship discovery\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      // Collect all the results\n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:49:13"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 27 (offset: 1586))\n\"      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                           ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:49:13"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 27 (offset: 1586))\n\"      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                           ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      // Get all players for this account\n      MATCH (players:Player {account: $account})\n      \n      // Collect the players first\n      WITH collect(players) as allPlayers\n      \n      // Process each player separately to get their events\n      UNWIND allPlayers as currentPlayer\n      \n      // For each player, find events with various relationships in batches\n      // This avoids variable scope issues with CALL blocks\n      MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n      WITH currentPlayer, collect(events) as type1Events\n      \n      MATCH (events)-[:GAINED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, collect(events) as type2Events\n      \n      MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n      \n      MATCH (events)-[:TARGETED]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n      \n      MATCH (currentPlayer)-[:PERFORMED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n      \n      MATCH (currentPlayer)-[:KILLED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n      \n      // Combine all event types and sort by timestamp\n      WITH currentPlayer, \n           type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n      \n      // To remove duplicates more efficiently\n      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\n      \n      // Sort events by timestamp and take only the most recent ones\n      WITH currentPlayer, uniqueEvents\n      UNWIND uniqueEvents as event\n      WITH currentPlayer, event\n      ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n      \n      // Collect player-specific events\n      WITH currentPlayer, collect(event) as playerEvents\n      \n      // Add to our result collection of player-event pairs\n      WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n      \n      // Now process all the relationships for visualization\n      UNWIND playerData as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten events for relationship discovery\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      // Collect all the results\n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:49:15"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 27 (offset: 1586))\n\"      WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                           ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:49:15"}
{"level":"error","message":"Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer.","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      // Get all players for this account\n      MATCH (players:Player {account: $account})\n      \n      // Collect the players first\n      WITH collect(players) as allPlayers\n      \n      // Process each player separately to get their events\n      UNWIND allPlayers as currentPlayer\n      \n      // For each player, find events with various relationships in batches\n      // This avoids variable scope issues with CALL blocks\n      MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n      WITH currentPlayer, collect(events) as type1Events\n      \n      MATCH (events)-[:GAINED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, collect(events) as type2Events\n      \n      MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n      \n      MATCH (events)-[:TARGETED]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n      \n      MATCH (currentPlayer)-[:PERFORMED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n      \n      MATCH (currentPlayer)-[:KILLED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n      \n      // Combine all event types and sort by timestamp\n      WITH currentPlayer, \n           type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n      \n      // To remove duplicates more efficiently (without requiring APOC)\n      WITH currentPlayer, combinedEvents as events\n      UNWIND events as event\n      WITH currentPlayer, event\n      WHERE event IS NOT NULL\n      WITH currentPlayer, collect(DISTINCT event) as uniqueEvents\n      \n      // Sort events by timestamp and take only the most recent ones\n      WITH currentPlayer, uniqueEvents\n      UNWIND uniqueEvents as event\n      WITH currentPlayer, event\n      ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n      \n      // Collect player-specific events\n      WITH currentPlayer, collect(event) as playerEvents\n      \n      // Add to our result collection of player-event pairs\n      WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n      \n      // Now process all the relationships for visualization\n      UNWIND playerData as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten events for relationship discovery\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      // Collect all the results\n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:50:14"}
{"level":"error","message":"500 - Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer. - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:50:14"}
{"level":"error","message":"Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer.","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      // Get all players for this account\n      MATCH (players:Player {account: $account})\n      \n      // Collect the players first\n      WITH collect(players) as allPlayers\n      \n      // Process each player separately to get their events\n      UNWIND allPlayers as currentPlayer\n      \n      // For each player, find events with various relationships in batches\n      // This avoids variable scope issues with CALL blocks\n      MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n      WITH currentPlayer, collect(events) as type1Events\n      \n      MATCH (events)-[:GAINED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, collect(events) as type2Events\n      \n      MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n      \n      MATCH (events)-[:TARGETED]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n      \n      MATCH (currentPlayer)-[:PERFORMED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n      \n      MATCH (currentPlayer)-[:KILLED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n      \n      // Combine all event types and sort by timestamp\n      WITH currentPlayer, \n           type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n      \n      // To remove duplicates more efficiently (without requiring APOC)\n      WITH currentPlayer, combinedEvents as events\n      UNWIND events as event\n      WITH currentPlayer, event\n      WHERE event IS NOT NULL\n      WITH currentPlayer, collect(DISTINCT event) as uniqueEvents\n      \n      // Sort events by timestamp and take only the most recent ones\n      WITH currentPlayer, uniqueEvents\n      UNWIND uniqueEvents as event\n      WITH currentPlayer, event\n      ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n      \n      // Collect player-specific events\n      WITH currentPlayer, collect(event) as playerEvents\n      \n      // Add to our result collection of player-event pairs\n      WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n      \n      // Now process all the relationships for visualization\n      UNWIND playerData as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten events for relationship discovery\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      // Collect all the results\n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:50:14"}
{"level":"error","message":"500 - Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer. - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:50:14"}
{"level":"error","message":"Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer.","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      // Get all players for this account\n      MATCH (players:Player {account: $account})\n      \n      // Collect the players first\n      WITH collect(players) as allPlayers\n      \n      // Process each player separately to get their events\n      UNWIND allPlayers as currentPlayer\n      \n      // For each player, find events with various relationships in batches\n      // This avoids variable scope issues with CALL blocks\n      MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n      WITH currentPlayer, collect(events) as type1Events\n      \n      MATCH (events)-[:GAINED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, collect(events) as type2Events\n      \n      MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n      \n      MATCH (events)-[:TARGETED]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n      \n      MATCH (currentPlayer)-[:PERFORMED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n      \n      MATCH (currentPlayer)-[:KILLED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n      \n      // Combine all event types and sort by timestamp\n      WITH currentPlayer, \n           type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n      \n      // To remove duplicates more efficiently (without requiring APOC)\n      WITH currentPlayer, combinedEvents as events\n      UNWIND events as event\n      WITH currentPlayer, event\n      WHERE event IS NOT NULL\n      WITH currentPlayer, collect(DISTINCT event) as uniqueEvents\n      \n      // Sort events by timestamp and take only the most recent ones\n      WITH currentPlayer, uniqueEvents\n      UNWIND uniqueEvents as event\n      WITH currentPlayer, event\n      ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n      \n      // Collect player-specific events\n      WITH currentPlayer, collect(event) as playerEvents\n      \n      // Add to our result collection of player-event pairs\n      WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n      \n      // Now process all the relationships for visualization\n      UNWIND playerData as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten events for relationship discovery\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      // Collect all the results\n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:50:17"}
{"level":"error","message":"500 - Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer. - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:50:17"}
{"level":"error","message":"Neo4j error: Expected parameter(s): eventsPerPlayer","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n      // Get all players for this account\n      MATCH (players:Player {account: $account})\n      \n      // Collect the players first\n      WITH collect(players) as allPlayers\n      \n      // Process each player separately to get their events\n      UNWIND allPlayers as currentPlayer\n      \n      // For each player, find events with various relationships in batches\n      // This avoids variable scope issues with CALL blocks\n      MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n      WITH currentPlayer, collect(events) as type1Events\n      \n      MATCH (events)-[:GAINED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, collect(events) as type2Events\n      \n      MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n      \n      MATCH (events)-[:TARGETED]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n      \n      MATCH (currentPlayer)-[:PERFORMED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n      \n      MATCH (currentPlayer)-[:KILLED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n      \n      // Combine all event types and sort by timestamp\n      WITH currentPlayer, \n           type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n      \n      // To remove duplicates more efficiently (without requiring APOC)\n      WITH currentPlayer, combinedEvents as events\n      UNWIND events as event\n      WITH currentPlayer, event\n      WHERE event IS NOT NULL\n      WITH currentPlayer, collect(DISTINCT event) as uniqueEvents\n      \n      // Sort events by timestamp and take only the most recent ones\n      WITH currentPlayer, uniqueEvents\n      UNWIND uniqueEvents as event\n      WITH currentPlayer, event\n      ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n      \n      // Collect player-specific events\n      WITH currentPlayer, collect(event) as playerEvents\n      \n      // Add to our result collection of player-event pairs\n      WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n      \n      // Now process all the relationships for visualization\n      UNWIND playerData as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten events for relationship discovery\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      // Collect all the results\n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:51:06"}
{"level":"error","message":"500 - Neo4j error: Expected parameter(s): eventsPerPlayer - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:51:06"}
{"level":"error","message":"Neo4j error: Expected parameter(s): eventsPerPlayer","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n      // Get all players for this account\n      MATCH (players:Player {account: $account})\n      \n      // Collect the players first\n      WITH collect(players) as allPlayers\n      \n      // Process each player separately to get their events\n      UNWIND allPlayers as currentPlayer\n      \n      // For each player, find events with various relationships in batches\n      // This avoids variable scope issues with CALL blocks\n      MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n      WITH currentPlayer, collect(events) as type1Events\n      \n      MATCH (events)-[:GAINED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, collect(events) as type2Events\n      \n      MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n      \n      MATCH (events)-[:TARGETED]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n      \n      MATCH (currentPlayer)-[:PERFORMED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n      \n      MATCH (currentPlayer)-[:KILLED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n      \n      // Combine all event types and sort by timestamp\n      WITH currentPlayer, \n           type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n      \n      // To remove duplicates more efficiently (without requiring APOC)\n      WITH currentPlayer, combinedEvents as events\n      UNWIND events as event\n      WITH currentPlayer, event\n      WHERE event IS NOT NULL\n      WITH currentPlayer, collect(DISTINCT event) as uniqueEvents\n      \n      // Sort events by timestamp and take only the most recent ones\n      WITH currentPlayer, uniqueEvents\n      UNWIND uniqueEvents as event\n      WITH currentPlayer, event\n      ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n      \n      // Collect player-specific events\n      WITH currentPlayer, collect(event) as playerEvents\n      \n      // Add to our result collection of player-event pairs\n      WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n      \n      // Now process all the relationships for visualization\n      UNWIND playerData as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten events for relationship discovery\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      // Collect all the results\n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 16:51:06"}
{"level":"error","message":"500 - Neo4j error: Expected parameter(s): eventsPerPlayer - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 16:51:06"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 18:24:55"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 18:24:55"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 18:24:57"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 18:24:57"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 18:25:00"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 18:25:00"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 18:25:04"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 18:25:04"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 18:25:07"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 18:25:07"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:12:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:12:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:12:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:12:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 21:12:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:12:03"}
{"level":"info","message":"Data size: 2112 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:12:03"}
{"level":"info","message":"Event count: 11","service":"mindrune-api","timestamp":"2025-03-29 21:12:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:12:03"}
{"level":"info","message":"Processing 11 events","service":"mindrune-api","timestamp":"2025-03-29 21:12:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:12:03"}
{"level":"info","message":"Player node updated in 420ms","service":"mindrune-api","timestamp":"2025-03-29 21:12:04"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 21:12:04"}
{"level":"info","message":"Processing batch of 9 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:12:04"}
{"level":"info","message":"Completed batch of 9 MENU_CLICK events in 1100ms","service":"mindrune-api","timestamp":"2025-03-29 21:12:05"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 21:12:05"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 511ms","service":"mindrune-api","timestamp":"2025-03-29 21:12:05"}
{"level":"info","message":"All events processed in 1613ms","service":"mindrune-api","timestamp":"2025-03-29 21:12:05"}
{"level":"info","message":"Total Neo4j operation time: 2034ms","service":"mindrune-api","timestamp":"2025-03-29 21:12:05"}
{"level":"info","message":"Neo4j session closed after 2034ms","service":"mindrune-api","timestamp":"2025-03-29 21:12:05"}
{"level":"info","message":"Neo4j insertion completed in 2034ms","service":"mindrune-api","timestamp":"2025-03-29 21:12:05"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:12:05"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 21:12:05"}
{"level":"info","message":"Total request processing time: 2051ms","service":"mindrune-api","timestamp":"2025-03-29 21:12:05"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:13:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:13:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:13:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:13:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 21:13:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:13:03"}
{"level":"info","message":"Data size: 8547 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:13:03"}
{"level":"info","message":"Event count: 45","service":"mindrune-api","timestamp":"2025-03-29 21:13:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:13:03"}
{"level":"info","message":"Processing 45 events","service":"mindrune-api","timestamp":"2025-03-29 21:13:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:13:03"}
{"level":"info","message":"Player node updated in 95ms","service":"mindrune-api","timestamp":"2025-03-29 21:13:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 21:13:03"}
{"level":"info","message":"Processing batch of 26 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:13:03"}
{"level":"info","message":"Completed batch of 26 MENU_CLICK events in 471ms","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"Processing batch of 15 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"Completed batch of 15 XP_GAIN events in 164ms","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 380ms","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Cracked ice</col>\",\"damage\":10,\"type\":43,\"typeString\":\"Max Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Max Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 0 incoming, 3 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 210ms","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"All events processed in 1227ms","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"Total Neo4j operation time: 1324ms","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"Neo4j session closed after 1324ms","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"Neo4j insertion completed in 1324ms","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"Total request processing time: 1341ms","service":"mindrune-api","timestamp":"2025-03-29 21:13:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:14:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:14:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:14:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:14:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 21:14:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:14:03"}
{"level":"info","message":"Data size: 18337 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:14:03"}
{"level":"info","message":"Event count: 90","service":"mindrune-api","timestamp":"2025-03-29 21:14:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:14:03"}
{"level":"info","message":"Processing 90 events","service":"mindrune-api","timestamp":"2025-03-29 21:14:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:14:03"}
{"level":"info","message":"Player node updated in 97ms","service":"mindrune-api","timestamp":"2025-03-29 21:14:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 21:14:03"}
{"level":"info","message":"Processing batch of 38 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:14:03"}
{"level":"info","message":"Completed batch of 38 MENU_CLICK events in 384ms","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"Processing batch of 37 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":1,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Damage\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"Processing 37 HIT_SPLAT events: 23 incoming, 14 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"3ad2d310-491c-41bf-b232-96cd8fbd38f8_4\",\"timestamp\":\"2025-03-30T01:13:07.594196500Z\",\"damage\":1,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1442,\"locationY\":9679,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"Completed batch of 37 HIT_SPLAT events in 402ms","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"Processing batch of 14 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"Completed batch of 14 XP_GAIN events in 139ms","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 300ms","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"All events processed in 1227ms","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"Total Neo4j operation time: 1327ms","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"Neo4j session closed after 1327ms","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"Neo4j insertion completed in 1327ms","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"SQL insertion completed in 17ms","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"Total request processing time: 1347ms","service":"mindrune-api","timestamp":"2025-03-29 21:14:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:15:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:15:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:15:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:15:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 21:15:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:15:03"}
{"level":"info","message":"Data size: 13756 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:15:03"}
{"level":"info","message":"Event count: 66","service":"mindrune-api","timestamp":"2025-03-29 21:15:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:15:03"}
{"level":"info","message":"Processing 66 events","service":"mindrune-api","timestamp":"2025-03-29 21:15:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:15:03"}
{"level":"info","message":"Player node updated in 96ms","service":"mindrune-api","timestamp":"2025-03-29 21:15:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 21:15:03"}
{"level":"info","message":"Processing batch of 21 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:15:03"}
{"level":"info","message":"Completed batch of 21 MENU_CLICK events in 359ms","service":"mindrune-api","timestamp":"2025-03-29 21:15:04"}
{"level":"info","message":"Processing batch of 14 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 21:15:04"}
{"level":"info","message":"Completed batch of 14 XP_GAIN events in 102ms","service":"mindrune-api","timestamp":"2025-03-29 21:15:04"}
{"level":"info","message":"Processing batch of 31 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 21:15:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":24,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 21:15:04"}
{"level":"info","message":"Processing 31 HIT_SPLAT events: 18 incoming, 13 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 21:15:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"02c1f5fd-e186-401e-a0e0-b50473d25f19_8\",\"timestamp\":\"2025-03-30T01:14:07.591013900Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1438,\"locationY\":9677,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 21:15:04"}
{"level":"info","message":"Completed batch of 31 HIT_SPLAT events in 206ms","service":"mindrune-api","timestamp":"2025-03-29 21:15:04"}
{"level":"info","message":"All events processed in 669ms","service":"mindrune-api","timestamp":"2025-03-29 21:15:04"}
{"level":"info","message":"Total Neo4j operation time: 766ms","service":"mindrune-api","timestamp":"2025-03-29 21:15:04"}
{"level":"info","message":"Neo4j session closed after 766ms","service":"mindrune-api","timestamp":"2025-03-29 21:15:04"}
{"level":"info","message":"Neo4j insertion completed in 767ms","service":"mindrune-api","timestamp":"2025-03-29 21:15:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:15:04"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 21:15:04"}
{"level":"info","message":"Total request processing time: 783ms","service":"mindrune-api","timestamp":"2025-03-29 21:15:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:16:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:16:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:16:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:16:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 21:16:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:16:03"}
{"level":"info","message":"Data size: 852 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:16:03"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-29 21:16:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:16:03"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-29 21:16:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:16:03"}
{"level":"info","message":"Player node updated in 119ms","service":"mindrune-api","timestamp":"2025-03-29 21:16:03"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 21:16:03"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:16:03"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 913ms","service":"mindrune-api","timestamp":"2025-03-29 21:16:04"}
{"level":"info","message":"Processing batch of 1 REWARD events","service":"mindrune-api","timestamp":"2025-03-29 21:16:04"}
{"level":"info","message":"Processing 1 rewards","service":"mindrune-api","timestamp":"2025-03-29 21:16:04"}
{"level":"info","message":"Processing 1 items from rewards","service":"mindrune-api","timestamp":"2025-03-29 21:16:04"}
{"level":"info","message":"Completed batch of 1 REWARD events in 318ms","service":"mindrune-api","timestamp":"2025-03-29 21:16:05"}
{"level":"info","message":"All events processed in 1233ms","service":"mindrune-api","timestamp":"2025-03-29 21:16:05"}
{"level":"info","message":"Total Neo4j operation time: 1352ms","service":"mindrune-api","timestamp":"2025-03-29 21:16:05"}
{"level":"info","message":"Neo4j session closed after 1352ms","service":"mindrune-api","timestamp":"2025-03-29 21:16:05"}
{"level":"info","message":"Neo4j insertion completed in 1353ms","service":"mindrune-api","timestamp":"2025-03-29 21:16:05"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:16:05"}
{"level":"info","message":"SQL insertion completed in 108ms","service":"mindrune-api","timestamp":"2025-03-29 21:16:05"}
{"level":"info","message":"Total request processing time: 1464ms","service":"mindrune-api","timestamp":"2025-03-29 21:16:05"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-29 21:17:24"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-29 21:17:24"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-29 21:18:03"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:18:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:18:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:18:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:18:03"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-29 21:18:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:18:03"}
{"level":"info","message":"Data size: 472 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:18:03"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-29 21:18:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:18:03"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-29 21:18:03"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-29 21:18:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:18:03"}
{"level":"info","message":"Player node updated in 374ms","service":"mindrune-api","timestamp":"2025-03-29 21:18:04"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 21:18:04"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:18:04"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 878ms","service":"mindrune-api","timestamp":"2025-03-29 21:18:04"}
{"level":"info","message":"All events processed in 878ms","service":"mindrune-api","timestamp":"2025-03-29 21:18:04"}
{"level":"info","message":"Total Neo4j operation time: 1255ms","service":"mindrune-api","timestamp":"2025-03-29 21:18:04"}
{"level":"info","message":"Neo4j session closed after 1256ms","service":"mindrune-api","timestamp":"2025-03-29 21:18:04"}
{"level":"info","message":"Neo4j insertion completed in 1258ms","service":"mindrune-api","timestamp":"2025-03-29 21:18:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:18:04"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-29 21:18:04"}
{"level":"info","message":"Total request processing time: 1276ms","service":"mindrune-api","timestamp":"2025-03-29 21:18:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:19:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:19:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:19:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:19:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 21:19:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:19:03"}
{"level":"info","message":"Data size: 2221 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:19:03"}
{"level":"info","message":"Event count: 12","service":"mindrune-api","timestamp":"2025-03-29 21:19:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:19:03"}
{"level":"info","message":"Processing 12 events","service":"mindrune-api","timestamp":"2025-03-29 21:19:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:19:03"}
{"level":"info","message":"Player node updated in 95ms","service":"mindrune-api","timestamp":"2025-03-29 21:19:03"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 21:19:03"}
{"level":"info","message":"Processing batch of 11 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:19:03"}
{"level":"info","message":"Completed batch of 11 MENU_CLICK events in 418ms","service":"mindrune-api","timestamp":"2025-03-29 21:19:04"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 21:19:04"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 132ms","service":"mindrune-api","timestamp":"2025-03-29 21:19:04"}
{"level":"info","message":"All events processed in 551ms","service":"mindrune-api","timestamp":"2025-03-29 21:19:04"}
{"level":"info","message":"Total Neo4j operation time: 647ms","service":"mindrune-api","timestamp":"2025-03-29 21:19:04"}
{"level":"info","message":"Neo4j session closed after 647ms","service":"mindrune-api","timestamp":"2025-03-29 21:19:04"}
{"level":"info","message":"Neo4j insertion completed in 648ms","service":"mindrune-api","timestamp":"2025-03-29 21:19:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:19:04"}
{"level":"info","message":"SQL insertion completed in 22ms","service":"mindrune-api","timestamp":"2025-03-29 21:19:04"}
{"level":"info","message":"Total request processing time: 674ms","service":"mindrune-api","timestamp":"2025-03-29 21:19:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:20:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:20:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:20:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:20:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 21:20:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:20:03"}
{"level":"info","message":"Data size: 3049 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:20:03"}
{"level":"info","message":"Event count: 15","service":"mindrune-api","timestamp":"2025-03-29 21:20:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:20:03"}
{"level":"info","message":"Processing 15 events","service":"mindrune-api","timestamp":"2025-03-29 21:20:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:20:03"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-29 21:20:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 21:20:03"}
{"level":"info","message":"Processing batch of 9 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:20:03"}
{"level":"info","message":"Completed batch of 9 MENU_CLICK events in 873ms","service":"mindrune-api","timestamp":"2025-03-29 21:20:04"}
{"level":"info","message":"Processing batch of 2 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 21:20:04"}
{"level":"info","message":"Completed batch of 2 XP_GAIN events in 203ms","service":"mindrune-api","timestamp":"2025-03-29 21:20:04"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 21:20:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":13,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 21:20:04"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 0 incoming, 3 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 21:20:04"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 203ms","service":"mindrune-api","timestamp":"2025-03-29 21:20:05"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 21:20:05"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 376ms","service":"mindrune-api","timestamp":"2025-03-29 21:20:05"}
{"level":"info","message":"All events processed in 1657ms","service":"mindrune-api","timestamp":"2025-03-29 21:20:05"}
{"level":"info","message":"Total Neo4j operation time: 1753ms","service":"mindrune-api","timestamp":"2025-03-29 21:20:05"}
{"level":"info","message":"Neo4j session closed after 1753ms","service":"mindrune-api","timestamp":"2025-03-29 21:20:05"}
{"level":"info","message":"Neo4j insertion completed in 1754ms","service":"mindrune-api","timestamp":"2025-03-29 21:20:05"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:20:05"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 21:20:05"}
{"level":"info","message":"Total request processing time: 1771ms","service":"mindrune-api","timestamp":"2025-03-29 21:20:05"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Data size: 23476 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Event count: 111","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Processing 111 events","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Player node updated in 121ms","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Processing batch of 32 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Completed batch of 32 XP_GAIN events in 140ms","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Processing batch of 50 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Blue Moon\",\"damage\":7,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Processing 50 HIT_SPLAT events: 18 incoming, 32 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"6608bd4c-d31c-44f1-9775-76eeea10b5c9_7\",\"timestamp\":\"2025-03-30T01:20:07.050644Z\",\"damage\":1,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Blue Moon\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1437,\"locationY\":9680,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 21:21:03"}
{"level":"info","message":"Completed batch of 50 HIT_SPLAT events in 289ms","service":"mindrune-api","timestamp":"2025-03-29 21:21:04"}
{"level":"info","message":"Processing batch of 28 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:21:04"}
{"level":"info","message":"Completed batch of 28 MENU_CLICK events in 762ms","service":"mindrune-api","timestamp":"2025-03-29 21:21:04"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-29 21:21:04"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-29 21:21:04"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 247ms","service":"mindrune-api","timestamp":"2025-03-29 21:21:05"}
{"level":"info","message":"All events processed in 1439ms","service":"mindrune-api","timestamp":"2025-03-29 21:21:05"}
{"level":"info","message":"Total Neo4j operation time: 1561ms","service":"mindrune-api","timestamp":"2025-03-29 21:21:05"}
{"level":"info","message":"Neo4j session closed after 1562ms","service":"mindrune-api","timestamp":"2025-03-29 21:21:05"}
{"level":"info","message":"Neo4j insertion completed in 1563ms","service":"mindrune-api","timestamp":"2025-03-29 21:21:05"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:21:05"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-29 21:21:05"}
{"level":"info","message":"Total request processing time: 1581ms","service":"mindrune-api","timestamp":"2025-03-29 21:21:05"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Data size: 14623 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Event count: 68","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Processing 68 events","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Processing batch of 39 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Blue Moon\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Processing 39 HIT_SPLAT events: 18 incoming, 21 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"25994ad7-2dfd-4c7c-9062-1c8f7e453c3c_0\",\"timestamp\":\"2025-03-30T01:21:04.050855Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Blue Moon\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1443,\"locationY\":9678,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Completed batch of 39 HIT_SPLAT events in 200ms","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 21:22:03"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 97ms","service":"mindrune-api","timestamp":"2025-03-29 21:22:04"}
{"level":"info","message":"Processing batch of 13 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:22:04"}
{"level":"info","message":"Completed batch of 13 MENU_CLICK events in 352ms","service":"mindrune-api","timestamp":"2025-03-29 21:22:04"}
{"level":"info","message":"All events processed in 651ms","service":"mindrune-api","timestamp":"2025-03-29 21:22:04"}
{"level":"info","message":"Total Neo4j operation time: 745ms","service":"mindrune-api","timestamp":"2025-03-29 21:22:04"}
{"level":"info","message":"Neo4j session closed after 746ms","service":"mindrune-api","timestamp":"2025-03-29 21:22:04"}
{"level":"info","message":"Neo4j insertion completed in 746ms","service":"mindrune-api","timestamp":"2025-03-29 21:22:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:22:04"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-29 21:22:04"}
{"level":"info","message":"Total request processing time: 761ms","service":"mindrune-api","timestamp":"2025-03-29 21:22:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:23:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:23:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:23:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:23:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 21:23:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:23:03"}
{"level":"info","message":"Data size: 3522 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:23:03"}
{"level":"info","message":"Event count: 18","service":"mindrune-api","timestamp":"2025-03-29 21:23:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:23:03"}
{"level":"info","message":"Processing 18 events","service":"mindrune-api","timestamp":"2025-03-29 21:23:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:23:03"}
{"level":"info","message":"Player node updated in 104ms","service":"mindrune-api","timestamp":"2025-03-29 21:23:03"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 21:23:03"}
{"level":"info","message":"Processing batch of 13 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:23:03"}
{"level":"info","message":"Completed batch of 13 MENU_CLICK events in 366ms","service":"mindrune-api","timestamp":"2025-03-29 21:23:04"}
{"level":"info","message":"Processing batch of 5 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 21:23:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":130,\"type\":44,\"typeString\":\"Max Damage\",\"source\":\"Enraged Blue Moon\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Enraged Blue Moon\",\"typeString\":\"Max Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 21:23:04"}
{"level":"info","message":"Processing 5 HIT_SPLAT events: 5 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 21:23:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"96584c6a-4506-4c84-99ac-bb34141afd4c_2\",\"timestamp\":\"2025-03-30T01:22:05.250534500Z\",\"damage\":130,\"type\":44,\"typeString\":\"Max Damage\",\"source\":\"Enraged Blue Moon\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1437,\"locationY\":9681,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 21:23:04"}
{"level":"info","message":"Completed batch of 5 HIT_SPLAT events in 181ms","service":"mindrune-api","timestamp":"2025-03-29 21:23:04"}
{"level":"info","message":"All events processed in 548ms","service":"mindrune-api","timestamp":"2025-03-29 21:23:04"}
{"level":"info","message":"Total Neo4j operation time: 653ms","service":"mindrune-api","timestamp":"2025-03-29 21:23:04"}
{"level":"info","message":"Neo4j session closed after 653ms","service":"mindrune-api","timestamp":"2025-03-29 21:23:04"}
{"level":"info","message":"Neo4j insertion completed in 653ms","service":"mindrune-api","timestamp":"2025-03-29 21:23:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:23:04"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-29 21:23:04"}
{"level":"info","message":"Total request processing time: 666ms","service":"mindrune-api","timestamp":"2025-03-29 21:23:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:24:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:24:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:24:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:24:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 21:24:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:24:03"}
{"level":"info","message":"Data size: 860 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:24:03"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-29 21:24:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:24:03"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-29 21:24:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:24:03"}
{"level":"info","message":"Player node updated in 105ms","service":"mindrune-api","timestamp":"2025-03-29 21:24:03"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 21:24:03"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:24:03"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 796ms","service":"mindrune-api","timestamp":"2025-03-29 21:24:04"}
{"level":"info","message":"Processing batch of 1 REWARD events","service":"mindrune-api","timestamp":"2025-03-29 21:24:04"}
{"level":"info","message":"Processing 1 rewards","service":"mindrune-api","timestamp":"2025-03-29 21:24:04"}
{"level":"info","message":"Processing 1 items from rewards","service":"mindrune-api","timestamp":"2025-03-29 21:24:04"}
{"level":"info","message":"Completed batch of 1 REWARD events in 243ms","service":"mindrune-api","timestamp":"2025-03-29 21:24:04"}
{"level":"info","message":"All events processed in 1040ms","service":"mindrune-api","timestamp":"2025-03-29 21:24:04"}
{"level":"info","message":"Total Neo4j operation time: 1145ms","service":"mindrune-api","timestamp":"2025-03-29 21:24:04"}
{"level":"info","message":"Neo4j session closed after 1145ms","service":"mindrune-api","timestamp":"2025-03-29 21:24:04"}
{"level":"info","message":"Neo4j insertion completed in 1147ms","service":"mindrune-api","timestamp":"2025-03-29 21:24:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:24:04"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-29 21:24:04"}
{"level":"info","message":"Total request processing time: 1161ms","service":"mindrune-api","timestamp":"2025-03-29 21:24:04"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 21:32:44"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 21:32:44"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 21:34:04"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 21:34:04"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-29 21:34:06"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 21:34:06"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:46:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:46:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:46:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:46:03"}
{"level":"info","message":"Spam protection check completed in 5ms","service":"mindrune-api","timestamp":"2025-03-29 21:46:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:46:03"}
{"level":"info","message":"Data size: 1734 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:46:03"}
{"level":"info","message":"Event count: 9","service":"mindrune-api","timestamp":"2025-03-29 21:46:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:46:03"}
{"level":"info","message":"Processing 9 events","service":"mindrune-api","timestamp":"2025-03-29 21:46:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:46:03"}
{"level":"info","message":"Player node updated in 109ms","service":"mindrune-api","timestamp":"2025-03-29 21:46:03"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 21:46:03"}
{"level":"info","message":"Processing batch of 8 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:46:03"}
{"level":"info","message":"Completed batch of 8 MENU_CLICK events in 902ms","service":"mindrune-api","timestamp":"2025-03-29 21:46:04"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 21:46:04"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 384ms","service":"mindrune-api","timestamp":"2025-03-29 21:46:05"}
{"level":"info","message":"All events processed in 1287ms","service":"mindrune-api","timestamp":"2025-03-29 21:46:05"}
{"level":"info","message":"Total Neo4j operation time: 1398ms","service":"mindrune-api","timestamp":"2025-03-29 21:46:05"}
{"level":"info","message":"Neo4j session closed after 1398ms","service":"mindrune-api","timestamp":"2025-03-29 21:46:05"}
{"level":"info","message":"Neo4j insertion completed in 1398ms","service":"mindrune-api","timestamp":"2025-03-29 21:46:05"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:46:05"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-29 21:46:05"}
{"level":"info","message":"Total request processing time: 1414ms","service":"mindrune-api","timestamp":"2025-03-29 21:46:05"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:47:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:47:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:47:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:47:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 21:47:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:47:03"}
{"level":"info","message":"Data size: 9563 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:47:03"}
{"level":"info","message":"Event count: 47","service":"mindrune-api","timestamp":"2025-03-29 21:47:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:47:03"}
{"level":"info","message":"Processing 47 events","service":"mindrune-api","timestamp":"2025-03-29 21:47:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:47:03"}
{"level":"info","message":"Player node updated in 108ms","service":"mindrune-api","timestamp":"2025-03-29 21:47:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-29 21:47:03"}
{"level":"info","message":"Processing batch of 11 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:47:03"}
{"level":"info","message":"Completed batch of 11 MENU_CLICK events in 753ms","service":"mindrune-api","timestamp":"2025-03-29 21:47:04"}
{"level":"info","message":"Processing batch of 24 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 21:47:04"}
{"level":"info","message":"Completed batch of 24 XP_GAIN events in 182ms","service":"mindrune-api","timestamp":"2025-03-29 21:47:04"}
{"level":"info","message":"Processing batch of 11 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-29 21:47:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":11,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-29 21:47:04"}
{"level":"info","message":"Processing 11 HIT_SPLAT events: 5 incoming, 6 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-29 21:47:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"ce3b2d3a-0d04-4bb1-93f0-cd4db3fde9a8_16\",\"timestamp\":\"2025-03-30T01:46:24.015029400Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Grimy Lizard\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1512,\"locationY\":9716,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-29 21:47:04"}
{"level":"info","message":"Completed batch of 11 HIT_SPLAT events in 311ms","service":"mindrune-api","timestamp":"2025-03-29 21:47:05"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-29 21:47:05"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-29 21:47:05"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 183ms","service":"mindrune-api","timestamp":"2025-03-29 21:47:05"}
{"level":"info","message":"All events processed in 1430ms","service":"mindrune-api","timestamp":"2025-03-29 21:47:05"}
{"level":"info","message":"Total Neo4j operation time: 1540ms","service":"mindrune-api","timestamp":"2025-03-29 21:47:05"}
{"level":"info","message":"Neo4j session closed after 1540ms","service":"mindrune-api","timestamp":"2025-03-29 21:47:05"}
{"level":"info","message":"Neo4j insertion completed in 1541ms","service":"mindrune-api","timestamp":"2025-03-29 21:47:05"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:47:05"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-29 21:47:05"}
{"level":"info","message":"Total request processing time: 1554ms","service":"mindrune-api","timestamp":"2025-03-29 21:47:05"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:48:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:48:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:48:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:48:03"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-29 21:48:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:48:03"}
{"level":"info","message":"Data size: 1235 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:48:03"}
{"level":"info","message":"Event count: 6","service":"mindrune-api","timestamp":"2025-03-29 21:48:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:48:03"}
{"level":"info","message":"Processing 6 events","service":"mindrune-api","timestamp":"2025-03-29 21:48:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:48:03"}
{"level":"info","message":"Player node updated in 104ms","service":"mindrune-api","timestamp":"2025-03-29 21:48:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 21:48:03"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:48:03"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 885ms","service":"mindrune-api","timestamp":"2025-03-29 21:48:04"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 21:48:04"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 470ms","service":"mindrune-api","timestamp":"2025-03-29 21:48:05"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 21:48:05"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 131ms","service":"mindrune-api","timestamp":"2025-03-29 21:48:05"}
{"level":"info","message":"All events processed in 1488ms","service":"mindrune-api","timestamp":"2025-03-29 21:48:05"}
{"level":"info","message":"Total Neo4j operation time: 1594ms","service":"mindrune-api","timestamp":"2025-03-29 21:48:05"}
{"level":"info","message":"Neo4j session closed after 1594ms","service":"mindrune-api","timestamp":"2025-03-29 21:48:05"}
{"level":"info","message":"Neo4j insertion completed in 1594ms","service":"mindrune-api","timestamp":"2025-03-29 21:48:05"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:48:05"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-29 21:48:05"}
{"level":"info","message":"Total request processing time: 1609ms","service":"mindrune-api","timestamp":"2025-03-29 21:48:05"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:50:53"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:50:53"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:50:53"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:50:53"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 21:50:53"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:50:53"}
{"level":"info","message":"Data size: 2060 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:50:53"}
{"level":"info","message":"Event count: 11","service":"mindrune-api","timestamp":"2025-03-29 21:50:53"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:50:53"}
{"level":"info","message":"Processing 11 events","service":"mindrune-api","timestamp":"2025-03-29 21:50:53"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:50:53"}
{"level":"info","message":"Player node updated in 133ms","service":"mindrune-api","timestamp":"2025-03-29 21:50:53"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-29 21:50:53"}
{"level":"info","message":"Processing batch of 11 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:50:53"}
{"level":"info","message":"Completed batch of 11 MENU_CLICK events in 428ms","service":"mindrune-api","timestamp":"2025-03-29 21:50:54"}
{"level":"info","message":"All events processed in 428ms","service":"mindrune-api","timestamp":"2025-03-29 21:50:54"}
{"level":"info","message":"Total Neo4j operation time: 563ms","service":"mindrune-api","timestamp":"2025-03-29 21:50:54"}
{"level":"info","message":"Neo4j session closed after 564ms","service":"mindrune-api","timestamp":"2025-03-29 21:50:54"}
{"level":"info","message":"Neo4j insertion completed in 564ms","service":"mindrune-api","timestamp":"2025-03-29 21:50:54"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:50:54"}
{"level":"info","message":"SQL insertion completed in 23ms","service":"mindrune-api","timestamp":"2025-03-29 21:50:54"}
{"level":"info","message":"Total request processing time: 590ms","service":"mindrune-api","timestamp":"2025-03-29 21:50:54"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:51:53"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:51:53"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:51:53"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:51:53"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 21:51:53"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:51:53"}
{"level":"info","message":"Data size: 1068 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:51:53"}
{"level":"info","message":"Event count: 5","service":"mindrune-api","timestamp":"2025-03-29 21:51:53"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:51:53"}
{"level":"info","message":"Processing 5 events","service":"mindrune-api","timestamp":"2025-03-29 21:51:53"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:51:53"}
{"level":"info","message":"Player node updated in 95ms","service":"mindrune-api","timestamp":"2025-03-29 21:51:53"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 21:51:53"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 21:51:53"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 655ms","service":"mindrune-api","timestamp":"2025-03-29 21:51:54"}
{"level":"info","message":"Processing batch of 2 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 21:51:54"}
{"level":"info","message":"Completed batch of 2 XP_GAIN events in 216ms","service":"mindrune-api","timestamp":"2025-03-29 21:51:54"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 21:51:54"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 348ms","service":"mindrune-api","timestamp":"2025-03-29 21:51:54"}
{"level":"info","message":"All events processed in 1221ms","service":"mindrune-api","timestamp":"2025-03-29 21:51:54"}
{"level":"info","message":"Total Neo4j operation time: 1316ms","service":"mindrune-api","timestamp":"2025-03-29 21:51:54"}
{"level":"info","message":"Neo4j session closed after 1316ms","service":"mindrune-api","timestamp":"2025-03-29 21:51:54"}
{"level":"info","message":"Neo4j insertion completed in 1317ms","service":"mindrune-api","timestamp":"2025-03-29 21:51:54"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:51:54"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-29 21:51:54"}
{"level":"info","message":"Total request processing time: 1333ms","service":"mindrune-api","timestamp":"2025-03-29 21:51:54"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Data size: 1872 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Event count: 9","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Processing 9 events","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Player node updated in 95ms","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Processing batch of 6 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Completed batch of 6 XP_GAIN events in 167ms","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 21:52:53"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 379ms","service":"mindrune-api","timestamp":"2025-03-29 21:52:54"}
{"level":"info","message":"All events processed in 546ms","service":"mindrune-api","timestamp":"2025-03-29 21:52:54"}
{"level":"info","message":"Total Neo4j operation time: 642ms","service":"mindrune-api","timestamp":"2025-03-29 21:52:54"}
{"level":"info","message":"Neo4j session closed after 642ms","service":"mindrune-api","timestamp":"2025-03-29 21:52:54"}
{"level":"info","message":"Neo4j insertion completed in 643ms","service":"mindrune-api","timestamp":"2025-03-29 21:52:54"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:52:54"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-29 21:52:54"}
{"level":"info","message":"Total request processing time: 656ms","service":"mindrune-api","timestamp":"2025-03-29 21:52:54"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Data size: 3044 bytes","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Event count: 15","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Processing 15 events","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Processing batch of 10 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Completed batch of 10 XP_GAIN events in 97ms","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Processing batch of 5 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 21:53:53"}
{"level":"info","message":"Completed batch of 5 INVENTORY_CHANGE events in 301ms","service":"mindrune-api","timestamp":"2025-03-29 21:53:54"}
{"level":"info","message":"All events processed in 399ms","service":"mindrune-api","timestamp":"2025-03-29 21:53:54"}
{"level":"info","message":"Total Neo4j operation time: 493ms","service":"mindrune-api","timestamp":"2025-03-29 21:53:54"}
{"level":"info","message":"Neo4j session closed after 493ms","service":"mindrune-api","timestamp":"2025-03-29 21:53:54"}
{"level":"info","message":"Neo4j insertion completed in 494ms","service":"mindrune-api","timestamp":"2025-03-29 21:53:54"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 21:53:54"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-29 21:53:54"}
{"level":"info","message":"Total request processing time: 508ms","service":"mindrune-api","timestamp":"2025-03-29 21:53:54"}
{"level":"error","message":"Neo4j error: Invalid input 'OR': expected a graph pattern, 'FOREACH', ',', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'USING', 'WHERE', 'WITH' or <EOF> (line 12, column 1 (offset: 382))\n\"OR (players)-[:PERFORMED|KILLED]->(events)\"\n ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n// Get all players for this account\nMATCH (players:Player {account: $account})\n\n// Process each player separately with a reasonable event limit\nWITH players\nORDER BY players.name\nLIMIT 10  // Prevent too many players overloading the visualization\n\n// For each player, get their events with proper separation\nMATCH (events)-[:PERFORMED_BY|GAINED_BY|RECEIVED_BY|TARGETED]->(players)\nOR (players)-[:PERFORMED|KILLED]->(events)\n\n// Sort by timestamp and limit per player for better performance\nWITH players, events\nORDER BY events.timestamp DESC\nLIMIT 75  // Reduced limit per player to improve performance\n\n// Collect events per player\nWITH players, collect(events) as playerEvents\n\n// Get node connections for visualization with proper player attribution\nUNWIND playerEvents as event\n\n// Get direct outgoing relationships from events\nOPTIONAL MATCH (event)-[r1]->(n1)\nWHERE NOT type(r1) = \"PART_OF\"\n\n// Get direct incoming relationships to events\nOPTIONAL MATCH (n2)-[r2]->(event)\nWHERE NOT (n2:Player OR n2 = players)\n\n// Collect all nodes and relationships\nWITH collect(DISTINCT players) as allPlayers,\n     collect(DISTINCT event) as allEvents,\n     collect(DISTINCT n1) as outNodes,\n     collect(DISTINCT n2) as inNodes, \n     collect(DISTINCT r1) as outRels,\n     collect(DISTINCT r2) as inRels\n\n// Return the final combined data\nRETURN\n  allPlayers as players,\n  allEvents as events,\n  outNodes + inNodes as entities,\n  outRels + inRels as relationships\n","service":"mindrune-api","timestamp":"2025-03-29 21:57:22"}
{"level":"error","message":"500 - Neo4j error: Invalid input 'OR': expected a graph pattern, 'FOREACH', ',', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'USING', 'WHERE', 'WITH' or <EOF> (line 12, column 1 (offset: 382))\n\"OR (players)-[:PERFORMED|KILLED]->(events)\"\n ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 21:57:22"}
{"level":"error","message":"Neo4j error: Invalid input 'OR': expected a graph pattern, 'FOREACH', ',', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'USING', 'WHERE', 'WITH' or <EOF> (line 12, column 1 (offset: 382))\n\"OR (players)-[:PERFORMED|KILLED]->(events)\"\n ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n// Get all players for this account\nMATCH (players:Player {account: $account})\n\n// Process each player separately with a reasonable event limit\nWITH players\nORDER BY players.name\nLIMIT 10  // Prevent too many players overloading the visualization\n\n// For each player, get their events with proper separation\nMATCH (events)-[:PERFORMED_BY|GAINED_BY|RECEIVED_BY|TARGETED]->(players)\nOR (players)-[:PERFORMED|KILLED]->(events)\n\n// Sort by timestamp and limit per player for better performance\nWITH players, events\nORDER BY events.timestamp DESC\nLIMIT 75  // Reduced limit per player to improve performance\n\n// Collect events per player\nWITH players, collect(events) as playerEvents\n\n// Get node connections for visualization with proper player attribution\nUNWIND playerEvents as event\n\n// Get direct outgoing relationships from events\nOPTIONAL MATCH (event)-[r1]->(n1)\nWHERE NOT type(r1) = \"PART_OF\"\n\n// Get direct incoming relationships to events\nOPTIONAL MATCH (n2)-[r2]->(event)\nWHERE NOT (n2:Player OR n2 = players)\n\n// Collect all nodes and relationships\nWITH collect(DISTINCT players) as allPlayers,\n     collect(DISTINCT event) as allEvents,\n     collect(DISTINCT n1) as outNodes,\n     collect(DISTINCT n2) as inNodes, \n     collect(DISTINCT r1) as outRels,\n     collect(DISTINCT r2) as inRels\n\n// Return the final combined data\nRETURN\n  allPlayers as players,\n  allEvents as events,\n  outNodes + inNodes as entities,\n  outRels + inRels as relationships\n","service":"mindrune-api","timestamp":"2025-03-29 21:57:22"}
{"level":"error","message":"500 - Neo4j error: Invalid input 'OR': expected a graph pattern, 'FOREACH', ',', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'USING', 'WHERE', 'WITH' or <EOF> (line 12, column 1 (offset: 382))\n\"OR (players)-[:PERFORMED|KILLED]->(events)\"\n ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 21:57:22"}
{"level":"error","message":"Neo4j error: Invalid input 'OR': expected a graph pattern, 'FOREACH', ',', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'USING', 'WHERE', 'WITH' or <EOF> (line 12, column 1 (offset: 382))\n\"OR (players)-[:PERFORMED|KILLED]->(events)\"\n ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n// Get all players for this account\nMATCH (players:Player {account: $account})\n\n// Process each player separately with a reasonable event limit\nWITH players\nORDER BY players.name\nLIMIT 10  // Prevent too many players overloading the visualization\n\n// For each player, get their events with proper separation\nMATCH (events)-[:PERFORMED_BY|GAINED_BY|RECEIVED_BY|TARGETED]->(players)\nOR (players)-[:PERFORMED|KILLED]->(events)\n\n// Sort by timestamp and limit per player for better performance\nWITH players, events\nORDER BY events.timestamp DESC\nLIMIT 75  // Reduced limit per player to improve performance\n\n// Collect events per player\nWITH players, collect(events) as playerEvents\n\n// Get node connections for visualization with proper player attribution\nUNWIND playerEvents as event\n\n// Get direct outgoing relationships from events\nOPTIONAL MATCH (event)-[r1]->(n1)\nWHERE NOT type(r1) = \"PART_OF\"\n\n// Get direct incoming relationships to events\nOPTIONAL MATCH (n2)-[r2]->(event)\nWHERE NOT (n2:Player OR n2 = players)\n\n// Collect all nodes and relationships\nWITH collect(DISTINCT players) as allPlayers,\n     collect(DISTINCT event) as allEvents,\n     collect(DISTINCT n1) as outNodes,\n     collect(DISTINCT n2) as inNodes, \n     collect(DISTINCT r1) as outRels,\n     collect(DISTINCT r2) as inRels\n\n// Return the final combined data\nRETURN\n  allPlayers as players,\n  allEvents as events,\n  outNodes + inNodes as entities,\n  outRels + inRels as relationships\n","service":"mindrune-api","timestamp":"2025-03-29 21:57:27"}
{"level":"error","message":"500 - Neo4j error: Invalid input 'OR': expected a graph pattern, 'FOREACH', ',', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'USING', 'WHERE', 'WITH' or <EOF> (line 12, column 1 (offset: 382))\n\"OR (players)-[:PERFORMED|KILLED]->(events)\"\n ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 21:57:27"}
{"level":"error","message":"Neo4j error: Variable `players` already declared in outer scope (line 15, column 10 (offset: 450))\n\"  RETURN players, events\"\n          ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n// Get all players for this account\nMATCH (players:Player {account: $account})\n\n// Process each player separately with a reasonable event limit\nWITH players\nORDER BY players.name\nLIMIT 10  // Prevent too many players overloading the visualization\n\n// For each player, get their events with proper separation using UNION\nCALL {\n  WITH players\n  // Get incoming events (where player is the target)\n  MATCH (events)-[:PERFORMED_BY]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (events)-[:GAINED_BY]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (events)-[:RECEIVED_BY]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (events)-[:TARGETED]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  // Get outgoing events (where player is the source)\n  MATCH (players)-[:PERFORMED]->(events)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (players)-[:KILLED]->(events)\n  RETURN players, events\n}\n\n// Sort by timestamp and limit per player for better performance\nWITH players, events\nORDER BY events.timestamp DESC\nLIMIT 75  // Reduced limit per player to improve performance\n\n// Collect events per player\nWITH players, collect(events) as playerEvents\n\n// Get node connections for visualization with proper player attribution\nUNWIND playerEvents as event\n\n// Get direct outgoing relationships from events\nOPTIONAL MATCH (event)-[r1]->(n1)\nWHERE NOT type(r1) = \"PART_OF\"\n\n// Get direct incoming relationships to events\nOPTIONAL MATCH (n2)-[r2]->(event)\nWHERE NOT (n2:Player OR n2 = players)\n\n// Collect all nodes and relationships\nWITH collect(DISTINCT players) as allPlayers,\n     collect(DISTINCT event) as allEvents,\n     collect(DISTINCT n1) as outNodes,\n     collect(DISTINCT n2) as inNodes, \n     collect(DISTINCT r1) as outRels,\n     collect(DISTINCT r2) as inRels\n\n// Return the final combined data\nRETURN\n  allPlayers as players,\n  allEvents as events,\n  outNodes + inNodes as entities,\n  outRels + inRels as relationships\n","service":"mindrune-api","timestamp":"2025-03-29 21:58:25"}
{"level":"error","message":"500 - Neo4j error: Variable `players` already declared in outer scope (line 15, column 10 (offset: 450))\n\"  RETURN players, events\"\n          ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 21:58:25"}
{"level":"error","message":"Neo4j error: Variable `players` already declared in outer scope (line 15, column 10 (offset: 450))\n\"  RETURN players, events\"\n          ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n// Get all players for this account\nMATCH (players:Player {account: $account})\n\n// Process each player separately with a reasonable event limit\nWITH players\nORDER BY players.name\nLIMIT 10  // Prevent too many players overloading the visualization\n\n// For each player, get their events with proper separation using UNION\nCALL {\n  WITH players\n  // Get incoming events (where player is the target)\n  MATCH (events)-[:PERFORMED_BY]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (events)-[:GAINED_BY]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (events)-[:RECEIVED_BY]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (events)-[:TARGETED]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  // Get outgoing events (where player is the source)\n  MATCH (players)-[:PERFORMED]->(events)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (players)-[:KILLED]->(events)\n  RETURN players, events\n}\n\n// Sort by timestamp and limit per player for better performance\nWITH players, events\nORDER BY events.timestamp DESC\nLIMIT 75  // Reduced limit per player to improve performance\n\n// Collect events per player\nWITH players, collect(events) as playerEvents\n\n// Get node connections for visualization with proper player attribution\nUNWIND playerEvents as event\n\n// Get direct outgoing relationships from events\nOPTIONAL MATCH (event)-[r1]->(n1)\nWHERE NOT type(r1) = \"PART_OF\"\n\n// Get direct incoming relationships to events\nOPTIONAL MATCH (n2)-[r2]->(event)\nWHERE NOT (n2:Player OR n2 = players)\n\n// Collect all nodes and relationships\nWITH collect(DISTINCT players) as allPlayers,\n     collect(DISTINCT event) as allEvents,\n     collect(DISTINCT n1) as outNodes,\n     collect(DISTINCT n2) as inNodes, \n     collect(DISTINCT r1) as outRels,\n     collect(DISTINCT r2) as inRels\n\n// Return the final combined data\nRETURN\n  allPlayers as players,\n  allEvents as events,\n  outNodes + inNodes as entities,\n  outRels + inRels as relationships\n","service":"mindrune-api","timestamp":"2025-03-29 21:58:25"}
{"level":"error","message":"500 - Neo4j error: Variable `players` already declared in outer scope (line 15, column 10 (offset: 450))\n\"  RETURN players, events\"\n          ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 21:58:25"}
{"level":"error","message":"Neo4j error: Variable `players` already declared in outer scope (line 15, column 10 (offset: 450))\n\"  RETURN players, events\"\n          ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n// Get all players for this account\nMATCH (players:Player {account: $account})\n\n// Process each player separately with a reasonable event limit\nWITH players\nORDER BY players.name\nLIMIT 10  // Prevent too many players overloading the visualization\n\n// For each player, get their events with proper separation using UNION\nCALL {\n  WITH players\n  // Get incoming events (where player is the target)\n  MATCH (events)-[:PERFORMED_BY]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (events)-[:GAINED_BY]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (events)-[:RECEIVED_BY]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (events)-[:TARGETED]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  // Get outgoing events (where player is the source)\n  MATCH (players)-[:PERFORMED]->(events)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (players)-[:KILLED]->(events)\n  RETURN players, events\n}\n\n// Sort by timestamp and limit per player for better performance\nWITH players, events\nORDER BY events.timestamp DESC\nLIMIT 75  // Reduced limit per player to improve performance\n\n// Collect events per player\nWITH players, collect(events) as playerEvents\n\n// Get node connections for visualization with proper player attribution\nUNWIND playerEvents as event\n\n// Get direct outgoing relationships from events\nOPTIONAL MATCH (event)-[r1]->(n1)\nWHERE NOT type(r1) = \"PART_OF\"\n\n// Get direct incoming relationships to events\nOPTIONAL MATCH (n2)-[r2]->(event)\nWHERE NOT (n2:Player OR n2 = players)\n\n// Collect all nodes and relationships\nWITH collect(DISTINCT players) as allPlayers,\n     collect(DISTINCT event) as allEvents,\n     collect(DISTINCT n1) as outNodes,\n     collect(DISTINCT n2) as inNodes, \n     collect(DISTINCT r1) as outRels,\n     collect(DISTINCT r2) as inRels\n\n// Return the final combined data\nRETURN\n  allPlayers as players,\n  allEvents as events,\n  outNodes + inNodes as entities,\n  outRels + inRels as relationships\n","service":"mindrune-api","timestamp":"2025-03-29 21:58:28"}
{"level":"error","message":"500 - Neo4j error: Variable `players` already declared in outer scope (line 15, column 10 (offset: 450))\n\"  RETURN players, events\"\n          ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 21:58:28"}
{"level":"error","message":"Neo4j error: Variable `players` already declared in outer scope (line 15, column 10 (offset: 450))\n\"  RETURN players, events\"\n          ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n// Get all players for this account\nMATCH (players:Player {account: $account})\n\n// Process each player separately with a reasonable event limit\nWITH players\nORDER BY players.name\nLIMIT 10  // Prevent too many players overloading the visualization\n\n// For each player, get their events with proper separation using UNION\nCALL {\n  WITH players\n  // Get incoming events (where player is the target)\n  MATCH (events)-[:PERFORMED_BY]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (events)-[:GAINED_BY]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (events)-[:RECEIVED_BY]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (events)-[:TARGETED]->(players)\n  RETURN players, events\n  UNION\n  WITH players\n  // Get outgoing events (where player is the source)\n  MATCH (players)-[:PERFORMED]->(events)\n  RETURN players, events\n  UNION\n  WITH players\n  MATCH (players)-[:KILLED]->(events)\n  RETURN players, events\n}\n\n// Sort by timestamp and limit per player for better performance\nWITH players, events\nORDER BY events.timestamp DESC\nLIMIT 75  // Reduced limit per player to improve performance\n\n// Collect events per player\nWITH players, collect(events) as playerEvents\n\n// Get node connections for visualization with proper player attribution\nUNWIND playerEvents as event\n\n// Get direct outgoing relationships from events\nOPTIONAL MATCH (event)-[r1]->(n1)\nWHERE NOT type(r1) = \"PART_OF\"\n\n// Get direct incoming relationships to events\nOPTIONAL MATCH (n2)-[r2]->(event)\nWHERE NOT (n2:Player OR n2 = players)\n\n// Collect all nodes and relationships\nWITH collect(DISTINCT players) as allPlayers,\n     collect(DISTINCT event) as allEvents,\n     collect(DISTINCT n1) as outNodes,\n     collect(DISTINCT n2) as inNodes, \n     collect(DISTINCT r1) as outRels,\n     collect(DISTINCT r2) as inRels\n\n// Return the final combined data\nRETURN\n  allPlayers as players,\n  allEvents as events,\n  outNodes + inNodes as entities,\n  outRels + inRels as relationships\n","service":"mindrune-api","timestamp":"2025-03-29 22:05:21"}
{"level":"error","message":"500 - Neo4j error: Variable `players` already declared in outer scope (line 15, column 10 (offset: 450))\n\"  RETURN players, events\"\n          ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-29 22:05:21"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-29 23:36:48"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-29 23:36:48"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-29 23:36:53"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:36:53"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:36:53"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 23:36:53"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:36:53"}
{"level":"info","message":"Spam protection check completed in 4ms","service":"mindrune-api","timestamp":"2025-03-29 23:36:53"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:36:53"}
{"level":"info","message":"Data size: 2161 bytes","service":"mindrune-api","timestamp":"2025-03-29 23:36:53"}
{"level":"info","message":"Event count: 11","service":"mindrune-api","timestamp":"2025-03-29 23:36:53"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:36:53"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-29 23:36:53"}
{"level":"info","message":"Processing 11 events","service":"mindrune-api","timestamp":"2025-03-29 23:36:53"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 23:36:53"}
{"level":"info","message":"Player node updated in 402ms","service":"mindrune-api","timestamp":"2025-03-29 23:36:54"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-29 23:36:54"}
{"level":"info","message":"Processing batch of 5 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-29 23:36:54"}
{"level":"info","message":"Completed batch of 5 MENU_CLICK events in 1036ms","service":"mindrune-api","timestamp":"2025-03-29 23:36:55"}
{"level":"info","message":"Processing batch of 4 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 23:36:55"}
{"level":"info","message":"Completed batch of 4 XP_GAIN events in 203ms","service":"mindrune-api","timestamp":"2025-03-29 23:36:55"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 23:36:55"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 497ms","service":"mindrune-api","timestamp":"2025-03-29 23:36:55"}
{"level":"info","message":"All events processed in 1738ms","service":"mindrune-api","timestamp":"2025-03-29 23:36:55"}
{"level":"info","message":"Total Neo4j operation time: 2144ms","service":"mindrune-api","timestamp":"2025-03-29 23:36:55"}
{"level":"info","message":"Neo4j session closed after 2144ms","service":"mindrune-api","timestamp":"2025-03-29 23:36:55"}
{"level":"info","message":"Neo4j insertion completed in 2147ms","service":"mindrune-api","timestamp":"2025-03-29 23:36:55"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 23:36:55"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-29 23:36:55"}
{"level":"info","message":"Total request processing time: 2166ms","service":"mindrune-api","timestamp":"2025-03-29 23:36:55"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:37:53"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:37:53"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 23:37:53"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:37:53"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-29 23:37:53"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:37:53"}
{"level":"info","message":"Data size: 1872 bytes","service":"mindrune-api","timestamp":"2025-03-29 23:37:53"}
{"level":"info","message":"Event count: 9","service":"mindrune-api","timestamp":"2025-03-29 23:37:53"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:37:53"}
{"level":"info","message":"Processing 9 events","service":"mindrune-api","timestamp":"2025-03-29 23:37:53"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 23:37:53"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-29 23:38:00"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-29 23:38:00"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-29 23:38:06"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-29 23:38:06"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Data size: 1872 bytes","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Event count: 9","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Processing 9 events","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Player node updated in 96ms","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Processing batch of 6 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Completed batch of 6 XP_GAIN events in 209ms","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 23:38:53"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 371ms","service":"mindrune-api","timestamp":"2025-03-29 23:38:54"}
{"level":"info","message":"All events processed in 580ms","service":"mindrune-api","timestamp":"2025-03-29 23:38:54"}
{"level":"info","message":"Total Neo4j operation time: 678ms","service":"mindrune-api","timestamp":"2025-03-29 23:38:54"}
{"level":"info","message":"Neo4j session closed after 678ms","service":"mindrune-api","timestamp":"2025-03-29 23:38:54"}
{"level":"info","message":"Neo4j insertion completed in 679ms","service":"mindrune-api","timestamp":"2025-03-29 23:38:54"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 23:38:54"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-29 23:38:54"}
{"level":"info","message":"Total request processing time: 697ms","service":"mindrune-api","timestamp":"2025-03-29 23:38:54"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Data size: 1866 bytes","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Event count: 9","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Processing 9 events","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Player node updated in 102ms","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Processing batch of 6 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Completed batch of 6 XP_GAIN events in 167ms","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-29 23:39:53"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 373ms","service":"mindrune-api","timestamp":"2025-03-29 23:39:54"}
{"level":"info","message":"All events processed in 540ms","service":"mindrune-api","timestamp":"2025-03-29 23:39:54"}
{"level":"info","message":"Total Neo4j operation time: 644ms","service":"mindrune-api","timestamp":"2025-03-29 23:39:54"}
{"level":"info","message":"Neo4j session closed after 645ms","service":"mindrune-api","timestamp":"2025-03-29 23:39:54"}
{"level":"info","message":"Neo4j insertion completed in 645ms","service":"mindrune-api","timestamp":"2025-03-29 23:39:54"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-29 23:39:54"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-29 23:39:54"}
{"level":"info","message":"Total request processing time: 660ms","service":"mindrune-api","timestamp":"2025-03-29 23:39:54"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 07:23:25"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 07:23:25"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 07:23:25"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 07:23:25"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-30 07:23:25"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 07:23:25"}
{"level":"info","message":"Data size: 6372 bytes","service":"mindrune-api","timestamp":"2025-03-30 07:23:25"}
{"level":"info","message":"Event count: 30","service":"mindrune-api","timestamp":"2025-03-30 07:23:25"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 07:23:25"}
{"level":"info","message":"Processing 30 events","service":"mindrune-api","timestamp":"2025-03-30 07:23:25"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 07:23:25"}
{"level":"info","message":"Player node updated in 111ms","service":"mindrune-api","timestamp":"2025-03-30 07:23:25"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-30 07:23:25"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 07:23:25"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 852ms","service":"mindrune-api","timestamp":"2025-03-30 07:23:26"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-30 07:23:26"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 129ms","service":"mindrune-api","timestamp":"2025-03-30 07:23:26"}
{"level":"info","message":"Processing batch of 9 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-30 07:23:26"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":28,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-30 07:23:26"}
{"level":"info","message":"Processing 9 HIT_SPLAT events: 4 incoming, 5 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-30 07:23:26"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"a1e09b18-0b0b-4103-8338-c97276da81df_8\",\"timestamp\":\"2025-03-30T11:22:46.420158800Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Grimy Lizard\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1509,\"locationY\":9714,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-30 07:23:26"}
{"level":"info","message":"Completed batch of 9 HIT_SPLAT events in 414ms","service":"mindrune-api","timestamp":"2025-03-30 07:23:27"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-30 07:23:27"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-30 07:23:27"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 175ms","service":"mindrune-api","timestamp":"2025-03-30 07:23:27"}
{"level":"info","message":"All events processed in 1574ms","service":"mindrune-api","timestamp":"2025-03-30 07:23:27"}
{"level":"info","message":"Total Neo4j operation time: 1687ms","service":"mindrune-api","timestamp":"2025-03-30 07:23:27"}
{"level":"info","message":"Neo4j session closed after 1687ms","service":"mindrune-api","timestamp":"2025-03-30 07:23:27"}
{"level":"info","message":"Neo4j insertion completed in 1687ms","service":"mindrune-api","timestamp":"2025-03-30 07:23:27"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 07:23:27"}
{"level":"info","message":"SQL insertion completed in 16ms","service":"mindrune-api","timestamp":"2025-03-30 07:23:27"}
{"level":"info","message":"Total request processing time: 1706ms","service":"mindrune-api","timestamp":"2025-03-30 07:23:27"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 07:24:25"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 07:24:25"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 07:24:25"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 07:24:25"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 07:24:25"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 07:24:25"}
{"level":"info","message":"Data size: 451 bytes","service":"mindrune-api","timestamp":"2025-03-30 07:24:25"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-30 07:24:25"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 07:24:25"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-30 07:24:25"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 07:24:25"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-30 07:24:25"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-30 07:24:25"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 07:24:25"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 542ms","service":"mindrune-api","timestamp":"2025-03-30 07:24:26"}
{"level":"info","message":"All events processed in 543ms","service":"mindrune-api","timestamp":"2025-03-30 07:24:26"}
{"level":"info","message":"Total Neo4j operation time: 636ms","service":"mindrune-api","timestamp":"2025-03-30 07:24:26"}
{"level":"info","message":"Neo4j session closed after 636ms","service":"mindrune-api","timestamp":"2025-03-30 07:24:26"}
{"level":"info","message":"Neo4j insertion completed in 636ms","service":"mindrune-api","timestamp":"2025-03-30 07:24:26"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 07:24:26"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-30 07:24:26"}
{"level":"info","message":"Total request processing time: 650ms","service":"mindrune-api","timestamp":"2025-03-30 07:24:26"}
{"level":"error","message":"500 - Cannot read properties of undefined (reading 'toString') - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 07:30:10"}
{"level":"error","message":"500 - Cannot read properties of undefined (reading 'toString') - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 07:30:10"}
{"level":"error","message":"500 - Cannot read properties of undefined (reading 'toString') - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 07:30:14"}
{"level":"error","message":"500 - Cannot read properties of undefined (reading 'toString') - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 07:30:20"}
{"level":"error","message":"500 - Query must include $account parameter for security - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 09:40:04"}
{"level":"error","message":"500 - Query must include $account parameter for security - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 09:40:04"}
{"level":"error","message":"500 - Query must include $account parameter for security - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 09:40:09"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 09:56:25"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 09:56:25"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 09:56:25"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 09:56:25"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-30 09:56:25"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 09:56:25"}
{"level":"info","message":"Data size: 5735 bytes","service":"mindrune-api","timestamp":"2025-03-30 09:56:25"}
{"level":"info","message":"Event count: 27","service":"mindrune-api","timestamp":"2025-03-30 09:56:25"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 09:56:25"}
{"level":"info","message":"Processing 27 events","service":"mindrune-api","timestamp":"2025-03-30 09:56:25"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 09:56:25"}
{"level":"info","message":"Player node updated in 114ms","service":"mindrune-api","timestamp":"2025-03-30 09:56:25"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-30 09:56:25"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 09:56:25"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 872ms","service":"mindrune-api","timestamp":"2025-03-30 09:56:26"}
{"level":"info","message":"Processing batch of 16 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-30 09:56:26"}
{"level":"info","message":"Completed batch of 16 XP_GAIN events in 132ms","service":"mindrune-api","timestamp":"2025-03-30 09:56:26"}
{"level":"info","message":"Processing batch of 7 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-30 09:56:26"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":30,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-30 09:56:26"}
{"level":"info","message":"Processing 7 HIT_SPLAT events: 3 incoming, 4 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-30 09:56:26"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"a79c28d1-9c6b-48c9-a385-776ae981b6d0_8\",\"timestamp\":\"2025-03-30T13:55:38.461806500Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Grimy Lizard\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1508,\"locationY\":9715,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-30 09:56:26"}
{"level":"info","message":"Completed batch of 7 HIT_SPLAT events in 418ms","service":"mindrune-api","timestamp":"2025-03-30 09:56:27"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-30 09:56:27"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-30 09:56:27"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 173ms","service":"mindrune-api","timestamp":"2025-03-30 09:56:27"}
{"level":"info","message":"All events processed in 1597ms","service":"mindrune-api","timestamp":"2025-03-30 09:56:27"}
{"level":"info","message":"Total Neo4j operation time: 1713ms","service":"mindrune-api","timestamp":"2025-03-30 09:56:27"}
{"level":"info","message":"Neo4j session closed after 1713ms","service":"mindrune-api","timestamp":"2025-03-30 09:56:27"}
{"level":"info","message":"Neo4j insertion completed in 1713ms","service":"mindrune-api","timestamp":"2025-03-30 09:56:27"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 09:56:27"}
{"level":"info","message":"SQL insertion completed in 16ms","service":"mindrune-api","timestamp":"2025-03-30 09:56:27"}
{"level":"info","message":"Total request processing time: 1734ms","service":"mindrune-api","timestamp":"2025-03-30 09:56:27"}
{"level":"error","message":"500 - Cannot read properties of undefined (reading 'toString') - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:01:56"}
{"level":"error","message":"500 - Cannot read properties of undefined (reading 'toString') - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:01:56"}
{"level":"error","message":"500 - Cannot read properties of undefined (reading 'toString') - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:02:00"}
{"level":"error","message":"500 - Cannot read properties of undefined (reading 'toString') - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:02:02"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:04:08"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:04:08"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:04:08"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:04:08"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:04:13"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:04:13"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:04:21"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:04:21"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:04:21"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:04:21"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:04:24"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:04:24"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:04:26"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:04:26"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:06:24"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:06:24"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:06:26"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:06:26"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:08:59"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:08:59"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:09:00"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:09:00"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:21:33"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:21:33"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:21:33"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:21:33"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:21:38"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:21:38"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:21:39"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:21:39"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:22:02"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:22:02"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:22:02"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:22:02"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:22:06"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:22:06"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2203))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","eventLimit":2000,"playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT toInteger($eventLimit)\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:22:13"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2203))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:22:13"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2203))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","eventLimit":2000,"playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT toInteger($eventLimit)\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:22:13"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2203))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:22:13"}
{"level":"error","message":"Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer.","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n      // Get all players for this account\n      MATCH (players:Player {account: $account})\n      \n      // Collect the players first\n      WITH collect(players) as allPlayers\n      \n      // Process each player separately to get their events\n      UNWIND allPlayers as currentPlayer\n      \n      // For each player, find events with various relationships in batches\n      // This avoids variable scope issues with CALL blocks\n      MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n      WITH currentPlayer, collect(events) as type1Events\n      \n      MATCH (events)-[:GAINED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, collect(events) as type2Events\n      \n      MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n      \n      MATCH (events)-[:TARGETED]->(currentPlayer)\n      WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n      \n      MATCH (currentPlayer)-[:PERFORMED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n      \n      MATCH (currentPlayer)-[:KILLED]->(events)\n      WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n      \n      // Combine all event types and sort by timestamp\n      WITH currentPlayer, \n           type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n      \n      // To remove duplicates more efficiently (without requiring APOC)\n      WITH currentPlayer, combinedEvents as events\n      UNWIND events as event\n      WITH currentPlayer, event\n      WHERE event IS NOT NULL\n      WITH currentPlayer, collect(DISTINCT event) as uniqueEvents\n      \n      // Sort events by timestamp and take only the most recent ones\n      WITH currentPlayer, uniqueEvents\n      UNWIND uniqueEvents as event\n      WITH currentPlayer, event\n      ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n      \n      // Collect player-specific events\n      WITH currentPlayer, collect(event) as playerEvents\n      \n      // Add to our result collection of player-event pairs\n      WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n      \n      // Now process all the relationships for visualization\n      UNWIND playerData as pd\n      WITH pd.player as player, pd.events as events\n      \n      // Flatten events for relationship discovery\n      UNWIND events as event\n      \n      // Get outgoing relationships from events\n      OPTIONAL MATCH (event)-[r1]->(n1)\n      WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get incoming relationships to events\n      OPTIONAL MATCH (n2)-[r2]->(event)\n      WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n      \n      // Collect all the results\n      RETURN \n        collect(distinct player) as players,\n        collect(distinct event) as events,\n        collect(distinct n1) + collect(distinct n2) as entities,\n        collect(distinct r1) + collect(distinct r2) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:22:14"}
{"level":"error","message":"500 - Neo4j error: LIMIT: Invalid input. '300.0' is not a valid value. Must be a non-negative integer. - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:22:14"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2203))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","eventLimit":2000,"playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT toInteger($eventLimit)\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:22:16"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2203))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:22:16"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 11 (offset: 2310))\n\"          outNodes + inNodes + collect(distinct n3) as entities,\"\n           ^","params":{"account":"oauth2|discord|177946696251211776","eventLimit":2000,"playerId":8635364660489471000},"query":"\n        // Start with the player node\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n        CALL {\n          // Match events directly related to this player with all relevant relationships\n          // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n          MATCH (e)-[:PERFORMED_BY]->(p) \n          RETURN e\n          UNION\n          MATCH (e)-[:GAINED_BY]->(p) \n          RETURN e\n          UNION\n          MATCH (e)-[:RECEIVED_BY]->(p) \n          RETURN e\n          UNION\n          MATCH (e)-[:TARGETED]->(p) \n          RETURN e\n          UNION\n          MATCH (p)-[:PERFORMED]->(e) \n          RETURN e\n          UNION\n          MATCH (p)-[:KILLED]->(e) \n          RETURN e\n        }\n        \n        // Apply ordering and limit at this stage to reduce the working set\n        WITH p, e ORDER BY e.timestamp DESC LIMIT $eventLimit\n        \n        // Collect all the events first\n        WITH p, collect(e) as events\n        \n        // For each event, get its direct connections (avoiding PART_OF relationships)\n        UNWIND events as event\n        \n        // Get direct relationships from events in a more efficient way\n        OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n        \n        // Get direct relationships to events in a more efficient way\n        OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n        \n        // Only collect entities and relationships once all events are processed\n        WITH p, events, \n             collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n             collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n        \n        // Use secondary match only for the key relationships instead of all entities\n        // This saves a lot of processing time by being more selective\n        WITH p, events, outRels, outNodes, inRels, inNodes\n        \n        // Get secondary relationships between the most important entities only\n        UNWIND outNodes as n1\n        OPTIONAL MATCH (n1)-[r3]->(n3)\n        WHERE n3 <> n1 AND NOT n3 IN events\n        \n        RETURN \n          collect(distinct p) as players,\n          events,\n          outNodes + inNodes + collect(distinct n3) as entities,\n          outRels + inRels + collect(distinct r3) as relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 10:22:24"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 11 (offset: 2310))\n\"          outNodes + inNodes + collect(distinct n3) as entities,\"\n           ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:22:24"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 11 (offset: 2310))\n\"          outNodes + inNodes + collect(distinct n3) as entities,\"\n           ^","params":{"account":"oauth2|discord|177946696251211776","eventLimit":2000,"playerId":8635364660489471000},"query":"\n        // Start with the player node\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n        CALL {\n          // Match events directly related to this player with all relevant relationships\n          // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n          MATCH (e)-[:PERFORMED_BY]->(p) \n          RETURN e\n          UNION\n          MATCH (e)-[:GAINED_BY]->(p) \n          RETURN e\n          UNION\n          MATCH (e)-[:RECEIVED_BY]->(p) \n          RETURN e\n          UNION\n          MATCH (e)-[:TARGETED]->(p) \n          RETURN e\n          UNION\n          MATCH (p)-[:PERFORMED]->(e) \n          RETURN e\n          UNION\n          MATCH (p)-[:KILLED]->(e) \n          RETURN e\n        }\n        \n        // Apply ordering and limit at this stage to reduce the working set\n        WITH p, e ORDER BY e.timestamp DESC LIMIT $eventLimit\n        \n        // Collect all the events first\n        WITH p, collect(e) as events\n        \n        // For each event, get its direct connections (avoiding PART_OF relationships)\n        UNWIND events as event\n        \n        // Get direct relationships from events in a more efficient way\n        OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n        \n        // Get direct relationships to events in a more efficient way\n        OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n        \n        // Only collect entities and relationships once all events are processed\n        WITH p, events, \n             collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n             collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n        \n        // Use secondary match only for the key relationships instead of all entities\n        // This saves a lot of processing time by being more selective\n        WITH p, events, outRels, outNodes, inRels, inNodes\n        \n        // Get secondary relationships between the most important entities only\n        UNWIND outNodes as n1\n        OPTIONAL MATCH (n1)-[r3]->(n3)\n        WHERE n3 <> n1 AND NOT n3 IN events\n        \n        RETURN \n          collect(distinct p) as players,\n          events,\n          outNodes + inNodes + collect(distinct n3) as entities,\n          outRels + inRels + collect(distinct r3) as relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 10:22:24"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 11 (offset: 2310))\n\"          outNodes + inNodes + collect(distinct n3) as entities,\"\n           ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:22:24"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 29 (offset: 1656))\n\"        WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                             ^","params":{"account":"oauth2|discord|177946696251211776","eventsPerPlayer":300},"query":"\n        // Get all players for this account\n        MATCH (players:Player {account: $account})\n        \n        // Collect the players first\n        WITH collect(players) as allPlayers\n        \n        // Process each player separately to get their events\n        UNWIND allPlayers as currentPlayer\n        \n        // For each player, find events with various relationships in batches\n        // This avoids variable scope issues with CALL blocks\n        MATCH (events)-[:PERFORMED_BY]->(currentPlayer)\n        WITH currentPlayer, collect(events) as type1Events\n        \n        MATCH (events)-[:GAINED_BY]->(currentPlayer)\n        WITH currentPlayer, type1Events, collect(events) as type2Events\n        \n        MATCH (events)-[:RECEIVED_BY]->(currentPlayer)\n        WITH currentPlayer, type1Events, type2Events, collect(events) as type3Events\n        \n        MATCH (events)-[:TARGETED]->(currentPlayer)\n        WITH currentPlayer, type1Events, type2Events, type3Events, collect(events) as type4Events\n        \n        MATCH (currentPlayer)-[:PERFORMED]->(events)\n        WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, collect(events) as type5Events\n        \n        MATCH (currentPlayer)-[:KILLED]->(events)\n        WITH currentPlayer, type1Events, type2Events, type3Events, type4Events, type5Events, collect(events) as type6Events\n        \n        // Combine all event types and sort by timestamp\n        WITH currentPlayer, \n             type1Events + type2Events + type3Events + type4Events + type5Events + type6Events as combinedEvents\n        \n        // To remove duplicates more efficiently\n        WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\n        \n        // Sort events by timestamp and take only the most recent ones\n        WITH currentPlayer, uniqueEvents\n        UNWIND uniqueEvents as event\n        WITH currentPlayer, event\n        ORDER BY event.timestamp DESC LIMIT $eventsPerPlayer\n        \n        // Collect player-specific events\n        WITH currentPlayer, collect(event) as playerEvents\n        \n        // Add to our result collection of player-event pairs\n        WITH collect({player: currentPlayer, events: playerEvents}) as playerData\n        \n        // Now process all the relationships for visualization\n        UNWIND playerData as pd\n        WITH pd.player as player, pd.events as events\n        \n        // Flatten events for relationship discovery\n        UNWIND events as event\n        \n        // Get outgoing relationships from events\n        OPTIONAL MATCH (event)-[r1]->(n1)\n        WHERE NOT type(r1) = \"PART_OF\"\n        \n        // Get incoming relationships to events\n        OPTIONAL MATCH (n2)-[r2]->(event)\n        WHERE NOT (n2:Player AND n2.playerId = player.playerId)\n        \n        // Collect all the results\n        RETURN \n          collect(distinct player) as players,\n          collect(distinct event) as events,\n          collect(distinct n1) + collect(distinct n2) as entities,\n          collect(distinct r1) + collect(distinct r2) as relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 10:22:26"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.toSet' (line 36, column 29 (offset: 1656))\n\"        WITH currentPlayer, apoc.coll.toSet(combinedEvents) as uniqueEvents\"\n                             ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:22:26"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 11 (offset: 2310))\n\"          outNodes + inNodes + collect(distinct n3) as entities,\"\n           ^","params":{"account":"oauth2|discord|177946696251211776","eventLimit":2000,"playerId":8635364660489471000},"query":"\n        // Start with the player node\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n        CALL {\n          // Match events directly related to this player with all relevant relationships\n          // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n          MATCH (e)-[:PERFORMED_BY]->(p) \n          RETURN e\n          UNION\n          MATCH (e)-[:GAINED_BY]->(p) \n          RETURN e\n          UNION\n          MATCH (e)-[:RECEIVED_BY]->(p) \n          RETURN e\n          UNION\n          MATCH (e)-[:TARGETED]->(p) \n          RETURN e\n          UNION\n          MATCH (p)-[:PERFORMED]->(e) \n          RETURN e\n          UNION\n          MATCH (p)-[:KILLED]->(e) \n          RETURN e\n        }\n        \n        // Apply ordering and limit at this stage to reduce the working set\n        WITH p, e ORDER BY e.timestamp DESC LIMIT $eventLimit\n        \n        // Collect all the events first\n        WITH p, collect(e) as events\n        \n        // For each event, get its direct connections (avoiding PART_OF relationships)\n        UNWIND events as event\n        \n        // Get direct relationships from events in a more efficient way\n        OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n        \n        // Get direct relationships to events in a more efficient way\n        OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n        \n        // Only collect entities and relationships once all events are processed\n        WITH p, events, \n             collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n             collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n        \n        // Use secondary match only for the key relationships instead of all entities\n        // This saves a lot of processing time by being more selective\n        WITH p, events, outRels, outNodes, inRels, inNodes\n        \n        // Get secondary relationships between the most important entities only\n        UNWIND outNodes as n1\n        OPTIONAL MATCH (n1)-[r3]->(n3)\n        WHERE n3 <> n1 AND NOT n3 IN events\n        \n        RETURN \n          collect(distinct p) as players,\n          events,\n          outNodes + inNodes + collect(distinct n3) as entities,\n          outRels + inRels + collect(distinct r3) as relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 10:22:27"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 11 (offset: 2310))\n\"          outNodes + inNodes + collect(distinct n3) as entities,\"\n           ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:22:27"}
{"level":"error","message":"Neo4j error: Query cannot conclude with MATCH (must be a RETURN clause, a FINISH clause, an update clause, a unit subquery call, or a procedure call with no YIELD). (line 3, column 1 (offset: 31))\n\"MATCH (p:Player {account: $account, playerId: $playerId})\"\n ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n// Start with the player node\nMATCH (p:Player {account: $account, playerId: $playerId})\n// Rest of your single-player query...\n","service":"mindrune-api","timestamp":"2025-03-30 10:25:20"}
{"level":"error","message":"500 - Neo4j error: Query cannot conclude with MATCH (must be a RETURN clause, a FINISH clause, an update clause, a unit subquery call, or a procedure call with no YIELD). (line 3, column 1 (offset: 31))\n\"MATCH (p:Player {account: $account, playerId: $playerId})\"\n ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:25:20"}
{"level":"error","message":"Neo4j error: Query cannot conclude with MATCH (must be a RETURN clause, a FINISH clause, an update clause, a unit subquery call, or a procedure call with no YIELD). (line 3, column 1 (offset: 31))\n\"MATCH (p:Player {account: $account, playerId: $playerId})\"\n ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n// Start with the player node\nMATCH (p:Player {account: $account, playerId: $playerId})\n// Rest of your single-player query...\n","service":"mindrune-api","timestamp":"2025-03-30 10:25:20"}
{"level":"error","message":"500 - Neo4j error: Query cannot conclude with MATCH (must be a RETURN clause, a FINISH clause, an update clause, a unit subquery call, or a procedure call with no YIELD). (line 3, column 1 (offset: 31))\n\"MATCH (p:Player {account: $account, playerId: $playerId})\"\n ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:25:20"}
{"level":"error","message":"Neo4j error: Query cannot conclude with MATCH (must be a RETURN clause, a FINISH clause, an update clause, a unit subquery call, or a procedure call with no YIELD). (line 3, column 1 (offset: 31))\n\"MATCH (p:Player {account: $account, playerId: $playerId})\"\n ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n// Start with the player node\nMATCH (p:Player {account: $account, playerId: $playerId})\n// Rest of your single-player query...\n","service":"mindrune-api","timestamp":"2025-03-30 10:25:26"}
{"level":"error","message":"500 - Neo4j error: Query cannot conclude with MATCH (must be a RETURN clause, a FINISH clause, an update clause, a unit subquery call, or a procedure call with no YIELD). (line 3, column 1 (offset: 31))\n\"MATCH (p:Player {account: $account, playerId: $playerId})\"\n ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:25:26"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 10:27:25"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 10:27:25"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 10:27:25"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 10:27:25"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-30 10:27:25"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 10:27:25"}
{"level":"info","message":"Data size: 9261 bytes","service":"mindrune-api","timestamp":"2025-03-30 10:27:25"}
{"level":"info","message":"Event count: 44","service":"mindrune-api","timestamp":"2025-03-30 10:27:25"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 10:27:25"}
{"level":"info","message":"Processing 44 events","service":"mindrune-api","timestamp":"2025-03-30 10:27:25"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 10:27:25"}
{"level":"info","message":"Player node updated in 100ms","service":"mindrune-api","timestamp":"2025-03-30 10:27:25"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-30 10:27:25"}
{"level":"info","message":"Processing batch of 2 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 10:27:25"}
{"level":"info","message":"Completed batch of 2 MENU_CLICK events in 479ms","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"Processing batch of 28 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"Completed batch of 28 XP_GAIN events in 97ms","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"Processing batch of 13 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":15,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"Processing 13 HIT_SPLAT events: 6 incoming, 7 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"4586c10d-1488-4ed5-910e-da355cf81c27_7\",\"timestamp\":\"2025-03-30T14:26:53.100249200Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Grimy Lizard\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1508,\"locationY\":9715,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"Completed batch of 13 HIT_SPLAT events in 193ms","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 109ms","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"All events processed in 880ms","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"Total Neo4j operation time: 982ms","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"Neo4j session closed after 983ms","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"Neo4j insertion completed in 983ms","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"SQL insertion completed in 17ms","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"info","message":"Total request processing time: 1004ms","service":"mindrune-api","timestamp":"2025-03-30 10:27:26"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:38:01"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:38:01"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n      // Start with the player node\n      MATCH (p:Player {account: $account, playerId: $playerId})\n      \n      // Use CALL {} IN TRANSACTIONS for better memory management with large result sets\n      CALL {\n        // Match events directly related to this player with all relevant relationships\n        // Use UNION for better optimization instead of multiple OPTIONAL MATCH\n        MATCH (e)-[:PERFORMED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:GAINED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:RECEIVED_BY]->(p) \n        RETURN e\n        UNION\n        MATCH (e)-[:TARGETED]->(p) \n        RETURN e\n        UNION\n        MATCH (p)-[:PERFORMED]->(e) \n        RETURN e\n        UNION\n        MATCH (p)-[:KILLED]->(e) \n        RETURN e\n      }\n      \n      // Apply ordering and limit at this stage to reduce the working set\n      WITH p, e ORDER BY e.timestamp DESC LIMIT 2000\n      \n      // Collect all the events first\n      WITH p, collect(e) as events\n      \n      // For each event, get its direct connections (avoiding PART_OF relationships)\n      UNWIND events as event\n      \n      // Get direct relationships from events in a more efficient way\n      OPTIONAL MATCH (event)-[r1]->(n1) WHERE NOT type(r1) = \"PART_OF\"\n      \n      // Get direct relationships to events in a more efficient way\n      OPTIONAL MATCH (n2)-[r2]->(event) WHERE NOT (n2:Player AND n2.playerId = $playerId)\n      \n      // Only collect entities and relationships once all events are processed\n      WITH p, events, \n           collect(distinct r1) as outRels, collect(distinct n1) as outNodes,\n           collect(distinct r2) as inRels, collect(distinct n2) as inNodes\n      \n      // Use secondary match only for the key relationships instead of all entities\n      // This saves a lot of processing time by being more selective\n      WITH p, events, outRels, outNodes, inRels, inNodes\n      \n      // Get secondary relationships between the most important entities only\n      UNWIND outNodes as n1\n      OPTIONAL MATCH (n1)-[r3]->(n3)\n      WHERE n3 <> n1 AND NOT n3 IN events\n      \n      RETURN \n        collect(distinct p) as players,\n        events,\n        outNodes + inNodes + collect(distinct n3) as entities,\n        outRels + inRels + collect(distinct r3) as relationships\n      ","service":"mindrune-api","timestamp":"2025-03-30 10:38:02"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): outNodes, inNodes, outRels, inRels (line 60, column 9 (offset: 2185))\n\"        outNodes + inNodes + collect(distinct n3) as entities,\"\n         ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 10:38:02"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:16:48"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:16:48"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 11:16:48"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:16:48"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-30 11:16:48"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:16:48"}
{"level":"info","message":"Data size: 635 bytes","service":"mindrune-api","timestamp":"2025-03-30 11:16:48"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-30 11:16:48"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:16:48"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-30 11:16:48"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 11:16:48"}
{"level":"info","message":"Player node updated in 184ms","service":"mindrune-api","timestamp":"2025-03-30 11:16:48"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-30 11:16:48"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 11:16:48"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 820ms","service":"mindrune-api","timestamp":"2025-03-30 11:16:49"}
{"level":"info","message":"All events processed in 821ms","service":"mindrune-api","timestamp":"2025-03-30 11:16:49"}
{"level":"info","message":"Total Neo4j operation time: 1007ms","service":"mindrune-api","timestamp":"2025-03-30 11:16:49"}
{"level":"info","message":"Neo4j session closed after 1008ms","service":"mindrune-api","timestamp":"2025-03-30 11:16:49"}
{"level":"info","message":"Neo4j insertion completed in 1008ms","service":"mindrune-api","timestamp":"2025-03-30 11:16:49"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 11:16:49"}
{"level":"info","message":"SQL insertion completed in 41ms","service":"mindrune-api","timestamp":"2025-03-30 11:16:49"}
{"level":"info","message":"Total request processing time: 1055ms","service":"mindrune-api","timestamp":"2025-03-30 11:16:49"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Data size: 1872 bytes","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Event count: 9","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Processing 9 events","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Processing batch of 6 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Completed batch of 6 XP_GAIN events in 202ms","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 11:17:48"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 468ms","service":"mindrune-api","timestamp":"2025-03-30 11:17:49"}
{"level":"info","message":"All events processed in 672ms","service":"mindrune-api","timestamp":"2025-03-30 11:17:49"}
{"level":"info","message":"Total Neo4j operation time: 766ms","service":"mindrune-api","timestamp":"2025-03-30 11:17:49"}
{"level":"info","message":"Neo4j session closed after 766ms","service":"mindrune-api","timestamp":"2025-03-30 11:17:49"}
{"level":"info","message":"Neo4j insertion completed in 766ms","service":"mindrune-api","timestamp":"2025-03-30 11:17:49"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 11:17:49"}
{"level":"info","message":"SQL insertion completed in 43ms","service":"mindrune-api","timestamp":"2025-03-30 11:17:49"}
{"level":"info","message":"Total request processing time: 814ms","service":"mindrune-api","timestamp":"2025-03-30 11:17:49"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:19:48"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:19:48"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 11:19:48"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:19:48"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 11:19:48"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:19:48"}
{"level":"info","message":"Data size: 884 bytes","service":"mindrune-api","timestamp":"2025-03-30 11:19:48"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-30 11:19:48"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:19:48"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-30 11:19:48"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 11:19:48"}
{"level":"info","message":"Player node updated in 95ms","service":"mindrune-api","timestamp":"2025-03-30 11:19:48"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-30 11:19:48"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 11:19:48"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 571ms","service":"mindrune-api","timestamp":"2025-03-30 11:19:49"}
{"level":"info","message":"Processing batch of 2 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-30 11:19:49"}
{"level":"info","message":"Completed batch of 2 XP_GAIN events in 164ms","service":"mindrune-api","timestamp":"2025-03-30 11:19:49"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 11:19:49"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 332ms","service":"mindrune-api","timestamp":"2025-03-30 11:19:49"}
{"level":"info","message":"All events processed in 1067ms","service":"mindrune-api","timestamp":"2025-03-30 11:19:49"}
{"level":"info","message":"Total Neo4j operation time: 1163ms","service":"mindrune-api","timestamp":"2025-03-30 11:19:49"}
{"level":"info","message":"Neo4j session closed after 1163ms","service":"mindrune-api","timestamp":"2025-03-30 11:19:49"}
{"level":"info","message":"Neo4j insertion completed in 1165ms","service":"mindrune-api","timestamp":"2025-03-30 11:19:49"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 11:19:49"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-30 11:19:49"}
{"level":"info","message":"Total request processing time: 1179ms","service":"mindrune-api","timestamp":"2025-03-30 11:19:49"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Data size: 1286 bytes","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Event count: 6","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Processing 6 events","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Processing batch of 4 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Completed batch of 4 XP_GAIN events in 165ms","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 11:20:48"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 402ms","service":"mindrune-api","timestamp":"2025-03-30 11:20:49"}
{"level":"info","message":"All events processed in 568ms","service":"mindrune-api","timestamp":"2025-03-30 11:20:49"}
{"level":"info","message":"Total Neo4j operation time: 670ms","service":"mindrune-api","timestamp":"2025-03-30 11:20:49"}
{"level":"info","message":"Neo4j session closed after 670ms","service":"mindrune-api","timestamp":"2025-03-30 11:20:49"}
{"level":"info","message":"Neo4j insertion completed in 671ms","service":"mindrune-api","timestamp":"2025-03-30 11:20:49"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 11:20:49"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-30 11:20:49"}
{"level":"info","message":"Total request processing time: 688ms","service":"mindrune-api","timestamp":"2025-03-30 11:20:49"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Spam protection check completed in 3ms","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Data size: 1277 bytes","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Event count: 6","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Processing 6 events","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Player node updated in 93ms","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Processing batch of 4 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Completed batch of 4 XP_GAIN events in 200ms","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Processing batch of 2 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 11:21:48"}
{"level":"info","message":"Completed batch of 2 INVENTORY_CHANGE events in 366ms","service":"mindrune-api","timestamp":"2025-03-30 11:21:49"}
{"level":"info","message":"All events processed in 567ms","service":"mindrune-api","timestamp":"2025-03-30 11:21:49"}
{"level":"info","message":"Total Neo4j operation time: 662ms","service":"mindrune-api","timestamp":"2025-03-30 11:21:49"}
{"level":"info","message":"Neo4j session closed after 663ms","service":"mindrune-api","timestamp":"2025-03-30 11:21:49"}
{"level":"info","message":"Neo4j insertion completed in 663ms","service":"mindrune-api","timestamp":"2025-03-30 11:21:49"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 11:21:49"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-30 11:21:49"}
{"level":"info","message":"Total request processing time: 679ms","service":"mindrune-api","timestamp":"2025-03-30 11:21:49"}
{"level":"info","message":"Auth0 clients initialized successfully","service":"mindrune-api","timestamp":"2025-03-30 11:29:41"}
{"level":"info","message":"Server running on port 5575","service":"mindrune-api","timestamp":"2025-03-30 11:29:41"}
{"level":"info","message":"Creating new connection pool for database 'runeboy_db'","service":"mindrune-api","timestamp":"2025-03-30 11:29:44"}
{"level":"info","message":"Initializing Neo4j driver for URI: neo4j+s://graph.mindrune.xyz:6097","service":"mindrune-api","timestamp":"2025-03-30 11:29:44"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:49:28"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:49:28"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 11:49:28"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:49:28"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-30 11:49:28"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:49:28"}
{"level":"info","message":"Data size: 20375 bytes","service":"mindrune-api","timestamp":"2025-03-30 11:49:28"}
{"level":"info","message":"Event count: 100","service":"mindrune-api","timestamp":"2025-03-30 11:49:28"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:49:28"}
{"level":"info","message":"Processing 100 events","service":"mindrune-api","timestamp":"2025-03-30 11:49:28"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 11:49:28"}
{"level":"info","message":"Player node updated in 155ms","service":"mindrune-api","timestamp":"2025-03-30 11:49:28"}
{"level":"info","message":"Grouped events into 5 types","service":"mindrune-api","timestamp":"2025-03-30 11:49:28"}
{"level":"info","message":"Processing batch of 37 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 11:49:28"}
{"level":"info","message":"Completed batch of 37 MENU_CLICK events in 753ms","service":"mindrune-api","timestamp":"2025-03-30 11:49:29"}
{"level":"info","message":"Processing batch of 34 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-30 11:49:29"}
{"level":"info","message":"Completed batch of 34 XP_GAIN events in 134ms","service":"mindrune-api","timestamp":"2025-03-30 11:49:29"}
{"level":"info","message":"Processing batch of 16 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-30 11:49:29"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Grimy Lizard\",\"damage\":20,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-30 11:49:29"}
{"level":"info","message":"Processing 16 HIT_SPLAT events: 8 incoming, 8 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-30 11:49:29"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"96bf3b23-bd84-4adf-b55a-7dc1d31bdb27_9\",\"timestamp\":\"2025-03-30T15:48:44.482754600Z\",\"damage\":2,\"type\":16,\"typeString\":\"Damage\",\"source\":\"Damage\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1500,\"locationY\":9716,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-30 11:49:29"}
{"level":"info","message":"Completed batch of 16 HIT_SPLAT events in 280ms","service":"mindrune-api","timestamp":"2025-03-30 11:49:29"}
{"level":"info","message":"Processing batch of 11 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 11:49:29"}
{"level":"info","message":"Completed batch of 11 INVENTORY_CHANGE events in 298ms","service":"mindrune-api","timestamp":"2025-03-30 11:49:29"}
{"level":"info","message":"Processing batch of 2 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-30 11:49:29"}
{"level":"info","message":"Processing 2 monster kills","service":"mindrune-api","timestamp":"2025-03-30 11:49:29"}
{"level":"info","message":"Completed batch of 2 MONSTER_KILL events in 169ms","service":"mindrune-api","timestamp":"2025-03-30 11:49:30"}
{"level":"info","message":"All events processed in 1638ms","service":"mindrune-api","timestamp":"2025-03-30 11:49:30"}
{"level":"info","message":"Total Neo4j operation time: 1795ms","service":"mindrune-api","timestamp":"2025-03-30 11:49:30"}
{"level":"info","message":"Neo4j session closed after 1795ms","service":"mindrune-api","timestamp":"2025-03-30 11:49:30"}
{"level":"info","message":"Neo4j insertion completed in 1796ms","service":"mindrune-api","timestamp":"2025-03-30 11:49:30"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 11:49:30"}
{"level":"info","message":"SQL insertion completed in 16ms","service":"mindrune-api","timestamp":"2025-03-30 11:49:30"}
{"level":"info","message":"Total request processing time: 1816ms","service":"mindrune-api","timestamp":"2025-03-30 11:49:30"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Data size: 1043 bytes","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Event count: 4","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Processing 4 events","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Player node updated in 96ms","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":2,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Poison\",\"typeString\":\"Poison\"}","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 4 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"a7941e61-c2a6-4310-841a-43a208b35151_0\",\"timestamp\":\"2025-03-30T15:49:31.283176200Z\",\"damage\":2,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"isAffliction\":true,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1498,\"locationY\":9715,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 226ms","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"All events processed in 226ms","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Total Neo4j operation time: 322ms","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Neo4j session closed after 322ms","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Neo4j insertion completed in 322ms","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Total request processing time: 334ms","service":"mindrune-api","timestamp":"2025-03-30 11:50:28"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Data size: 811 bytes","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":2,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Poison\",\"typeString\":\"Poison\"}","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"d664b8f6-46cb-4419-bd92-f91309a1cfa6_0\",\"timestamp\":\"2025-03-30T15:50:43.282799100Z\",\"damage\":2,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"isAffliction\":true,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1498,\"locationY\":9715,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 164ms","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"All events processed in 165ms","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Total Neo4j operation time: 258ms","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Neo4j session closed after 258ms","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Neo4j insertion completed in 258ms","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"SQL insertion completed in 8ms","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Total request processing time: 269ms","service":"mindrune-api","timestamp":"2025-03-30 11:51:28"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Data size: 808 bytes","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Processing batch of 3 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":1,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Poison\",\"typeString\":\"Poison\"}","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Processing 3 HIT_SPLAT events: 3 incoming, 0 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"52194215-8213-4c21-bbc4-e1c0f93d2591_0\",\"timestamp\":\"2025-03-30T15:51:37.295273Z\",\"damage\":1,\"type\":65,\"typeString\":\"Poison\",\"source\":\"Poison\",\"isAffliction\":true,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":1498,\"locationY\":9715,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Completed batch of 3 HIT_SPLAT events in 165ms","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"All events processed in 166ms","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Total Neo4j operation time: 258ms","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Neo4j session closed after 258ms","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Neo4j insertion completed in 258ms","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Total request processing time: 270ms","service":"mindrune-api","timestamp":"2025-03-30 11:52:28"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Data size: 715 bytes","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Event count: 2","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Processing 2 events","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Processing batch of 2 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Processing 2 monster kills","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Completed batch of 2 MONSTER_KILL events in 126ms","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"All events processed in 127ms","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Total Neo4j operation time: 221ms","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Neo4j session closed after 221ms","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Neo4j insertion completed in 222ms","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"SQL insertion completed in 9ms","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"info","message":"Total request processing time: 234ms","service":"mindrune-api","timestamp":"2025-03-30 11:54:28"}
{"level":"error","message":"Neo4j error: Variable `players` not defined (line 54, column 64 (offset: 2011))\n\"            WHERE (n1 IS NULL OR NOT n1:Player OR NOT any(p IN players WHERE p.playerId = n1.playerId))\"\n                                                                ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n          // Get players first with limit and efficient indexing\n          MATCH (p:Player {account: $account})\n          WITH collect(p) AS all_players\n          WITH all_players[0..100] AS players // Reasonable limit to avoid overwhelming query\n          \n          // Get events in parallel using CALL block\n          CALL {\n            WITH players\n            \n            // Process each player in batches for better performance\n            UNWIND players AS p\n            \n            // Split event gathering into separate UNION operations\n            CALL {\n              // Events where player is target\n              WITH p\n              MATCH (e)-[]->(p)\n              RETURN p.playerId AS playerId, collect(DISTINCT e) AS events\n              \n              UNION\n              \n              // Events where player is source\n              WITH p\n              MATCH (p)-[]->(e)\n              RETURN p.playerId AS playerId, collect(DISTINCT e) AS events\n            }\n            \n            // Return player and their events\n            RETURN playerId, events\n          }\n          \n          // Merge events by player and prepare for relationship processing\n          WITH players, collect({playerId: playerId, events: events}) AS player_events\n          \n          // Process all events in one batch\n          WITH players, \n               reduce(acc = [], pe IN player_events | acc + pe.events) AS all_events\n          \n          // Filter unique events\n          WITH players, apoc.coll.toSet(all_events) AS unique_events\n          \n          // Get relationships for all entities in one operation\n          CALL {\n            WITH unique_events\n            UNWIND unique_events AS e\n            \n            // Get all relationships in one pass\n            OPTIONAL MATCH (e)-[r1]->(n1)\n            OPTIONAL MATCH (n2)-[r2]->(e)\n            \n            // Skip player nodes we already have\n            WITH e, r1, n1, r2, n2\n            WHERE (n1 IS NULL OR NOT n1:Player OR NOT any(p IN players WHERE p.playerId = n1.playerId))\n               AND (n2 IS NULL OR NOT n2:Player OR NOT any(p IN players WHERE p.playerId = n2.playerId))\n            \n            RETURN \n              collect(DISTINCT n1) + collect(DISTINCT n2) AS related_entities,\n              collect(DISTINCT r1) + collect(DISTINCT r2) AS relationships\n          }\n          \n          // Return final data structure\n          RETURN {\n            players: players,\n            events: unique_events,\n            entities: related_entities,\n            relationships: relationships\n          } AS result","service":"mindrune-api","timestamp":"2025-03-30 12:05:20"}
{"level":"error","message":"500 - Neo4j error: Variable `players` not defined (line 54, column 64 (offset: 2011))\n\"            WHERE (n1 IS NULL OR NOT n1:Player OR NOT any(p IN players WHERE p.playerId = n1.playerId))\"\n                                                                ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:05:20"}
{"level":"error","message":"Neo4j error: Variable `players` not defined (line 54, column 64 (offset: 2011))\n\"            WHERE (n1 IS NULL OR NOT n1:Player OR NOT any(p IN players WHERE p.playerId = n1.playerId))\"\n                                                                ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n          // Get players first with limit and efficient indexing\n          MATCH (p:Player {account: $account})\n          WITH collect(p) AS all_players\n          WITH all_players[0..100] AS players // Reasonable limit to avoid overwhelming query\n          \n          // Get events in parallel using CALL block\n          CALL {\n            WITH players\n            \n            // Process each player in batches for better performance\n            UNWIND players AS p\n            \n            // Split event gathering into separate UNION operations\n            CALL {\n              // Events where player is target\n              WITH p\n              MATCH (e)-[]->(p)\n              RETURN p.playerId AS playerId, collect(DISTINCT e) AS events\n              \n              UNION\n              \n              // Events where player is source\n              WITH p\n              MATCH (p)-[]->(e)\n              RETURN p.playerId AS playerId, collect(DISTINCT e) AS events\n            }\n            \n            // Return player and their events\n            RETURN playerId, events\n          }\n          \n          // Merge events by player and prepare for relationship processing\n          WITH players, collect({playerId: playerId, events: events}) AS player_events\n          \n          // Process all events in one batch\n          WITH players, \n               reduce(acc = [], pe IN player_events | acc + pe.events) AS all_events\n          \n          // Filter unique events\n          WITH players, apoc.coll.toSet(all_events) AS unique_events\n          \n          // Get relationships for all entities in one operation\n          CALL {\n            WITH unique_events\n            UNWIND unique_events AS e\n            \n            // Get all relationships in one pass\n            OPTIONAL MATCH (e)-[r1]->(n1)\n            OPTIONAL MATCH (n2)-[r2]->(e)\n            \n            // Skip player nodes we already have\n            WITH e, r1, n1, r2, n2\n            WHERE (n1 IS NULL OR NOT n1:Player OR NOT any(p IN players WHERE p.playerId = n1.playerId))\n               AND (n2 IS NULL OR NOT n2:Player OR NOT any(p IN players WHERE p.playerId = n2.playerId))\n            \n            RETURN \n              collect(DISTINCT n1) + collect(DISTINCT n2) AS related_entities,\n              collect(DISTINCT r1) + collect(DISTINCT r2) AS relationships\n          }\n          \n          // Return final data structure\n          RETURN {\n            players: players,\n            events: unique_events,\n            entities: related_entities,\n            relationships: relationships\n          } AS result","service":"mindrune-api","timestamp":"2025-03-30 12:05:20"}
{"level":"error","message":"500 - Neo4j error: Variable `players` not defined (line 54, column 64 (offset: 2011))\n\"            WHERE (n1 IS NULL OR NOT n1:Player OR NOT any(p IN players WHERE p.playerId = n1.playerId))\"\n                                                                ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:05:20"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): players, events (line 34, column 24 (offset: 1294))\n\"              players: players,\"\n                        ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n            // Match players with limit\n            MATCH (p:Player {account: $account})\n            WITH p LIMIT 100\n            \n            // Use a direct approach to collect events\n            OPTIONAL MATCH (e1)-[]->(p)\n            OPTIONAL MATCH (p)-[]->(e2)\n            \n            // Group by player\n            WITH p, collect(DISTINCT e1) + collect(DISTINCT e2) AS player_events\n            \n            // Collect all player data\n            WITH collect({player: p, events: player_events}) AS all_player_data\n            \n            // Extract players and events\n            WITH \n              [pd IN all_player_data | pd.player] AS players,\n              reduce(acc = [], pd IN all_player_data | acc + pd.events) AS all_events\n            \n            // Remove duplicates from events\n            WITH players, collect(DISTINCT all_events) AS events_nested\n            UNWIND events_nested AS events_list\n            UNWIND events_list AS event\n            WITH players, collect(DISTINCT event) AS events\n            \n            // Get related entities\n            UNWIND events AS ev\n            OPTIONAL MATCH (ev)-[r1]->(n1)\n            OPTIONAL MATCH (n2)-[r2]->(ev)\n            \n            // Return optimized data structure\n            RETURN {\n              players: players,\n              events: events,\n              entities: collect(DISTINCT n1) + collect(DISTINCT n2),\n              relationships: collect(DISTINCT r1) + collect(DISTINCT r2)\n            } AS result","service":"mindrune-api","timestamp":"2025-03-30 12:05:20"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): players, events (line 34, column 24 (offset: 1294))\n\"              players: players,\"\n                        ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:05:20"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): players, events (line 34, column 24 (offset: 1294))\n\"              players: players,\"\n                        ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n            // Match players with limit\n            MATCH (p:Player {account: $account})\n            WITH p LIMIT 100\n            \n            // Use a direct approach to collect events\n            OPTIONAL MATCH (e1)-[]->(p)\n            OPTIONAL MATCH (p)-[]->(e2)\n            \n            // Group by player\n            WITH p, collect(DISTINCT e1) + collect(DISTINCT e2) AS player_events\n            \n            // Collect all player data\n            WITH collect({player: p, events: player_events}) AS all_player_data\n            \n            // Extract players and events\n            WITH \n              [pd IN all_player_data | pd.player] AS players,\n              reduce(acc = [], pd IN all_player_data | acc + pd.events) AS all_events\n            \n            // Remove duplicates from events\n            WITH players, collect(DISTINCT all_events) AS events_nested\n            UNWIND events_nested AS events_list\n            UNWIND events_list AS event\n            WITH players, collect(DISTINCT event) AS events\n            \n            // Get related entities\n            UNWIND events AS ev\n            OPTIONAL MATCH (ev)-[r1]->(n1)\n            OPTIONAL MATCH (n2)-[r2]->(ev)\n            \n            // Return optimized data structure\n            RETURN {\n              players: players,\n              events: events,\n              entities: collect(DISTINCT n1) + collect(DISTINCT n2),\n              relationships: collect(DISTINCT r1) + collect(DISTINCT r2)\n            } AS result","service":"mindrune-api","timestamp":"2025-03-30 12:05:20"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): players, events (line 34, column 24 (offset: 1294))\n\"              players: players,\"\n                        ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:05:20"}
{"level":"error","message":"Neo4j error: Variable `players` not defined (line 54, column 64 (offset: 2011))\n\"            WHERE (n1 IS NULL OR NOT n1:Player OR NOT any(p IN players WHERE p.playerId = n1.playerId))\"\n                                                                ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n          // Get players first with limit and efficient indexing\n          MATCH (p:Player {account: $account})\n          WITH collect(p) AS all_players\n          WITH all_players[0..100] AS players // Reasonable limit to avoid overwhelming query\n          \n          // Get events in parallel using CALL block\n          CALL {\n            WITH players\n            \n            // Process each player in batches for better performance\n            UNWIND players AS p\n            \n            // Split event gathering into separate UNION operations\n            CALL {\n              // Events where player is target\n              WITH p\n              MATCH (e)-[]->(p)\n              RETURN p.playerId AS playerId, collect(DISTINCT e) AS events\n              \n              UNION\n              \n              // Events where player is source\n              WITH p\n              MATCH (p)-[]->(e)\n              RETURN p.playerId AS playerId, collect(DISTINCT e) AS events\n            }\n            \n            // Return player and their events\n            RETURN playerId, events\n          }\n          \n          // Merge events by player and prepare for relationship processing\n          WITH players, collect({playerId: playerId, events: events}) AS player_events\n          \n          // Process all events in one batch\n          WITH players, \n               reduce(acc = [], pe IN player_events | acc + pe.events) AS all_events\n          \n          // Filter unique events\n          WITH players, apoc.coll.toSet(all_events) AS unique_events\n          \n          // Get relationships for all entities in one operation\n          CALL {\n            WITH unique_events\n            UNWIND unique_events AS e\n            \n            // Get all relationships in one pass\n            OPTIONAL MATCH (e)-[r1]->(n1)\n            OPTIONAL MATCH (n2)-[r2]->(e)\n            \n            // Skip player nodes we already have\n            WITH e, r1, n1, r2, n2\n            WHERE (n1 IS NULL OR NOT n1:Player OR NOT any(p IN players WHERE p.playerId = n1.playerId))\n               AND (n2 IS NULL OR NOT n2:Player OR NOT any(p IN players WHERE p.playerId = n2.playerId))\n            \n            RETURN \n              collect(DISTINCT n1) + collect(DISTINCT n2) AS related_entities,\n              collect(DISTINCT r1) + collect(DISTINCT r2) AS relationships\n          }\n          \n          // Return final data structure\n          RETURN {\n            players: players,\n            events: unique_events,\n            entities: related_entities,\n            relationships: relationships\n          } AS result","service":"mindrune-api","timestamp":"2025-03-30 12:05:24"}
{"level":"error","message":"500 - Neo4j error: Variable `players` not defined (line 54, column 64 (offset: 2011))\n\"            WHERE (n1 IS NULL OR NOT n1:Player OR NOT any(p IN players WHERE p.playerId = n1.playerId))\"\n                                                                ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:05:24"}
{"level":"error","message":"Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): players, events (line 34, column 24 (offset: 1294))\n\"              players: players,\"\n                        ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n            // Match players with limit\n            MATCH (p:Player {account: $account})\n            WITH p LIMIT 100\n            \n            // Use a direct approach to collect events\n            OPTIONAL MATCH (e1)-[]->(p)\n            OPTIONAL MATCH (p)-[]->(e2)\n            \n            // Group by player\n            WITH p, collect(DISTINCT e1) + collect(DISTINCT e2) AS player_events\n            \n            // Collect all player data\n            WITH collect({player: p, events: player_events}) AS all_player_data\n            \n            // Extract players and events\n            WITH \n              [pd IN all_player_data | pd.player] AS players,\n              reduce(acc = [], pd IN all_player_data | acc + pd.events) AS all_events\n            \n            // Remove duplicates from events\n            WITH players, collect(DISTINCT all_events) AS events_nested\n            UNWIND events_nested AS events_list\n            UNWIND events_list AS event\n            WITH players, collect(DISTINCT event) AS events\n            \n            // Get related entities\n            UNWIND events AS ev\n            OPTIONAL MATCH (ev)-[r1]->(n1)\n            OPTIONAL MATCH (n2)-[r2]->(ev)\n            \n            // Return optimized data structure\n            RETURN {\n              players: players,\n              events: events,\n              entities: collect(DISTINCT n1) + collect(DISTINCT n2),\n              relationships: collect(DISTINCT r1) + collect(DISTINCT r2)\n            } AS result","service":"mindrune-api","timestamp":"2025-03-30 12:05:24"}
{"level":"error","message":"500 - Neo4j error: Aggregation column contains implicit grouping expressions. For example, in 'RETURN n.a, n.a + n.b + count(*)' the aggregation expression 'n.a + n.b + count(*)' includes the implicit grouping key 'n.b'. It may be possible to rewrite the query by extracting these grouping/aggregation expressions into a preceding WITH clause. Illegal expression(s): players, events (line 34, column 24 (offset: 1294))\n\"              players: players,\"\n                        ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:05:24"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.flatten' (line 58, column 15 (offset: 2119))\n\"              apoc.coll.flatten(collect(outgoing)) AS outgoing_data,\"\n               ^","params":{"account":"oauth2|discord|177946696251211776","playerId":-1617514147593677000},"query":"\n          // Match our player once\n          MATCH (p:Player {account: $account, playerId: $playerId})\n          \n          // Store in a separate named context for reuse\n          CALL {\n            WITH p\n            \n            // Split event gathering into separate UNION operations that can be parallelized\n            CALL {\n              // Events where player is target (incoming relationships)\n              MATCH (e)-[r:PERFORMED_BY|GAINED_BY|RECEIVED_BY|TARGETED]->(p)\n              RETURN collect(DISTINCT e) AS incoming_events\n              \n              UNION\n              \n              // Events where player is source (outgoing relationships)\n              MATCH (p)-[r:PERFORMED|KILLED]->(e)\n              RETURN collect(DISTINCT e) AS incoming_events\n            }\n            \n            // Return all events limited to 300\n            RETURN incoming_events AS player_events\n          }\n          \n          // Limit events right after collection\n          WITH p, player_events[0..300] AS limited_events\n          \n          // Skip further processing if no events found\n          WITH p, limited_events, size(limited_events) > 0 AS has_events\n          \n          // Gather related nodes only when we have events\n          CALL {\n            WITH limited_events, has_events\n            WITH limited_events WHERE has_events\n            \n            UNWIND limited_events AS e\n            \n            // Process outgoing relationships from events\n            CALL {\n              WITH e\n              MATCH (e)-[r1]->(n1)\n              WHERE NOT type(r1) = \"PART_OF\"\n              RETURN collect(DISTINCT {node: n1, rel: r1}) AS outgoing\n            }\n            \n            // Process incoming relationships to events\n            CALL {\n              WITH e\n              MATCH (n2)-[r2]->(e)\n              WHERE NOT n2:Player OR NOT n2.playerId = $playerId\n              RETURN collect(DISTINCT {node: n2, rel: r2}) AS incoming\n            }\n            \n            // Return combined relationships data\n            RETURN \n              collect(DISTINCT e) AS all_events,\n              apoc.coll.flatten(collect(outgoing)) AS outgoing_data,\n              apoc.coll.flatten(collect(incoming)) AS incoming_data\n          }\n          \n          // Process results for single player with proper fallback\n          RETURN CASE WHEN has_events\n            THEN {\n              players: [p],\n              events: all_events,\n              entities: outgoing_data.node + incoming_data.node,\n              relationships: outgoing_data.rel + incoming_data.rel\n            }\n            ELSE {\n              players: [p],\n              events: [],\n              entities: [],\n              relationships: []\n            }\n          END AS result","service":"mindrune-api","timestamp":"2025-03-30 12:05:25"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.flatten' (line 58, column 15 (offset: 2119))\n\"              apoc.coll.flatten(collect(outgoing)) AS outgoing_data,\"\n               ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:05:25"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.flatten' (line 58, column 15 (offset: 2119))\n\"              apoc.coll.flatten(collect(outgoing)) AS outgoing_data,\"\n               ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n          // Match our player once\n          MATCH (p:Player {account: $account, playerId: $playerId})\n          \n          // Store in a separate named context for reuse\n          CALL {\n            WITH p\n            \n            // Split event gathering into separate UNION operations that can be parallelized\n            CALL {\n              // Events where player is target (incoming relationships)\n              MATCH (e)-[r:PERFORMED_BY|GAINED_BY|RECEIVED_BY|TARGETED]->(p)\n              RETURN collect(DISTINCT e) AS incoming_events\n              \n              UNION\n              \n              // Events where player is source (outgoing relationships)\n              MATCH (p)-[r:PERFORMED|KILLED]->(e)\n              RETURN collect(DISTINCT e) AS incoming_events\n            }\n            \n            // Return all events limited to 300\n            RETURN incoming_events AS player_events\n          }\n          \n          // Limit events right after collection\n          WITH p, player_events[0..300] AS limited_events\n          \n          // Skip further processing if no events found\n          WITH p, limited_events, size(limited_events) > 0 AS has_events\n          \n          // Gather related nodes only when we have events\n          CALL {\n            WITH limited_events, has_events\n            WITH limited_events WHERE has_events\n            \n            UNWIND limited_events AS e\n            \n            // Process outgoing relationships from events\n            CALL {\n              WITH e\n              MATCH (e)-[r1]->(n1)\n              WHERE NOT type(r1) = \"PART_OF\"\n              RETURN collect(DISTINCT {node: n1, rel: r1}) AS outgoing\n            }\n            \n            // Process incoming relationships to events\n            CALL {\n              WITH e\n              MATCH (n2)-[r2]->(e)\n              WHERE NOT n2:Player OR NOT n2.playerId = $playerId\n              RETURN collect(DISTINCT {node: n2, rel: r2}) AS incoming\n            }\n            \n            // Return combined relationships data\n            RETURN \n              collect(DISTINCT e) AS all_events,\n              apoc.coll.flatten(collect(outgoing)) AS outgoing_data,\n              apoc.coll.flatten(collect(incoming)) AS incoming_data\n          }\n          \n          // Process results for single player with proper fallback\n          RETURN CASE WHEN has_events\n            THEN {\n              players: [p],\n              events: all_events,\n              entities: outgoing_data.node + incoming_data.node,\n              relationships: outgoing_data.rel + incoming_data.rel\n            }\n            ELSE {\n              players: [p],\n              events: [],\n              entities: [],\n              relationships: []\n            }\n          END AS result","service":"mindrune-api","timestamp":"2025-03-30 12:05:26"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.flatten' (line 58, column 15 (offset: 2119))\n\"              apoc.coll.flatten(collect(outgoing)) AS outgoing_data,\"\n               ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:05:26"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.flatten' (line 58, column 15 (offset: 2119))\n\"              apoc.coll.flatten(collect(outgoing)) AS outgoing_data,\"\n               ^","params":{"account":"oauth2|discord|177946696251211776","playerId":-1617514147593677000},"query":"\n          // Match our player once\n          MATCH (p:Player {account: $account, playerId: $playerId})\n          \n          // Store in a separate named context for reuse\n          CALL {\n            WITH p\n            \n            // Split event gathering into separate UNION operations that can be parallelized\n            CALL {\n              // Events where player is target (incoming relationships)\n              MATCH (e)-[r:PERFORMED_BY|GAINED_BY|RECEIVED_BY|TARGETED]->(p)\n              RETURN collect(DISTINCT e) AS incoming_events\n              \n              UNION\n              \n              // Events where player is source (outgoing relationships)\n              MATCH (p)-[r:PERFORMED|KILLED]->(e)\n              RETURN collect(DISTINCT e) AS incoming_events\n            }\n            \n            // Return all events limited to 300\n            RETURN incoming_events AS player_events\n          }\n          \n          // Limit events right after collection\n          WITH p, player_events[0..300] AS limited_events\n          \n          // Skip further processing if no events found\n          WITH p, limited_events, size(limited_events) > 0 AS has_events\n          \n          // Gather related nodes only when we have events\n          CALL {\n            WITH limited_events, has_events\n            WITH limited_events WHERE has_events\n            \n            UNWIND limited_events AS e\n            \n            // Process outgoing relationships from events\n            CALL {\n              WITH e\n              MATCH (e)-[r1]->(n1)\n              WHERE NOT type(r1) = \"PART_OF\"\n              RETURN collect(DISTINCT {node: n1, rel: r1}) AS outgoing\n            }\n            \n            // Process incoming relationships to events\n            CALL {\n              WITH e\n              MATCH (n2)-[r2]->(e)\n              WHERE NOT n2:Player OR NOT n2.playerId = $playerId\n              RETURN collect(DISTINCT {node: n2, rel: r2}) AS incoming\n            }\n            \n            // Return combined relationships data\n            RETURN \n              collect(DISTINCT e) AS all_events,\n              apoc.coll.flatten(collect(outgoing)) AS outgoing_data,\n              apoc.coll.flatten(collect(incoming)) AS incoming_data\n          }\n          \n          // Process results for single player with proper fallback\n          RETURN CASE WHEN has_events\n            THEN {\n              players: [p],\n              events: all_events,\n              entities: outgoing_data.node + incoming_data.node,\n              relationships: outgoing_data.rel + incoming_data.rel\n            }\n            ELSE {\n              players: [p],\n              events: [],\n              entities: [],\n              relationships: []\n            }\n          END AS result","service":"mindrune-api","timestamp":"2025-03-30 12:05:31"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.flatten' (line 58, column 15 (offset: 2119))\n\"              apoc.coll.flatten(collect(outgoing)) AS outgoing_data,\"\n               ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:05:31"}
{"level":"error","message":"Neo4j error: In a WITH/RETURN with DISTINCT or an aggregation, it is not possible to access variables declared before the WITH/RETURN: event (line 41, column 67 (offset: 1526))\n\"            WITH players, collect(DISTINCT event) AS events WHERE event IS NOT NULL\"\n                                                                   ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n          // First match all players for this account\n          MATCH (p:Player {account: $account})\n          \n          // Collect all players and process them in parallel\n          WITH collect(p) AS all_players\n          \n          CALL {\n            WITH all_players\n            UNWIND all_players AS p\n            \n            // Get player events efficiently with CALL blocks\n            CALL {\n              WITH p\n              MATCH (e)-[]->(p)\n              RETURN collect(DISTINCT e) AS in_events\n            }\n            \n            CALL {\n              WITH p\n              MATCH (p)-[]->(e)\n              RETURN collect(DISTINCT e) AS out_events\n            }\n            \n            WITH p, in_events + out_events AS player_events\n            RETURN collect({player: p, events: player_events}) AS player_data\n          }\n          \n          // Process all events and relationships\n          WITH player_data\n          CALL {\n            WITH player_data\n            UNWIND player_data AS pd\n            WITH pd.player AS player, pd.events AS events\n            WITH collect(DISTINCT player) AS players, \n                 CASE WHEN size(apoc.coll.flatten(collect(events))) > 0 THEN apoc.coll.flatten(collect(events)) ELSE [] END AS all_events\n            \n            // Use efficient UNWIND only when necessary\n            WITH players, all_events\n            UNWIND CASE WHEN size(all_events) > 0 THEN all_events ELSE [null] END AS event\n            WITH players, collect(DISTINCT event) AS events WHERE event IS NOT NULL\n            \n            // Process relationships\n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (ev)-[r3]->(n1)\n              RETURN collect(DISTINCT n1) AS out_nodes, collect(DISTINCT r3) AS out_rels\n            }\n            \n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (n2)-[r4]->(ev)\n              RETURN collect(DISTINCT n2) AS in_nodes, collect(DISTINCT r4) AS in_rels\n            }\n            \n            RETURN players, events, out_nodes + in_nodes AS entities, out_rels + in_rels AS relationships\n          }\n          \n          RETURN players, events, entities, relationships\n          ","service":"mindrune-api","timestamp":"2025-03-30 12:08:12"}
{"level":"error","message":"500 - Neo4j error: In a WITH/RETURN with DISTINCT or an aggregation, it is not possible to access variables declared before the WITH/RETURN: event (line 41, column 67 (offset: 1526))\n\"            WITH players, collect(DISTINCT event) AS events WHERE event IS NOT NULL\"\n                                                                   ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:08:12"}
{"level":"error","message":"Neo4j error: In a WITH/RETURN with DISTINCT or an aggregation, it is not possible to access variables declared before the WITH/RETURN: event (line 41, column 67 (offset: 1526))\n\"            WITH players, collect(DISTINCT event) AS events WHERE event IS NOT NULL\"\n                                                                   ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n          // First match all players for this account\n          MATCH (p:Player {account: $account})\n          \n          // Collect all players and process them in parallel\n          WITH collect(p) AS all_players\n          \n          CALL {\n            WITH all_players\n            UNWIND all_players AS p\n            \n            // Get player events efficiently with CALL blocks\n            CALL {\n              WITH p\n              MATCH (e)-[]->(p)\n              RETURN collect(DISTINCT e) AS in_events\n            }\n            \n            CALL {\n              WITH p\n              MATCH (p)-[]->(e)\n              RETURN collect(DISTINCT e) AS out_events\n            }\n            \n            WITH p, in_events + out_events AS player_events\n            RETURN collect({player: p, events: player_events}) AS player_data\n          }\n          \n          // Process all events and relationships\n          WITH player_data\n          CALL {\n            WITH player_data\n            UNWIND player_data AS pd\n            WITH pd.player AS player, pd.events AS events\n            WITH collect(DISTINCT player) AS players, \n                 CASE WHEN size(apoc.coll.flatten(collect(events))) > 0 THEN apoc.coll.flatten(collect(events)) ELSE [] END AS all_events\n            \n            // Use efficient UNWIND only when necessary\n            WITH players, all_events\n            UNWIND CASE WHEN size(all_events) > 0 THEN all_events ELSE [null] END AS event\n            WITH players, collect(DISTINCT event) AS events WHERE event IS NOT NULL\n            \n            // Process relationships\n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (ev)-[r3]->(n1)\n              RETURN collect(DISTINCT n1) AS out_nodes, collect(DISTINCT r3) AS out_rels\n            }\n            \n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (n2)-[r4]->(ev)\n              RETURN collect(DISTINCT n2) AS in_nodes, collect(DISTINCT r4) AS in_rels\n            }\n            \n            RETURN players, events, out_nodes + in_nodes AS entities, out_rels + in_rels AS relationships\n          }\n          \n          RETURN players, events, entities, relationships\n          ","service":"mindrune-api","timestamp":"2025-03-30 12:08:12"}
{"level":"error","message":"500 - Neo4j error: In a WITH/RETURN with DISTINCT or an aggregation, it is not possible to access variables declared before the WITH/RETURN: event (line 41, column 67 (offset: 1526))\n\"            WITH players, collect(DISTINCT event) AS events WHERE event IS NOT NULL\"\n                                                                   ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:08:12"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:08:15"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:08:15"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":-1617514147593677000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:08:15"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:08:15"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:08:16"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:08:16"}
{"level":"error","message":"Neo4j error: In a WITH/RETURN with DISTINCT or an aggregation, it is not possible to access variables declared before the WITH/RETURN: event (line 41, column 67 (offset: 1526))\n\"            WITH players, collect(DISTINCT event) AS events WHERE event IS NOT NULL\"\n                                                                   ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n          // First match all players for this account\n          MATCH (p:Player {account: $account})\n          \n          // Collect all players and process them in parallel\n          WITH collect(p) AS all_players\n          \n          CALL {\n            WITH all_players\n            UNWIND all_players AS p\n            \n            // Get player events efficiently with CALL blocks\n            CALL {\n              WITH p\n              MATCH (e)-[]->(p)\n              RETURN collect(DISTINCT e) AS in_events\n            }\n            \n            CALL {\n              WITH p\n              MATCH (p)-[]->(e)\n              RETURN collect(DISTINCT e) AS out_events\n            }\n            \n            WITH p, in_events + out_events AS player_events\n            RETURN collect({player: p, events: player_events}) AS player_data\n          }\n          \n          // Process all events and relationships\n          WITH player_data\n          CALL {\n            WITH player_data\n            UNWIND player_data AS pd\n            WITH pd.player AS player, pd.events AS events\n            WITH collect(DISTINCT player) AS players, \n                 CASE WHEN size(apoc.coll.flatten(collect(events))) > 0 THEN apoc.coll.flatten(collect(events)) ELSE [] END AS all_events\n            \n            // Use efficient UNWIND only when necessary\n            WITH players, all_events\n            UNWIND CASE WHEN size(all_events) > 0 THEN all_events ELSE [null] END AS event\n            WITH players, collect(DISTINCT event) AS events WHERE event IS NOT NULL\n            \n            // Process relationships\n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (ev)-[r3]->(n1)\n              RETURN collect(DISTINCT n1) AS out_nodes, collect(DISTINCT r3) AS out_rels\n            }\n            \n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (n2)-[r4]->(ev)\n              RETURN collect(DISTINCT n2) AS in_nodes, collect(DISTINCT r4) AS in_rels\n            }\n            \n            RETURN players, events, out_nodes + in_nodes AS entities, out_rels + in_rels AS relationships\n          }\n          \n          RETURN players, events, entities, relationships\n          ","service":"mindrune-api","timestamp":"2025-03-30 12:08:17"}
{"level":"error","message":"500 - Neo4j error: In a WITH/RETURN with DISTINCT or an aggregation, it is not possible to access variables declared before the WITH/RETURN: event (line 41, column 67 (offset: 1526))\n\"            WITH players, collect(DISTINCT event) AS events WHERE event IS NOT NULL\"\n                                                                   ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:08:17"}
{"level":"error","message":"Neo4j error: Invalid input 'WHERE': expected 'FOREACH', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'WITH' or '}' (line 41, column 13 (offset: 1472))\n\"            WHERE event IS NOT NULL\"\n             ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n          // First match all players for this account\n          MATCH (p:Player {account: $account})\n          \n          // Collect all players and process them in parallel\n          WITH collect(p) AS all_players\n          \n          CALL {\n            WITH all_players\n            UNWIND all_players AS p\n            \n            // Get player events efficiently with CALL blocks\n            CALL {\n              WITH p\n              MATCH (e)-[]->(p)\n              RETURN collect(DISTINCT e) AS in_events\n            }\n            \n            CALL {\n              WITH p\n              MATCH (p)-[]->(e)\n              RETURN collect(DISTINCT e) AS out_events\n            }\n            \n            WITH p, in_events + out_events AS player_events\n            RETURN collect({player: p, events: player_events}) AS player_data\n          }\n          \n          // Process all events and relationships\n          WITH player_data\n          CALL {\n            WITH player_data\n            UNWIND player_data AS pd\n            WITH pd.player AS player, pd.events AS events\n            WITH collect(DISTINCT player) AS players, \n                 CASE WHEN size(apoc.coll.flatten(collect(events))) > 0 THEN apoc.coll.flatten(collect(events)) ELSE [] END AS all_events\n            \n            // Use efficient UNWIND only when necessary\n            WITH players, all_events\n            UNWIND CASE WHEN size(all_events) > 0 THEN all_events ELSE [null] END AS event\n            WHERE event IS NOT NULL\n            WITH players, collect(DISTINCT event) AS events\n            \n            // Process relationships\n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (ev)-[r3]->(n1)\n              RETURN collect(DISTINCT n1) AS out_nodes, collect(DISTINCT r3) AS out_rels\n            }\n            \n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (n2)-[r4]->(ev)\n              RETURN collect(DISTINCT n2) AS in_nodes, collect(DISTINCT r4) AS in_rels\n            }\n            \n            RETURN players, events, out_nodes + in_nodes AS entities, out_rels + in_rels AS relationships\n          }\n          \n          RETURN players, events, entities, relationships\n          ","service":"mindrune-api","timestamp":"2025-03-30 12:08:52"}
{"level":"error","message":"500 - Neo4j error: Invalid input 'WHERE': expected 'FOREACH', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'WITH' or '}' (line 41, column 13 (offset: 1472))\n\"            WHERE event IS NOT NULL\"\n             ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:08:52"}
{"level":"error","message":"Neo4j error: Invalid input 'WHERE': expected 'FOREACH', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'WITH' or '}' (line 41, column 13 (offset: 1472))\n\"            WHERE event IS NOT NULL\"\n             ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n          // First match all players for this account\n          MATCH (p:Player {account: $account})\n          \n          // Collect all players and process them in parallel\n          WITH collect(p) AS all_players\n          \n          CALL {\n            WITH all_players\n            UNWIND all_players AS p\n            \n            // Get player events efficiently with CALL blocks\n            CALL {\n              WITH p\n              MATCH (e)-[]->(p)\n              RETURN collect(DISTINCT e) AS in_events\n            }\n            \n            CALL {\n              WITH p\n              MATCH (p)-[]->(e)\n              RETURN collect(DISTINCT e) AS out_events\n            }\n            \n            WITH p, in_events + out_events AS player_events\n            RETURN collect({player: p, events: player_events}) AS player_data\n          }\n          \n          // Process all events and relationships\n          WITH player_data\n          CALL {\n            WITH player_data\n            UNWIND player_data AS pd\n            WITH pd.player AS player, pd.events AS events\n            WITH collect(DISTINCT player) AS players, \n                 CASE WHEN size(apoc.coll.flatten(collect(events))) > 0 THEN apoc.coll.flatten(collect(events)) ELSE [] END AS all_events\n            \n            // Use efficient UNWIND only when necessary\n            WITH players, all_events\n            UNWIND CASE WHEN size(all_events) > 0 THEN all_events ELSE [null] END AS event\n            WHERE event IS NOT NULL\n            WITH players, collect(DISTINCT event) AS events\n            \n            // Process relationships\n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (ev)-[r3]->(n1)\n              RETURN collect(DISTINCT n1) AS out_nodes, collect(DISTINCT r3) AS out_rels\n            }\n            \n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (n2)-[r4]->(ev)\n              RETURN collect(DISTINCT n2) AS in_nodes, collect(DISTINCT r4) AS in_rels\n            }\n            \n            RETURN players, events, out_nodes + in_nodes AS entities, out_rels + in_rels AS relationships\n          }\n          \n          RETURN players, events, entities, relationships\n          ","service":"mindrune-api","timestamp":"2025-03-30 12:08:52"}
{"level":"error","message":"500 - Neo4j error: Invalid input 'WHERE': expected 'FOREACH', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'WITH' or '}' (line 41, column 13 (offset: 1472))\n\"            WHERE event IS NOT NULL\"\n             ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:08:52"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:08:55"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:08:55"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":-1617514147593677000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:08:56"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:08:56"}
{"level":"error","message":"Neo4j error: Invalid input 'WHERE': expected 'FOREACH', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'WITH' or '}' (line 41, column 13 (offset: 1472))\n\"            WHERE event IS NOT NULL\"\n             ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n          // First match all players for this account\n          MATCH (p:Player {account: $account})\n          \n          // Collect all players and process them in parallel\n          WITH collect(p) AS all_players\n          \n          CALL {\n            WITH all_players\n            UNWIND all_players AS p\n            \n            // Get player events efficiently with CALL blocks\n            CALL {\n              WITH p\n              MATCH (e)-[]->(p)\n              RETURN collect(DISTINCT e) AS in_events\n            }\n            \n            CALL {\n              WITH p\n              MATCH (p)-[]->(e)\n              RETURN collect(DISTINCT e) AS out_events\n            }\n            \n            WITH p, in_events + out_events AS player_events\n            RETURN collect({player: p, events: player_events}) AS player_data\n          }\n          \n          // Process all events and relationships\n          WITH player_data\n          CALL {\n            WITH player_data\n            UNWIND player_data AS pd\n            WITH pd.player AS player, pd.events AS events\n            WITH collect(DISTINCT player) AS players, \n                 CASE WHEN size(apoc.coll.flatten(collect(events))) > 0 THEN apoc.coll.flatten(collect(events)) ELSE [] END AS all_events\n            \n            // Use efficient UNWIND only when necessary\n            WITH players, all_events\n            UNWIND CASE WHEN size(all_events) > 0 THEN all_events ELSE [null] END AS event\n            WHERE event IS NOT NULL\n            WITH players, collect(DISTINCT event) AS events\n            \n            // Process relationships\n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (ev)-[r3]->(n1)\n              RETURN collect(DISTINCT n1) AS out_nodes, collect(DISTINCT r3) AS out_rels\n            }\n            \n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (n2)-[r4]->(ev)\n              RETURN collect(DISTINCT n2) AS in_nodes, collect(DISTINCT r4) AS in_rels\n            }\n            \n            RETURN players, events, out_nodes + in_nodes AS entities, out_rels + in_rels AS relationships\n          }\n          \n          RETURN players, events, entities, relationships\n          ","service":"mindrune-api","timestamp":"2025-03-30 12:08:56"}
{"level":"error","message":"500 - Neo4j error: Invalid input 'WHERE': expected 'FOREACH', 'ORDER BY', 'CALL', 'CREATE', 'LOAD CSV', 'DELETE', 'DETACH', 'FINISH', 'INSERT', 'LIMIT', 'MATCH', 'MERGE', 'NODETACH', 'OFFSET', 'OPTIONAL', 'REMOVE', 'RETURN', 'SET', 'SKIP', 'UNION', 'UNWIND', 'USE', 'WITH' or '}' (line 41, column 13 (offset: 1472))\n\"            WHERE event IS NOT NULL\"\n             ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:08:56"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.flatten' (line 36, column 33 (offset: 1157))\n\"                 CASE WHEN size(apoc.coll.flatten(collect(events))) > 0 THEN apoc.coll.flatten(collect(events)) ELSE [] END AS all_events\"\n                                 ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n          // First match all players for this account\n          MATCH (p:Player {account: $account})\n          \n          // Collect all players and process them in parallel\n          WITH collect(p) AS all_players\n          \n          CALL {\n            WITH all_players\n            UNWIND all_players AS p\n            \n            // Get player events efficiently with CALL blocks\n            CALL {\n              WITH p\n              MATCH (e)-[]->(p)\n              RETURN collect(DISTINCT e) AS in_events\n            }\n            \n            CALL {\n              WITH p\n              MATCH (p)-[]->(e)\n              RETURN collect(DISTINCT e) AS out_events\n            }\n            \n            WITH p, in_events + out_events AS player_events\n            RETURN collect({player: p, events: player_events}) AS player_data\n          }\n          \n          // Process all events and relationships\n          WITH player_data\n          CALL {\n            WITH player_data\n            UNWIND player_data AS pd\n            WITH pd.player AS player, pd.events AS events\n            WITH collect(DISTINCT player) AS players, \n                 CASE WHEN size(apoc.coll.flatten(collect(events))) > 0 THEN apoc.coll.flatten(collect(events)) ELSE [] END AS all_events\n            \n            // Use efficient UNWIND only when necessary\n            WITH players, all_events\n            UNWIND CASE WHEN size(all_events) > 0 THEN all_events ELSE [null] END AS event\n            WITH players, event\n            WHERE event IS NOT NULL\n            WITH players, collect(DISTINCT event) AS events\n            \n            // Process relationships\n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (ev)-[r3]->(n1)\n              RETURN collect(DISTINCT n1) AS out_nodes, collect(DISTINCT r3) AS out_rels\n            }\n            \n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (n2)-[r4]->(ev)\n              RETURN collect(DISTINCT n2) AS in_nodes, collect(DISTINCT r4) AS in_rels\n            }\n            \n            RETURN players, events, out_nodes + in_nodes AS entities, out_rels + in_rels AS relationships\n          }\n          \n          RETURN players, events, entities, relationships\n          ","service":"mindrune-api","timestamp":"2025-03-30 12:09:32"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.flatten' (line 36, column 33 (offset: 1157))\n\"                 CASE WHEN size(apoc.coll.flatten(collect(events))) > 0 THEN apoc.coll.flatten(collect(events)) ELSE [] END AS all_events\"\n                                 ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:09:32"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.flatten' (line 36, column 33 (offset: 1157))\n\"                 CASE WHEN size(apoc.coll.flatten(collect(events))) > 0 THEN apoc.coll.flatten(collect(events)) ELSE [] END AS all_events\"\n                                 ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n          // First match all players for this account\n          MATCH (p:Player {account: $account})\n          \n          // Collect all players and process them in parallel\n          WITH collect(p) AS all_players\n          \n          CALL {\n            WITH all_players\n            UNWIND all_players AS p\n            \n            // Get player events efficiently with CALL blocks\n            CALL {\n              WITH p\n              MATCH (e)-[]->(p)\n              RETURN collect(DISTINCT e) AS in_events\n            }\n            \n            CALL {\n              WITH p\n              MATCH (p)-[]->(e)\n              RETURN collect(DISTINCT e) AS out_events\n            }\n            \n            WITH p, in_events + out_events AS player_events\n            RETURN collect({player: p, events: player_events}) AS player_data\n          }\n          \n          // Process all events and relationships\n          WITH player_data\n          CALL {\n            WITH player_data\n            UNWIND player_data AS pd\n            WITH pd.player AS player, pd.events AS events\n            WITH collect(DISTINCT player) AS players, \n                 CASE WHEN size(apoc.coll.flatten(collect(events))) > 0 THEN apoc.coll.flatten(collect(events)) ELSE [] END AS all_events\n            \n            // Use efficient UNWIND only when necessary\n            WITH players, all_events\n            UNWIND CASE WHEN size(all_events) > 0 THEN all_events ELSE [null] END AS event\n            WITH players, event\n            WHERE event IS NOT NULL\n            WITH players, collect(DISTINCT event) AS events\n            \n            // Process relationships\n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (ev)-[r3]->(n1)\n              RETURN collect(DISTINCT n1) AS out_nodes, collect(DISTINCT r3) AS out_rels\n            }\n            \n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (n2)-[r4]->(ev)\n              RETURN collect(DISTINCT n2) AS in_nodes, collect(DISTINCT r4) AS in_rels\n            }\n            \n            RETURN players, events, out_nodes + in_nodes AS entities, out_rels + in_rels AS relationships\n          }\n          \n          RETURN players, events, entities, relationships\n          ","service":"mindrune-api","timestamp":"2025-03-30 12:09:32"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.flatten' (line 36, column 33 (offset: 1157))\n\"                 CASE WHEN size(apoc.coll.flatten(collect(events))) > 0 THEN apoc.coll.flatten(collect(events)) ELSE [] END AS all_events\"\n                                 ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:09:32"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:09:33"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:09:33"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":-1617514147593677000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:09:34"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:09:34"}
{"level":"error","message":"Neo4j error: Unknown function 'apoc.coll.flatten' (line 36, column 33 (offset: 1157))\n\"                 CASE WHEN size(apoc.coll.flatten(collect(events))) > 0 THEN apoc.coll.flatten(collect(events)) ELSE [] END AS all_events\"\n                                 ^","params":{"account":"oauth2|discord|177946696251211776"},"query":"\n          // First match all players for this account\n          MATCH (p:Player {account: $account})\n          \n          // Collect all players and process them in parallel\n          WITH collect(p) AS all_players\n          \n          CALL {\n            WITH all_players\n            UNWIND all_players AS p\n            \n            // Get player events efficiently with CALL blocks\n            CALL {\n              WITH p\n              MATCH (e)-[]->(p)\n              RETURN collect(DISTINCT e) AS in_events\n            }\n            \n            CALL {\n              WITH p\n              MATCH (p)-[]->(e)\n              RETURN collect(DISTINCT e) AS out_events\n            }\n            \n            WITH p, in_events + out_events AS player_events\n            RETURN collect({player: p, events: player_events}) AS player_data\n          }\n          \n          // Process all events and relationships\n          WITH player_data\n          CALL {\n            WITH player_data\n            UNWIND player_data AS pd\n            WITH pd.player AS player, pd.events AS events\n            WITH collect(DISTINCT player) AS players, \n                 CASE WHEN size(apoc.coll.flatten(collect(events))) > 0 THEN apoc.coll.flatten(collect(events)) ELSE [] END AS all_events\n            \n            // Use efficient UNWIND only when necessary\n            WITH players, all_events\n            UNWIND CASE WHEN size(all_events) > 0 THEN all_events ELSE [null] END AS event\n            WITH players, event\n            WHERE event IS NOT NULL\n            WITH players, collect(DISTINCT event) AS events\n            \n            // Process relationships\n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (ev)-[r3]->(n1)\n              RETURN collect(DISTINCT n1) AS out_nodes, collect(DISTINCT r3) AS out_rels\n            }\n            \n            CALL {\n              WITH events\n              UNWIND events AS ev\n              MATCH (n2)-[r4]->(ev)\n              RETURN collect(DISTINCT n2) AS in_nodes, collect(DISTINCT r4) AS in_rels\n            }\n            \n            RETURN players, events, out_nodes + in_nodes AS entities, out_rels + in_rels AS relationships\n          }\n          \n          RETURN players, events, entities, relationships\n          ","service":"mindrune-api","timestamp":"2025-03-30 12:09:35"}
{"level":"error","message":"500 - Neo4j error: Unknown function 'apoc.coll.flatten' (line 36, column 33 (offset: 1157))\n\"                 CASE WHEN size(apoc.coll.flatten(collect(events))) > 0 THEN apoc.coll.flatten(collect(events)) ELSE [] END AS all_events\"\n                                 ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:09:35"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:26:03"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:26:03"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":-1617514147593677000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:26:04"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:26:04"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:26:25"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:26:25"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":-1617514147593677000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:26:30"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:26:30"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:26:33"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:26:33"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":-1617514147593677000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:26:34"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:26:34"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:26:35"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:26:35"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":-1617514147593677000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:26:36"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:26:36"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:26:36"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:26:36"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":-1617514147593677000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:26:36"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:26:36"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:26:38"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:26:38"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":-1617514147593677000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:26:39"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:26:39"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:26:40"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:26:40"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:30:21"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:30:21"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:30:21"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:30:21"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:30:34"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:30:34"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":-1617514147593677000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:30:35"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:30:35"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:30:36"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:30:36"}
{"level":"error","message":"Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^","params":{"account":"oauth2|discord|177946696251211776","playerId":8635364660489471000},"query":"\n        // First collect the player\n        MATCH (p:Player {account: $account, playerId: $playerId})\n        \n        // Use CALL blocks for better parallel execution\n        CALL {\n          WITH p\n          \n          // Collect incoming relationships in one operation\n          CALL {\n            WITH p\n            MATCH (e)-[r]->(p)\n            WHERE type(r) IN [\"PERFORMED_BY\", \"GAINED_BY\", \"RECEIVED_BY\", \"TARGETED\"]\n            RETURN collect(DISTINCT e) AS incoming_events\n          }\n          \n          // Collect outgoing relationships in one operation\n          CALL {\n            WITH p\n            MATCH (p)-[r]->(e)\n            WHERE type(r) IN [\"PERFORMED\", \"KILLED\"]\n            RETURN collect(DISTINCT e) AS outgoing_events\n          }\n          \n          // Combine all events\n          WITH p, incoming_events + outgoing_events AS player_events\n          RETURN p, player_events[0..300] AS limited_events\n        }\n        \n        // Collect players and events\n        WITH collect({player: p, events: limited_events}) AS player_data\n        \n        // Process relationships more efficiently using CALL blocks\n        CALL {\n          WITH player_data\n          UNWIND player_data AS pd\n          UNWIND pd.events AS event\n          WITH collect(DISTINCT pd.player) AS players, collect(DISTINCT event) AS events\n          \n          // Use parallel CALL blocks for relationship collection\n          CALL {\n            WITH events\n            UNWIND events AS e\n            MATCH (e)-[r1]->(n1)\n            WHERE NOT type(r1) = \"PART_OF\"\n            RETURN collect(DISTINCT n1) AS out_entities, collect(DISTINCT r1) AS out_rels\n          }\n          \n          CALL {\n            WITH events, players\n            UNWIND events AS e\n            MATCH (n2)-[r2]->(e)\n            WHERE NOT n2:Player OR NOT any(p IN players WHERE n2.playerId = p.playerId)\n            RETURN collect(DISTINCT n2) AS in_entities, collect(DISTINCT r2) AS in_rels\n          }\n          \n          RETURN players, events, out_entities + in_entities AS entities, out_rels + in_rels AS relationships\n        }\n        \n        RETURN players, events, entities, relationships\n        ","service":"mindrune-api","timestamp":"2025-03-30 12:30:46"}
{"level":"error","message":"500 - Neo4j error: Variable `p` already declared in outer scope (line 27, column 18 (offset: 887))\n\"          RETURN p, player_events[0..300] AS limited_events\"\n                  ^ - /osrs/query - POST - ::1","service":"mindrune-api","timestamp":"2025-03-30 12:30:46"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:01:57"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:01:57"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:01:57"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:01:57"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 16:01:57"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:01:57"}
{"level":"info","message":"Data size: 2679 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:01:57"}
{"level":"info","message":"Event count: 15","service":"mindrune-api","timestamp":"2025-03-30 16:01:57"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:01:57"}
{"level":"info","message":"Processing 15 events","service":"mindrune-api","timestamp":"2025-03-30 16:01:57"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:01:57"}
{"level":"info","message":"Player node updated in 340ms","service":"mindrune-api","timestamp":"2025-03-30 16:01:58"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-30 16:01:58"}
{"level":"info","message":"Processing batch of 15 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:01:58"}
{"level":"info","message":"Completed batch of 15 MENU_CLICK events in 1630ms","service":"mindrune-api","timestamp":"2025-03-30 16:01:59"}
{"level":"info","message":"All events processed in 1630ms","service":"mindrune-api","timestamp":"2025-03-30 16:01:59"}
{"level":"info","message":"Total Neo4j operation time: 1971ms","service":"mindrune-api","timestamp":"2025-03-30 16:01:59"}
{"level":"info","message":"Neo4j session closed after 1971ms","service":"mindrune-api","timestamp":"2025-03-30 16:01:59"}
{"level":"info","message":"Neo4j insertion completed in 1972ms","service":"mindrune-api","timestamp":"2025-03-30 16:01:59"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:01:59"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-30 16:01:59"}
{"level":"info","message":"Total request processing time: 1989ms","service":"mindrune-api","timestamp":"2025-03-30 16:01:59"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:02:57"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:02:57"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:02:57"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:02:57"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-30 16:02:57"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:02:57"}
{"level":"info","message":"Data size: 4118 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:02:57"}
{"level":"info","message":"Event count: 23","service":"mindrune-api","timestamp":"2025-03-30 16:02:57"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:02:57"}
{"level":"info","message":"Processing 23 events","service":"mindrune-api","timestamp":"2025-03-30 16:02:57"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:02:57"}
{"level":"info","message":"Player node updated in 96ms","service":"mindrune-api","timestamp":"2025-03-30 16:02:57"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-30 16:02:57"}
{"level":"info","message":"Processing batch of 23 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:02:57"}
{"level":"info","message":"Completed batch of 23 MENU_CLICK events in 408ms","service":"mindrune-api","timestamp":"2025-03-30 16:02:58"}
{"level":"info","message":"All events processed in 409ms","service":"mindrune-api","timestamp":"2025-03-30 16:02:58"}
{"level":"info","message":"Total Neo4j operation time: 507ms","service":"mindrune-api","timestamp":"2025-03-30 16:02:58"}
{"level":"info","message":"Neo4j session closed after 507ms","service":"mindrune-api","timestamp":"2025-03-30 16:02:58"}
{"level":"info","message":"Neo4j insertion completed in 507ms","service":"mindrune-api","timestamp":"2025-03-30 16:02:58"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:02:58"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-30 16:02:58"}
{"level":"info","message":"Total request processing time: 522ms","service":"mindrune-api","timestamp":"2025-03-30 16:02:58"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:03:57"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:03:57"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:03:57"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:03:57"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-30 16:03:57"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:03:57"}
{"level":"info","message":"Data size: 2925 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:03:57"}
{"level":"info","message":"Event count: 16","service":"mindrune-api","timestamp":"2025-03-30 16:03:57"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:03:57"}
{"level":"info","message":"Processing 16 events","service":"mindrune-api","timestamp":"2025-03-30 16:03:57"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:03:57"}
{"level":"info","message":"Player node updated in 127ms","service":"mindrune-api","timestamp":"2025-03-30 16:03:57"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-30 16:03:57"}
{"level":"info","message":"Processing batch of 15 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:03:57"}
{"level":"info","message":"Completed batch of 15 MENU_CLICK events in 374ms","service":"mindrune-api","timestamp":"2025-03-30 16:03:58"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 16:03:58"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 521ms","service":"mindrune-api","timestamp":"2025-03-30 16:03:58"}
{"level":"info","message":"All events processed in 895ms","service":"mindrune-api","timestamp":"2025-03-30 16:03:58"}
{"level":"info","message":"Total Neo4j operation time: 1023ms","service":"mindrune-api","timestamp":"2025-03-30 16:03:58"}
{"level":"info","message":"Neo4j session closed after 1023ms","service":"mindrune-api","timestamp":"2025-03-30 16:03:58"}
{"level":"info","message":"Neo4j insertion completed in 1024ms","service":"mindrune-api","timestamp":"2025-03-30 16:03:58"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:03:58"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-30 16:03:58"}
{"level":"info","message":"Total request processing time: 1037ms","service":"mindrune-api","timestamp":"2025-03-30 16:03:58"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:04:57"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:04:57"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:04:57"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:04:57"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 16:04:57"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:04:57"}
{"level":"info","message":"Data size: 4278 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:04:57"}
{"level":"info","message":"Event count: 23","service":"mindrune-api","timestamp":"2025-03-30 16:04:57"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:04:57"}
{"level":"info","message":"Processing 23 events","service":"mindrune-api","timestamp":"2025-03-30 16:04:57"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:04:57"}
{"level":"info","message":"Player node updated in 94ms","service":"mindrune-api","timestamp":"2025-03-30 16:04:57"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-30 16:04:57"}
{"level":"info","message":"Processing batch of 20 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:04:57"}
{"level":"info","message":"Completed batch of 20 MENU_CLICK events in 570ms","service":"mindrune-api","timestamp":"2025-03-30 16:04:58"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 16:04:58"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 521ms","service":"mindrune-api","timestamp":"2025-03-30 16:04:58"}
{"level":"info","message":"All events processed in 1091ms","service":"mindrune-api","timestamp":"2025-03-30 16:04:58"}
{"level":"info","message":"Total Neo4j operation time: 1186ms","service":"mindrune-api","timestamp":"2025-03-30 16:04:58"}
{"level":"info","message":"Neo4j session closed after 1187ms","service":"mindrune-api","timestamp":"2025-03-30 16:04:58"}
{"level":"info","message":"Neo4j insertion completed in 1188ms","service":"mindrune-api","timestamp":"2025-03-30 16:04:58"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:04:58"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-30 16:04:58"}
{"level":"info","message":"Total request processing time: 1202ms","service":"mindrune-api","timestamp":"2025-03-30 16:04:58"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:05:57"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:05:57"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:05:57"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:05:57"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 16:05:57"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:05:57"}
{"level":"info","message":"Data size: 678 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:05:57"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-30 16:05:57"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:05:57"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-30 16:05:57"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:05:57"}
{"level":"info","message":"Player node updated in 95ms","service":"mindrune-api","timestamp":"2025-03-30 16:05:57"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-30 16:05:57"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-30 16:05:57"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 169ms","service":"mindrune-api","timestamp":"2025-03-30 16:05:58"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 16:05:58"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 240ms","service":"mindrune-api","timestamp":"2025-03-30 16:05:58"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:05:58"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 701ms","service":"mindrune-api","timestamp":"2025-03-30 16:05:58"}
{"level":"info","message":"All events processed in 1112ms","service":"mindrune-api","timestamp":"2025-03-30 16:05:58"}
{"level":"info","message":"Total Neo4j operation time: 1207ms","service":"mindrune-api","timestamp":"2025-03-30 16:05:58"}
{"level":"info","message":"Neo4j session closed after 1207ms","service":"mindrune-api","timestamp":"2025-03-30 16:05:58"}
{"level":"info","message":"Neo4j insertion completed in 1208ms","service":"mindrune-api","timestamp":"2025-03-30 16:05:58"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:05:58"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-30 16:05:58"}
{"level":"info","message":"Total request processing time: 1221ms","service":"mindrune-api","timestamp":"2025-03-30 16:05:58"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:11:19"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:11:19"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:11:19"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:11:19"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-30 16:11:19"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:11:19"}
{"level":"info","message":"Data size: 626 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:11:19"}
{"level":"info","message":"Event count: 3","service":"mindrune-api","timestamp":"2025-03-30 16:11:19"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:11:19"}
{"level":"info","message":"Processing 3 events","service":"mindrune-api","timestamp":"2025-03-30 16:11:19"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:11:19"}
{"level":"info","message":"Player node updated in 127ms","service":"mindrune-api","timestamp":"2025-03-30 16:11:19"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-30 16:11:19"}
{"level":"info","message":"Processing batch of 3 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:11:19"}
{"level":"info","message":"Completed batch of 3 MENU_CLICK events in 904ms","service":"mindrune-api","timestamp":"2025-03-30 16:11:20"}
{"level":"info","message":"All events processed in 904ms","service":"mindrune-api","timestamp":"2025-03-30 16:11:20"}
{"level":"info","message":"Total Neo4j operation time: 1032ms","service":"mindrune-api","timestamp":"2025-03-30 16:11:20"}
{"level":"info","message":"Neo4j session closed after 1033ms","service":"mindrune-api","timestamp":"2025-03-30 16:11:20"}
{"level":"info","message":"Neo4j insertion completed in 1034ms","service":"mindrune-api","timestamp":"2025-03-30 16:11:20"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:11:20"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-30 16:11:20"}
{"level":"info","message":"Total request processing time: 1051ms","service":"mindrune-api","timestamp":"2025-03-30 16:11:20"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:12:19"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:12:19"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:12:19"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:12:19"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 16:12:19"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:12:19"}
{"level":"info","message":"Data size: 4785 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:12:19"}
{"level":"info","message":"Event count: 25","service":"mindrune-api","timestamp":"2025-03-30 16:12:19"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:12:19"}
{"level":"info","message":"Processing 25 events","service":"mindrune-api","timestamp":"2025-03-30 16:12:19"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:12:19"}
{"level":"info","message":"Player node updated in 95ms","service":"mindrune-api","timestamp":"2025-03-30 16:12:19"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-30 16:12:19"}
{"level":"info","message":"Processing batch of 21 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:12:19"}
{"level":"info","message":"Completed batch of 21 MENU_CLICK events in 466ms","service":"mindrune-api","timestamp":"2025-03-30 16:12:20"}
{"level":"info","message":"Processing batch of 4 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 16:12:20"}
{"level":"info","message":"Completed batch of 4 INVENTORY_CHANGE events in 310ms","service":"mindrune-api","timestamp":"2025-03-30 16:12:20"}
{"level":"info","message":"All events processed in 778ms","service":"mindrune-api","timestamp":"2025-03-30 16:12:20"}
{"level":"info","message":"Total Neo4j operation time: 874ms","service":"mindrune-api","timestamp":"2025-03-30 16:12:20"}
{"level":"info","message":"Neo4j session closed after 874ms","service":"mindrune-api","timestamp":"2025-03-30 16:12:20"}
{"level":"info","message":"Neo4j insertion completed in 874ms","service":"mindrune-api","timestamp":"2025-03-30 16:12:20"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:12:20"}
{"level":"info","message":"SQL insertion completed in 23ms","service":"mindrune-api","timestamp":"2025-03-30 16:12:20"}
{"level":"info","message":"Total request processing time: 899ms","service":"mindrune-api","timestamp":"2025-03-30 16:12:20"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Data size: 4157 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Event count: 22","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Processing 22 events","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Processing batch of 18 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Completed batch of 18 MENU_CLICK events in 367ms","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Processing batch of 4 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 16:14:19"}
{"level":"info","message":"Completed batch of 4 INVENTORY_CHANGE events in 306ms","service":"mindrune-api","timestamp":"2025-03-30 16:14:20"}
{"level":"info","message":"All events processed in 674ms","service":"mindrune-api","timestamp":"2025-03-30 16:14:20"}
{"level":"info","message":"Total Neo4j operation time: 777ms","service":"mindrune-api","timestamp":"2025-03-30 16:14:20"}
{"level":"info","message":"Neo4j session closed after 777ms","service":"mindrune-api","timestamp":"2025-03-30 16:14:20"}
{"level":"info","message":"Neo4j insertion completed in 777ms","service":"mindrune-api","timestamp":"2025-03-30 16:14:20"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:14:20"}
{"level":"info","message":"SQL insertion completed in 25ms","service":"mindrune-api","timestamp":"2025-03-30 16:14:20"}
{"level":"info","message":"Total request processing time: 805ms","service":"mindrune-api","timestamp":"2025-03-30 16:14:20"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Data size: 3695 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Event count: 21","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Processing 21 events","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Player node updated in 96ms","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Processing batch of 21 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Completed batch of 21 MENU_CLICK events in 373ms","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"All events processed in 373ms","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Total Neo4j operation time: 470ms","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Neo4j session closed after 470ms","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Neo4j insertion completed in 471ms","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Total request processing time: 486ms","service":"mindrune-api","timestamp":"2025-03-30 16:15:19"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Data size: 9739 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Event count: 53","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Processing 53 events","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Player node updated in 97ms","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Processing batch of 43 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Completed batch of 43 MENU_CLICK events in 439ms","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Processing batch of 10 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 16:16:19"}
{"level":"info","message":"Completed batch of 10 INVENTORY_CHANGE events in 174ms","service":"mindrune-api","timestamp":"2025-03-30 16:16:20"}
{"level":"info","message":"All events processed in 614ms","service":"mindrune-api","timestamp":"2025-03-30 16:16:20"}
{"level":"info","message":"Total Neo4j operation time: 711ms","service":"mindrune-api","timestamp":"2025-03-30 16:16:20"}
{"level":"info","message":"Neo4j session closed after 711ms","service":"mindrune-api","timestamp":"2025-03-30 16:16:20"}
{"level":"info","message":"Neo4j insertion completed in 712ms","service":"mindrune-api","timestamp":"2025-03-30 16:16:20"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:16:20"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-30 16:16:20"}
{"level":"info","message":"Total request processing time: 728ms","service":"mindrune-api","timestamp":"2025-03-30 16:16:20"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Data size: 6315 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Event count: 34","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Processing 34 events","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Player node updated in 101ms","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Processing batch of 7 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Completed batch of 7 INVENTORY_CHANGE events in 167ms","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Processing batch of 27 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:17:19"}
{"level":"info","message":"Completed batch of 27 MENU_CLICK events in 372ms","service":"mindrune-api","timestamp":"2025-03-30 16:17:20"}
{"level":"info","message":"All events processed in 541ms","service":"mindrune-api","timestamp":"2025-03-30 16:17:20"}
{"level":"info","message":"Total Neo4j operation time: 643ms","service":"mindrune-api","timestamp":"2025-03-30 16:17:20"}
{"level":"info","message":"Neo4j session closed after 643ms","service":"mindrune-api","timestamp":"2025-03-30 16:17:20"}
{"level":"info","message":"Neo4j insertion completed in 646ms","service":"mindrune-api","timestamp":"2025-03-30 16:17:20"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:17:20"}
{"level":"info","message":"SQL insertion completed in 14ms","service":"mindrune-api","timestamp":"2025-03-30 16:17:20"}
{"level":"info","message":"Total request processing time: 661ms","service":"mindrune-api","timestamp":"2025-03-30 16:17:20"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:18:19"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:18:19"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:18:19"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:18:19"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 16:18:19"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:18:19"}
{"level":"info","message":"Data size: 4412 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:18:19"}
{"level":"info","message":"Event count: 25","service":"mindrune-api","timestamp":"2025-03-30 16:18:19"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:18:19"}
{"level":"info","message":"Processing 25 events","service":"mindrune-api","timestamp":"2025-03-30 16:18:19"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:18:19"}
{"level":"info","message":"Player node updated in 112ms","service":"mindrune-api","timestamp":"2025-03-30 16:18:19"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-30 16:18:19"}
{"level":"info","message":"Processing batch of 24 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:18:19"}
{"level":"info","message":"Completed batch of 24 MENU_CLICK events in 554ms","service":"mindrune-api","timestamp":"2025-03-30 16:18:20"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-30 16:18:20"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 98ms","service":"mindrune-api","timestamp":"2025-03-30 16:18:20"}
{"level":"info","message":"All events processed in 652ms","service":"mindrune-api","timestamp":"2025-03-30 16:18:20"}
{"level":"info","message":"Total Neo4j operation time: 764ms","service":"mindrune-api","timestamp":"2025-03-30 16:18:20"}
{"level":"info","message":"Neo4j session closed after 764ms","service":"mindrune-api","timestamp":"2025-03-30 16:18:20"}
{"level":"info","message":"Neo4j insertion completed in 765ms","service":"mindrune-api","timestamp":"2025-03-30 16:18:20"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:18:20"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-30 16:18:20"}
{"level":"info","message":"Total request processing time: 778ms","service":"mindrune-api","timestamp":"2025-03-30 16:18:20"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:19:19"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:19:19"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:19:19"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:19:19"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-30 16:19:19"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:19:19"}
{"level":"info","message":"Data size: 1195 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:19:19"}
{"level":"info","message":"Event count: 6","service":"mindrune-api","timestamp":"2025-03-30 16:19:19"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:19:19"}
{"level":"info","message":"Processing 6 events","service":"mindrune-api","timestamp":"2025-03-30 16:19:19"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:19:19"}
{"level":"info","message":"Player node updated in 95ms","service":"mindrune-api","timestamp":"2025-03-30 16:19:19"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-30 16:19:19"}
{"level":"info","message":"Processing batch of 4 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:19:19"}
{"level":"info","message":"Completed batch of 4 MENU_CLICK events in 573ms","service":"mindrune-api","timestamp":"2025-03-30 16:19:20"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-30 16:19:20"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 95ms","service":"mindrune-api","timestamp":"2025-03-30 16:19:20"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 16:19:20"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 350ms","service":"mindrune-api","timestamp":"2025-03-30 16:19:20"}
{"level":"info","message":"All events processed in 1018ms","service":"mindrune-api","timestamp":"2025-03-30 16:19:20"}
{"level":"info","message":"Total Neo4j operation time: 1115ms","service":"mindrune-api","timestamp":"2025-03-30 16:19:20"}
{"level":"info","message":"Neo4j session closed after 1115ms","service":"mindrune-api","timestamp":"2025-03-30 16:19:20"}
{"level":"info","message":"Neo4j insertion completed in 1115ms","service":"mindrune-api","timestamp":"2025-03-30 16:19:20"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:19:20"}
{"level":"info","message":"SQL insertion completed in 15ms","service":"mindrune-api","timestamp":"2025-03-30 16:19:20"}
{"level":"info","message":"Total request processing time: 1132ms","service":"mindrune-api","timestamp":"2025-03-30 16:19:20"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:37:45"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:37:45"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:37:45"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:37:45"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 16:37:45"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:37:45"}
{"level":"info","message":"Data size: 280 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:37:45"}
{"level":"info","message":"Event count: 1","service":"mindrune-api","timestamp":"2025-03-30 16:37:45"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:37:45"}
{"level":"info","message":"Processing 1 events","service":"mindrune-api","timestamp":"2025-03-30 16:37:45"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:37:45"}
{"level":"info","message":"Player node updated in 137ms","service":"mindrune-api","timestamp":"2025-03-30 16:37:45"}
{"level":"info","message":"Grouped events into 1 types","service":"mindrune-api","timestamp":"2025-03-30 16:37:45"}
{"level":"info","message":"Processing batch of 1 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:37:45"}
{"level":"info","message":"Completed batch of 1 MENU_CLICK events in 760ms","service":"mindrune-api","timestamp":"2025-03-30 16:37:46"}
{"level":"info","message":"All events processed in 761ms","service":"mindrune-api","timestamp":"2025-03-30 16:37:46"}
{"level":"info","message":"Total Neo4j operation time: 898ms","service":"mindrune-api","timestamp":"2025-03-30 16:37:46"}
{"level":"info","message":"Neo4j session closed after 898ms","service":"mindrune-api","timestamp":"2025-03-30 16:37:46"}
{"level":"info","message":"Neo4j insertion completed in 899ms","service":"mindrune-api","timestamp":"2025-03-30 16:37:46"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:37:46"}
{"level":"info","message":"SQL insertion completed in 10ms","service":"mindrune-api","timestamp":"2025-03-30 16:37:46"}
{"level":"info","message":"Total request processing time: 911ms","service":"mindrune-api","timestamp":"2025-03-30 16:37:46"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:45:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:45:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:45:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:45:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 16:45:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:45:03"}
{"level":"info","message":"Data size: 3611 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:45:03"}
{"level":"info","message":"Event count: 20","service":"mindrune-api","timestamp":"2025-03-30 16:45:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:45:03"}
{"level":"info","message":"Processing 20 events","service":"mindrune-api","timestamp":"2025-03-30 16:45:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:45:03"}
{"level":"info","message":"Player node updated in 128ms","service":"mindrune-api","timestamp":"2025-03-30 16:45:03"}
{"level":"info","message":"Grouped events into 2 types","service":"mindrune-api","timestamp":"2025-03-30 16:45:03"}
{"level":"info","message":"Processing batch of 19 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:45:03"}
{"level":"info","message":"Completed batch of 19 MENU_CLICK events in 440ms","service":"mindrune-api","timestamp":"2025-03-30 16:45:04"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 16:45:04"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 323ms","service":"mindrune-api","timestamp":"2025-03-30 16:45:04"}
{"level":"info","message":"All events processed in 764ms","service":"mindrune-api","timestamp":"2025-03-30 16:45:04"}
{"level":"info","message":"Total Neo4j operation time: 893ms","service":"mindrune-api","timestamp":"2025-03-30 16:45:04"}
{"level":"info","message":"Neo4j session closed after 893ms","service":"mindrune-api","timestamp":"2025-03-30 16:45:04"}
{"level":"info","message":"Neo4j insertion completed in 894ms","service":"mindrune-api","timestamp":"2025-03-30 16:45:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:45:04"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-30 16:45:04"}
{"level":"info","message":"Total request processing time: 907ms","service":"mindrune-api","timestamp":"2025-03-30 16:45:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Data size: 5893 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Event count: 32","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Processing 32 events","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Player node updated in 96ms","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Grouped events into 5 types","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Processing batch of 27 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Completed batch of 27 MENU_CLICK events in 375ms","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Processing batch of 2 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-30 16:46:03"}
{"level":"info","message":"Completed batch of 2 XP_GAIN events in 223ms","service":"mindrune-api","timestamp":"2025-03-30 16:46:04"}
{"level":"info","message":"Processing batch of 1 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-30 16:46:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"source\":\"Player\",\"target\":\"Rat\",\"damage\":2,\"type\":16,\"typeString\":\"Damage\",\"direction\":\"outgoing\"},\"direction\":\"outgoing\",\"source\":\"Player\",\"typeString\":\"Damage\"}","service":"mindrune-api","timestamp":"2025-03-30 16:46:04"}
{"level":"info","message":"Processing 1 HIT_SPLAT events: 0 incoming, 1 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-30 16:46:04"}
{"level":"info","message":"Completed batch of 1 HIT_SPLAT events in 222ms","service":"mindrune-api","timestamp":"2025-03-30 16:46:04"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-30 16:46:04"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-30 16:46:04"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 397ms","service":"mindrune-api","timestamp":"2025-03-30 16:46:04"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 16:46:04"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 242ms","service":"mindrune-api","timestamp":"2025-03-30 16:46:05"}
{"level":"info","message":"All events processed in 1461ms","service":"mindrune-api","timestamp":"2025-03-30 16:46:05"}
{"level":"info","message":"Total Neo4j operation time: 1558ms","service":"mindrune-api","timestamp":"2025-03-30 16:46:05"}
{"level":"info","message":"Neo4j session closed after 1559ms","service":"mindrune-api","timestamp":"2025-03-30 16:46:05"}
{"level":"info","message":"Neo4j insertion completed in 1560ms","service":"mindrune-api","timestamp":"2025-03-30 16:46:05"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:46:05"}
{"level":"info","message":"SQL insertion completed in 12ms","service":"mindrune-api","timestamp":"2025-03-30 16:46:05"}
{"level":"info","message":"Total request processing time: 1574ms","service":"mindrune-api","timestamp":"2025-03-30 16:46:05"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Data size: 5245 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Event count: 28","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Processing 28 events","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Player node updated in 92ms","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Processing batch of 19 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Completed batch of 19 MENU_CLICK events in 367ms","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Processing batch of 1 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 16:47:03"}
{"level":"info","message":"Completed batch of 1 INVENTORY_CHANGE events in 241ms","service":"mindrune-api","timestamp":"2025-03-30 16:47:04"}
{"level":"info","message":"Processing batch of 4 HIT_SPLAT events","service":"mindrune-api","timestamp":"2025-03-30 16:47:04"}
{"level":"info","message":"Sample HIT_SPLAT event: {\"details\":{\"target\":\"Player\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Block\",\"direction\":\"incoming\"},\"direction\":\"incoming\",\"source\":\"Block\",\"typeString\":\"Block\"}","service":"mindrune-api","timestamp":"2025-03-30 16:47:04"}
{"level":"info","message":"Processing 4 HIT_SPLAT events: 2 incoming, 2 outgoing, 0 unknown","service":"mindrune-api","timestamp":"2025-03-30 16:47:04"}
{"level":"info","message":"Sample processed incoming event: {\"event_uuid\":\"55a8dc9b-62da-449e-b030-db6735c4022f_14\",\"timestamp\":\"2025-03-30T20:46:36.102172Z\",\"damage\":0,\"type\":12,\"typeString\":\"Block\",\"source\":\"Block\",\"isAffliction\":false,\"isDamageType\":true,\"isMaxHit\":false,\"hasLocation\":true,\"locationX\":2923,\"locationY\":3267,\"locationPlane\":0}","service":"mindrune-api","timestamp":"2025-03-30 16:47:04"}
{"level":"info","message":"Completed batch of 4 HIT_SPLAT events in 488ms","service":"mindrune-api","timestamp":"2025-03-30 16:47:04"}
{"level":"info","message":"Processing batch of 4 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-30 16:47:04"}
{"level":"info","message":"Completed batch of 4 XP_GAIN events in 171ms","service":"mindrune-api","timestamp":"2025-03-30 16:47:04"}
{"level":"info","message":"All events processed in 1268ms","service":"mindrune-api","timestamp":"2025-03-30 16:47:04"}
{"level":"info","message":"Total Neo4j operation time: 1362ms","service":"mindrune-api","timestamp":"2025-03-30 16:47:04"}
{"level":"info","message":"Neo4j session closed after 1362ms","service":"mindrune-api","timestamp":"2025-03-30 16:47:04"}
{"level":"info","message":"Neo4j insertion completed in 1362ms","service":"mindrune-api","timestamp":"2025-03-30 16:47:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:47:04"}
{"level":"info","message":"SQL insertion completed in 11ms","service":"mindrune-api","timestamp":"2025-03-30 16:47:04"}
{"level":"info","message":"Total request processing time: 1375ms","service":"mindrune-api","timestamp":"2025-03-30 16:47:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Spam protection check completed in 2ms","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Data size: 5319 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Event count: 28","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Processing 28 events","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Player node updated in 302ms","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Grouped events into 4 types","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Processing batch of 1 MONSTER_KILL events","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Processing 1 monster kills","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Completed batch of 1 MONSTER_KILL events in 102ms","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Processing batch of 23 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:48:03"}
{"level":"info","message":"Completed batch of 23 MENU_CLICK events in 374ms","service":"mindrune-api","timestamp":"2025-03-30 16:48:04"}
{"level":"info","message":"Processing batch of 3 INVENTORY_CHANGE events","service":"mindrune-api","timestamp":"2025-03-30 16:48:04"}
{"level":"info","message":"Completed batch of 3 INVENTORY_CHANGE events in 465ms","service":"mindrune-api","timestamp":"2025-03-30 16:48:04"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-30 16:48:04"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 154ms","service":"mindrune-api","timestamp":"2025-03-30 16:48:04"}
{"level":"info","message":"All events processed in 1097ms","service":"mindrune-api","timestamp":"2025-03-30 16:48:04"}
{"level":"info","message":"Total Neo4j operation time: 1400ms","service":"mindrune-api","timestamp":"2025-03-30 16:48:04"}
{"level":"info","message":"Neo4j session closed after 1400ms","service":"mindrune-api","timestamp":"2025-03-30 16:48:04"}
{"level":"info","message":"Neo4j insertion completed in 1400ms","service":"mindrune-api","timestamp":"2025-03-30 16:48:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:48:04"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-30 16:48:04"}
{"level":"info","message":"Total request processing time: 1415ms","service":"mindrune-api","timestamp":"2025-03-30 16:48:04"}
{"level":"info","message":"Starting create request for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:49:03"}
{"level":"info","message":"Starting spam protection check for oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:49:03"}
{"level":"info","message":"Checking if oauth2|discord|177946696251211776 is spamming with request type: create","service":"mindrune-api","timestamp":"2025-03-30 16:49:03"}
{"level":"info","message":"Found 0 recent create transactions for account oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:49:03"}
{"level":"info","message":"Spam protection check completed in 1ms","service":"mindrune-api","timestamp":"2025-03-30 16:49:03"}
{"level":"info","message":"Starting Neo4j data insertion for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:49:03"}
{"level":"info","message":"Data size: 2383 bytes","service":"mindrune-api","timestamp":"2025-03-30 16:49:03"}
{"level":"info","message":"Event count: 12","service":"mindrune-api","timestamp":"2025-03-30 16:49:03"}
{"level":"info","message":"Starting insertIntoNeo4j for account: oauth2|discord|177946696251211776","service":"mindrune-api","timestamp":"2025-03-30 16:49:03"}
{"level":"info","message":"Processing 12 events","service":"mindrune-api","timestamp":"2025-03-30 16:49:03"}
{"level":"info","message":"Creating/updating player node","service":"mindrune-api","timestamp":"2025-03-30 16:49:03"}
{"level":"info","message":"Player node updated in 96ms","service":"mindrune-api","timestamp":"2025-03-30 16:49:03"}
{"level":"info","message":"Grouped events into 3 types","service":"mindrune-api","timestamp":"2025-03-30 16:49:03"}
{"level":"info","message":"Processing batch of 10 MENU_CLICK events","service":"mindrune-api","timestamp":"2025-03-30 16:49:03"}
{"level":"info","message":"Completed batch of 10 MENU_CLICK events in 507ms","service":"mindrune-api","timestamp":"2025-03-30 16:49:04"}
{"level":"info","message":"Processing batch of 1 QUEST_COMPLETION events","service":"mindrune-api","timestamp":"2025-03-30 16:49:04"}
{"level":"info","message":"Completed batch of 1 QUEST_COMPLETION events in 242ms","service":"mindrune-api","timestamp":"2025-03-30 16:49:04"}
{"level":"info","message":"Processing batch of 1 XP_GAIN events","service":"mindrune-api","timestamp":"2025-03-30 16:49:04"}
{"level":"info","message":"Completed batch of 1 XP_GAIN events in 96ms","service":"mindrune-api","timestamp":"2025-03-30 16:49:04"}
{"level":"info","message":"All events processed in 846ms","service":"mindrune-api","timestamp":"2025-03-30 16:49:04"}
{"level":"info","message":"Total Neo4j operation time: 943ms","service":"mindrune-api","timestamp":"2025-03-30 16:49:04"}
{"level":"info","message":"Neo4j session closed after 943ms","service":"mindrune-api","timestamp":"2025-03-30 16:49:04"}
{"level":"info","message":"Neo4j insertion completed in 944ms","service":"mindrune-api","timestamp":"2025-03-30 16:49:04"}
{"level":"info","message":"Starting SQL insertion","service":"mindrune-api","timestamp":"2025-03-30 16:49:04"}
{"level":"info","message":"SQL insertion completed in 13ms","service":"mindrune-api","timestamp":"2025-03-30 16:49:04"}
{"level":"info","message":"Total request processing time: 958ms","service":"mindrune-api","timestamp":"2025-03-30 16:49:04"}
